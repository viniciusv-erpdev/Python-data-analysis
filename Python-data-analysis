{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyN2GiFsJK8fauIS9TJiEnKH",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/viniciusv-erpdev/Python-data-analysis/blob/main/Python-data-analysis\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "UBq7xs08c6QU"
      },
      "outputs": [],
      "source": [
        "#pandas é uma ferramenta para análise de dados para python\n",
        "\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import polars as pl\n",
        "import matplotlib.pyplot as plt\n",
        "pd.set_option('display.max_columns', 100)\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv('dados_enem_2021_BA.csv')"
      ],
      "metadata": {
        "id": "EQPccRDFdwIT"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Leitura das 5 primeiras linhas\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "id": "HBA2FMNmfVPW",
        "outputId": "0a691be1-8815-42cd-95d9-79cd74f69311"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   NU_INSCRICAO  NU_ANO  TP_FAIXA_ETARIA TP_SEXO  TP_ESTADO_CIVIL  \\\n",
              "0  210051128744    2021                4       F                1   \n",
              "1  210054173438    2021                5       F                1   \n",
              "2  210052118573    2021                3       F                1   \n",
              "3  210052350230    2021               10       F                1   \n",
              "4  210053156861    2021                9       M                1   \n",
              "\n",
              "   TP_COR_RACA  TP_NACIONALIDADE  TP_ST_CONCLUSAO  TP_ANO_CONCLUIU  TP_ESCOLA  \\\n",
              "0            3                 1                2                0          2   \n",
              "1            2                 1                2                0          2   \n",
              "2            3                 1                2                0          2   \n",
              "3            2                 1                1                8          1   \n",
              "4            2                 1                1                5          1   \n",
              "\n",
              "   TP_ENSINO  IN_TREINEIRO  CO_MUNICIPIO_ESC NO_MUNICIPIO_ESC  CO_UF_ESC  \\\n",
              "0        1.0             0               NaN              NaN        NaN   \n",
              "1        1.0             0         2927408.0         Salvador       29.0   \n",
              "2        1.0             0               NaN              NaN        NaN   \n",
              "3        NaN             0               NaN              NaN        NaN   \n",
              "4        NaN             0               NaN              NaN        NaN   \n",
              "\n",
              "  SG_UF_ESC  TP_DEPENDENCIA_ADM_ESC  TP_LOCALIZACAO_ESC  TP_SIT_FUNC_ESC  \\\n",
              "0       NaN                     NaN                 NaN              NaN   \n",
              "1        BA                     1.0                 1.0              1.0   \n",
              "2       NaN                     NaN                 NaN              NaN   \n",
              "3       NaN                     NaN                 NaN              NaN   \n",
              "4       NaN                     NaN                 NaN              NaN   \n",
              "\n",
              "   CO_MUNICIPIO_PROVA NO_MUNICIPIO_PROVA  CO_UF_PROVA SG_UF_PROVA  \\\n",
              "0             2927200        Ruy Barbosa           29          BA   \n",
              "1             2927408           Salvador           29          BA   \n",
              "2             2903201          Barreiras           29          BA   \n",
              "3             2928802      Santo Estêvão           29          BA   \n",
              "4             2910800   Feira de Santana           29          BA   \n",
              "\n",
              "   TP_PRESENCA_CN  TP_PRESENCA_CH  TP_PRESENCA_LC  TP_PRESENCA_MT  \\\n",
              "0               1               1               1               1   \n",
              "1               0               0               0               0   \n",
              "2               1               1               1               1   \n",
              "3               1               1               1               1   \n",
              "4               1               1               1               1   \n",
              "\n",
              "   CO_PROVA_CN  CO_PROVA_CH  CO_PROVA_LC  CO_PROVA_MT  NU_NOTA_CN  NU_NOTA_CH  \\\n",
              "0        909.0        881.0        892.0        899.0       507.6       539.2   \n",
              "1          NaN          NaN          NaN          NaN         NaN         NaN   \n",
              "2        912.0        882.0        891.0        901.0       439.6       437.7   \n",
              "3        911.0        880.0        890.0        902.0       548.1       619.5   \n",
              "4       1014.0       1000.0       1004.0       1010.0       465.2       613.1   \n",
              "\n",
              "   NU_NOTA_LC  NU_NOTA_MT                                TX_RESPOSTAS_CN  \\\n",
              "0       494.6       413.3  BAEDEBDECCEAEDDCBDEDAEECEEEDBDECBDCECBCCDABED   \n",
              "1         NaN         NaN                                            NaN   \n",
              "2       455.9       446.2  BCEDEACAEDCEDCBDDCCAADABADDEBEECBACDCCABBDCCA   \n",
              "3       676.3       386.6  CCAECCADEAADDEDDEECEDDEADDDCACDEDCDCDEADBEDDE   \n",
              "4       522.1       579.6  CDCCBDBBDCBACEBDACBCACADBCBECCEBCDDEBDACEECCD   \n",
              "\n",
              "                                 TX_RESPOSTAS_CH  \\\n",
              "0  EEEBAABCBCDBEAEBEACEDDEDECACBDBCDACECDAECBCBD   \n",
              "1                                            NaN   \n",
              "2  AAEADCDCAAADCBBBAABBEAEDABCDAACDDCBDAAABAABBB   \n",
              "3  DBBEADDCABABCECEAEBEAEDCBCAEABEEDEBBEAABCBDCD   \n",
              "4  CCBAADECCBACBECCBEADAEBEACBEBBEADEBBABDACDEBC   \n",
              "\n",
              "                                     TX_RESPOSTAS_LC  \\\n",
              "0  99999ACAEEEEBDEACDACDEABCEABBDEDBAEEBDEEACDBAC...   \n",
              "1                                                NaN   \n",
              "2  EDBEC99999DDAAEBBDCDBBAABDECAADAEACCDABCEABABE...   \n",
              "3  ABCCA99999DDCACDCACABBEAAEBDAEEBDEEAADACEEDDDB...   \n",
              "4  BADCE99999DABAABBABBBCEDBDCDABEABCBBDCACBABAAA...   \n",
              "\n",
              "                                 TX_RESPOSTAS_MT  TP_LINGUA  \\\n",
              "0  BACEACDACBAAAEDCECABBACDCDBBA.CEABCDADADBECBE          1   \n",
              "1                                            NaN          0   \n",
              "2  EBBEBDCCDDCDCBADABBBCCEABDADCBCCACBDACDCDADCE          0   \n",
              "3  CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA          0   \n",
              "4  CCBACBBCCCCEDDDDCBCCDCACCCBBBDDDBCBADDBCABACA          0   \n",
              "\n",
              "                                  TX_GABARITO_CN  \\\n",
              "0  EDECABEDABCBEBACCDCBBEEBBCBDAAECDCBDCDBBBADCD   \n",
              "1                                            NaN   \n",
              "2  DABCEDEBEEBBCABEDDCBCBECDADCDAACBDCCCDBBBEBAB   \n",
              "3  CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB   \n",
              "4  CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB   \n",
              "\n",
              "                                  TX_GABARITO_CH  \\\n",
              "0  BEECCAEABADBCAEBAAEEDDEBBBADBCBAAEEBBBADCCBBA   \n",
              "1                                            NaN   \n",
              "2  EBAAEADBCACBBABEECBAAEEBBBADCBADBCEDDEBBCAEAB   \n",
              "3  BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC   \n",
              "4  BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC   \n",
              "\n",
              "                                      TX_GABARITO_LC  \\\n",
              "0  ABBACAAECACDBDDADEBDDCBDCEDBEDDBBBBDCEEAADABAC...   \n",
              "1                                                NaN   \n",
              "2  ACABBACAEADCEADABDACDCEABDDADBEDDDEBBACCDDDCCE...   \n",
              "3  ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...   \n",
              "4  ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...   \n",
              "\n",
              "                                  TX_GABARITO_MT  TP_STATUS_REDACAO  \\\n",
              "0  EEXEBABDDCECCBCCECDCAEBADEABBDBDEDCEDCCADDCAB                1.0   \n",
              "1                                            NaN                NaN   \n",
              "2  DCCAEBABDDCABEECCBCCEXADDCEECDEBADCABBDBDEDCE                1.0   \n",
              "3  ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA                1.0   \n",
              "4  ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA                1.0   \n",
              "\n",
              "   NU_NOTA_COMP1  NU_NOTA_COMP2  NU_NOTA_COMP3  NU_NOTA_COMP4  NU_NOTA_COMP5  \\\n",
              "0           80.0          120.0           80.0           80.0           20.0   \n",
              "1            NaN            NaN            NaN            NaN            NaN   \n",
              "2           80.0          120.0           80.0          100.0           80.0   \n",
              "3          120.0          120.0          100.0          120.0          120.0   \n",
              "4          100.0          120.0          100.0          120.0          100.0   \n",
              "\n",
              "   NU_NOTA_REDACAO  \n",
              "0            380.0  \n",
              "1              NaN  \n",
              "2            460.0  \n",
              "3            580.0  \n",
              "4            540.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-910fdc8b-c1eb-462a-812e-7c088cd6a4c5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>NU_INSCRICAO</th>\n",
              "      <th>NU_ANO</th>\n",
              "      <th>TP_FAIXA_ETARIA</th>\n",
              "      <th>TP_SEXO</th>\n",
              "      <th>TP_ESTADO_CIVIL</th>\n",
              "      <th>TP_COR_RACA</th>\n",
              "      <th>TP_NACIONALIDADE</th>\n",
              "      <th>TP_ST_CONCLUSAO</th>\n",
              "      <th>TP_ANO_CONCLUIU</th>\n",
              "      <th>TP_ESCOLA</th>\n",
              "      <th>TP_ENSINO</th>\n",
              "      <th>IN_TREINEIRO</th>\n",
              "      <th>CO_MUNICIPIO_ESC</th>\n",
              "      <th>NO_MUNICIPIO_ESC</th>\n",
              "      <th>CO_UF_ESC</th>\n",
              "      <th>SG_UF_ESC</th>\n",
              "      <th>TP_DEPENDENCIA_ADM_ESC</th>\n",
              "      <th>TP_LOCALIZACAO_ESC</th>\n",
              "      <th>TP_SIT_FUNC_ESC</th>\n",
              "      <th>CO_MUNICIPIO_PROVA</th>\n",
              "      <th>NO_MUNICIPIO_PROVA</th>\n",
              "      <th>CO_UF_PROVA</th>\n",
              "      <th>SG_UF_PROVA</th>\n",
              "      <th>TP_PRESENCA_CN</th>\n",
              "      <th>TP_PRESENCA_CH</th>\n",
              "      <th>TP_PRESENCA_LC</th>\n",
              "      <th>TP_PRESENCA_MT</th>\n",
              "      <th>CO_PROVA_CN</th>\n",
              "      <th>CO_PROVA_CH</th>\n",
              "      <th>CO_PROVA_LC</th>\n",
              "      <th>CO_PROVA_MT</th>\n",
              "      <th>NU_NOTA_CN</th>\n",
              "      <th>NU_NOTA_CH</th>\n",
              "      <th>NU_NOTA_LC</th>\n",
              "      <th>NU_NOTA_MT</th>\n",
              "      <th>TX_RESPOSTAS_CN</th>\n",
              "      <th>TX_RESPOSTAS_CH</th>\n",
              "      <th>TX_RESPOSTAS_LC</th>\n",
              "      <th>TX_RESPOSTAS_MT</th>\n",
              "      <th>TP_LINGUA</th>\n",
              "      <th>TX_GABARITO_CN</th>\n",
              "      <th>TX_GABARITO_CH</th>\n",
              "      <th>TX_GABARITO_LC</th>\n",
              "      <th>TX_GABARITO_MT</th>\n",
              "      <th>TP_STATUS_REDACAO</th>\n",
              "      <th>NU_NOTA_COMP1</th>\n",
              "      <th>NU_NOTA_COMP2</th>\n",
              "      <th>NU_NOTA_COMP3</th>\n",
              "      <th>NU_NOTA_COMP4</th>\n",
              "      <th>NU_NOTA_COMP5</th>\n",
              "      <th>NU_NOTA_REDACAO</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>210051128744</td>\n",
              "      <td>2021</td>\n",
              "      <td>4</td>\n",
              "      <td>F</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927200</td>\n",
              "      <td>Ruy Barbosa</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>909.0</td>\n",
              "      <td>881.0</td>\n",
              "      <td>892.0</td>\n",
              "      <td>899.0</td>\n",
              "      <td>507.6</td>\n",
              "      <td>539.2</td>\n",
              "      <td>494.6</td>\n",
              "      <td>413.3</td>\n",
              "      <td>BAEDEBDECCEAEDDCBDEDAEECEEEDBDECBDCECBCCDABED</td>\n",
              "      <td>EEEBAABCBCDBEAEBEACEDDEDECACBDBCDACECDAECBCBD</td>\n",
              "      <td>99999ACAEEEEBDEACDACDEABCEABBDEDBAEEBDEEACDBAC...</td>\n",
              "      <td>BACEACDACBAAAEDCECABBACDCDBBA.CEABCDADADBECBE</td>\n",
              "      <td>1</td>\n",
              "      <td>EDECABEDABCBEBACCDCBBEEBBCBDAAECDCBDCDBBBADCD</td>\n",
              "      <td>BEECCAEABADBCAEBAAEEDDEBBBADBCBAAEEBBBADCCBBA</td>\n",
              "      <td>ABBACAAECACDBDDADEBDDCBDCEDBEDDBBBBDCEEAADABAC...</td>\n",
              "      <td>EEXEBABDDCECCBCCECDCAEBADEABBDBDEDCEDCCADDCAB</td>\n",
              "      <td>1.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>380.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>210054173438</td>\n",
              "      <td>2021</td>\n",
              "      <td>5</td>\n",
              "      <td>F</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2927408.0</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29.0</td>\n",
              "      <td>BA</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2927408</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>210052118573</td>\n",
              "      <td>2021</td>\n",
              "      <td>3</td>\n",
              "      <td>F</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2903201</td>\n",
              "      <td>Barreiras</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>912.0</td>\n",
              "      <td>882.0</td>\n",
              "      <td>891.0</td>\n",
              "      <td>901.0</td>\n",
              "      <td>439.6</td>\n",
              "      <td>437.7</td>\n",
              "      <td>455.9</td>\n",
              "      <td>446.2</td>\n",
              "      <td>BCEDEACAEDCEDCBDDCCAADABADDEBEECBACDCCABBDCCA</td>\n",
              "      <td>AAEADCDCAAADCBBBAABBEAEDABCDAACDDCBDAAABAABBB</td>\n",
              "      <td>EDBEC99999DDAAEBBDCDBBAABDECAADAEACCDABCEABABE...</td>\n",
              "      <td>EBBEBDCCDDCDCBADABBBCCEABDADCBCCACBDACDCDADCE</td>\n",
              "      <td>0</td>\n",
              "      <td>DABCEDEBEEBBCABEDDCBCBECDADCDAACBDCCCDBBBEBAB</td>\n",
              "      <td>EBAAEADBCACBBABEECBAAEEBBBADCBADBCEDDEBBCAEAB</td>\n",
              "      <td>ACABBACAEADCEADABDACDCEABDDADBEDDDEBBACCDDDCCE...</td>\n",
              "      <td>DCCAEBABDDCABEECCBCCEXADDCEECDEBADCABBDBDEDCE</td>\n",
              "      <td>1.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>460.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>210052350230</td>\n",
              "      <td>2021</td>\n",
              "      <td>10</td>\n",
              "      <td>F</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2928802</td>\n",
              "      <td>Santo Estêvão</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>911.0</td>\n",
              "      <td>880.0</td>\n",
              "      <td>890.0</td>\n",
              "      <td>902.0</td>\n",
              "      <td>548.1</td>\n",
              "      <td>619.5</td>\n",
              "      <td>676.3</td>\n",
              "      <td>386.6</td>\n",
              "      <td>CCAECCADEAADDEDDEECEDDEADDDCACDEDCDCDEADBEDDE</td>\n",
              "      <td>DBBEADDCABABCECEAEBEAEDCBCAEABEEDEBBEAABCBDCD</td>\n",
              "      <td>ABCCA99999DDCACDCACABBEAAEBDAEEBDEEAADACEEDDDB...</td>\n",
              "      <td>CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</td>\n",
              "      <td>0</td>\n",
              "      <td>CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB</td>\n",
              "      <td>BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC</td>\n",
              "      <td>ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...</td>\n",
              "      <td>ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA</td>\n",
              "      <td>1.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>580.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>210053156861</td>\n",
              "      <td>2021</td>\n",
              "      <td>9</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2910800</td>\n",
              "      <td>Feira de Santana</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1014.0</td>\n",
              "      <td>1000.0</td>\n",
              "      <td>1004.0</td>\n",
              "      <td>1010.0</td>\n",
              "      <td>465.2</td>\n",
              "      <td>613.1</td>\n",
              "      <td>522.1</td>\n",
              "      <td>579.6</td>\n",
              "      <td>CDCCBDBBDCBACEBDACBCACADBCBECCEBCDDEBDACEECCD</td>\n",
              "      <td>CCBAADECCBACBECCBEADAEBEACBEBBEADEBBABDACDEBC</td>\n",
              "      <td>BADCE99999DABAABBABBBCEDBDCDABEABCBBDCACBABAAA...</td>\n",
              "      <td>CCBACBBCCCCEDDDDCBCCDCACCCBBBDDDBCBADDBCABACA</td>\n",
              "      <td>0</td>\n",
              "      <td>CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB</td>\n",
              "      <td>BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC</td>\n",
              "      <td>ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...</td>\n",
              "      <td>ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA</td>\n",
              "      <td>1.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>540.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-910fdc8b-c1eb-462a-812e-7c088cd6a4c5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-910fdc8b-c1eb-462a-812e-7c088cd6a4c5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-910fdc8b-c1eb-462a-812e-7c088cd6a4c5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-629e062e-5a9e-4413-89c7-58c6610fa4d9\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-629e062e-5a9e-4413-89c7-58c6610fa4d9')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-629e062e-5a9e-4413-89c7-58c6610fa4d9 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Leitura das 5 últimas linhas\n",
        "df.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "id": "siLC3cdWitTK",
        "outputId": "708e60f9-706c-43e2-d2e9-413f505c8a55"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        NU_INSCRICAO  NU_ANO  TP_FAIXA_ETARIA TP_SEXO  TP_ESTADO_CIVIL  \\\n",
              "266189  210051432069    2021               12       M                1   \n",
              "266190  210051106175    2021               14       M                2   \n",
              "266191  210051995005    2021               11       M                0   \n",
              "266192  210053234415    2021               12       M                2   \n",
              "266193  210054027870    2021                5       F                1   \n",
              "\n",
              "        TP_COR_RACA  TP_NACIONALIDADE  TP_ST_CONCLUSAO  TP_ANO_CONCLUIU  \\\n",
              "266189            3                 1                1                0   \n",
              "266190            2                 1                1                0   \n",
              "266191            2                 1                1               12   \n",
              "266192            2                 1                1               15   \n",
              "266193            2                 1                1                2   \n",
              "\n",
              "        TP_ESCOLA  TP_ENSINO  IN_TREINEIRO  CO_MUNICIPIO_ESC NO_MUNICIPIO_ESC  \\\n",
              "266189          1        NaN             0               NaN              NaN   \n",
              "266190          1        NaN             0               NaN              NaN   \n",
              "266191          1        NaN             0               NaN              NaN   \n",
              "266192          1        NaN             0               NaN              NaN   \n",
              "266193          1        NaN             0               NaN              NaN   \n",
              "\n",
              "        CO_UF_ESC SG_UF_ESC  TP_DEPENDENCIA_ADM_ESC  TP_LOCALIZACAO_ESC  \\\n",
              "266189        NaN       NaN                     NaN                 NaN   \n",
              "266190        NaN       NaN                     NaN                 NaN   \n",
              "266191        NaN       NaN                     NaN                 NaN   \n",
              "266192        NaN       NaN                     NaN                 NaN   \n",
              "266193        NaN       NaN                     NaN                 NaN   \n",
              "\n",
              "        TP_SIT_FUNC_ESC  CO_MUNICIPIO_PROVA NO_MUNICIPIO_PROVA  CO_UF_PROVA  \\\n",
              "266189              NaN             2900702         Alagoinhas           29   \n",
              "266190              NaN             2918407           Juazeiro           29   \n",
              "266191              NaN             2927408           Salvador           29   \n",
              "266192              NaN             2927408           Salvador           29   \n",
              "266193              NaN             2927408           Salvador           29   \n",
              "\n",
              "       SG_UF_PROVA  TP_PRESENCA_CN  TP_PRESENCA_CH  TP_PRESENCA_LC  \\\n",
              "266189          BA               0               0               0   \n",
              "266190          BA               0               0               0   \n",
              "266191          BA               0               0               0   \n",
              "266192          BA               0               0               0   \n",
              "266193          BA               0               0               0   \n",
              "\n",
              "        TP_PRESENCA_MT  CO_PROVA_CN  CO_PROVA_CH  CO_PROVA_LC  CO_PROVA_MT  \\\n",
              "266189               0          NaN          NaN          NaN          NaN   \n",
              "266190               0          NaN          NaN          NaN          NaN   \n",
              "266191               0          NaN          NaN          NaN          NaN   \n",
              "266192               0          NaN          NaN          NaN          NaN   \n",
              "266193               0          NaN          NaN          NaN          NaN   \n",
              "\n",
              "        NU_NOTA_CN  NU_NOTA_CH  NU_NOTA_LC  NU_NOTA_MT TX_RESPOSTAS_CN  \\\n",
              "266189         NaN         NaN         NaN         NaN             NaN   \n",
              "266190         NaN         NaN         NaN         NaN             NaN   \n",
              "266191         NaN         NaN         NaN         NaN             NaN   \n",
              "266192         NaN         NaN         NaN         NaN             NaN   \n",
              "266193         NaN         NaN         NaN         NaN             NaN   \n",
              "\n",
              "       TX_RESPOSTAS_CH TX_RESPOSTAS_LC TX_RESPOSTAS_MT  TP_LINGUA  \\\n",
              "266189             NaN             NaN             NaN          1   \n",
              "266190             NaN             NaN             NaN          1   \n",
              "266191             NaN             NaN             NaN          1   \n",
              "266192             NaN             NaN             NaN          1   \n",
              "266193             NaN             NaN             NaN          0   \n",
              "\n",
              "       TX_GABARITO_CN TX_GABARITO_CH TX_GABARITO_LC TX_GABARITO_MT  \\\n",
              "266189            NaN            NaN            NaN            NaN   \n",
              "266190            NaN            NaN            NaN            NaN   \n",
              "266191            NaN            NaN            NaN            NaN   \n",
              "266192            NaN            NaN            NaN            NaN   \n",
              "266193            NaN            NaN            NaN            NaN   \n",
              "\n",
              "        TP_STATUS_REDACAO  NU_NOTA_COMP1  NU_NOTA_COMP2  NU_NOTA_COMP3  \\\n",
              "266189                NaN            NaN            NaN            NaN   \n",
              "266190                NaN            NaN            NaN            NaN   \n",
              "266191                NaN            NaN            NaN            NaN   \n",
              "266192                NaN            NaN            NaN            NaN   \n",
              "266193                NaN            NaN            NaN            NaN   \n",
              "\n",
              "        NU_NOTA_COMP4  NU_NOTA_COMP5  NU_NOTA_REDACAO  \n",
              "266189            NaN            NaN              NaN  \n",
              "266190            NaN            NaN              NaN  \n",
              "266191            NaN            NaN              NaN  \n",
              "266192            NaN            NaN              NaN  \n",
              "266193            NaN            NaN              NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7889f485-3c1d-4bfd-ac76-e102217b0a3c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>NU_INSCRICAO</th>\n",
              "      <th>NU_ANO</th>\n",
              "      <th>TP_FAIXA_ETARIA</th>\n",
              "      <th>TP_SEXO</th>\n",
              "      <th>TP_ESTADO_CIVIL</th>\n",
              "      <th>TP_COR_RACA</th>\n",
              "      <th>TP_NACIONALIDADE</th>\n",
              "      <th>TP_ST_CONCLUSAO</th>\n",
              "      <th>TP_ANO_CONCLUIU</th>\n",
              "      <th>TP_ESCOLA</th>\n",
              "      <th>TP_ENSINO</th>\n",
              "      <th>IN_TREINEIRO</th>\n",
              "      <th>CO_MUNICIPIO_ESC</th>\n",
              "      <th>NO_MUNICIPIO_ESC</th>\n",
              "      <th>CO_UF_ESC</th>\n",
              "      <th>SG_UF_ESC</th>\n",
              "      <th>TP_DEPENDENCIA_ADM_ESC</th>\n",
              "      <th>TP_LOCALIZACAO_ESC</th>\n",
              "      <th>TP_SIT_FUNC_ESC</th>\n",
              "      <th>CO_MUNICIPIO_PROVA</th>\n",
              "      <th>NO_MUNICIPIO_PROVA</th>\n",
              "      <th>CO_UF_PROVA</th>\n",
              "      <th>SG_UF_PROVA</th>\n",
              "      <th>TP_PRESENCA_CN</th>\n",
              "      <th>TP_PRESENCA_CH</th>\n",
              "      <th>TP_PRESENCA_LC</th>\n",
              "      <th>TP_PRESENCA_MT</th>\n",
              "      <th>CO_PROVA_CN</th>\n",
              "      <th>CO_PROVA_CH</th>\n",
              "      <th>CO_PROVA_LC</th>\n",
              "      <th>CO_PROVA_MT</th>\n",
              "      <th>NU_NOTA_CN</th>\n",
              "      <th>NU_NOTA_CH</th>\n",
              "      <th>NU_NOTA_LC</th>\n",
              "      <th>NU_NOTA_MT</th>\n",
              "      <th>TX_RESPOSTAS_CN</th>\n",
              "      <th>TX_RESPOSTAS_CH</th>\n",
              "      <th>TX_RESPOSTAS_LC</th>\n",
              "      <th>TX_RESPOSTAS_MT</th>\n",
              "      <th>TP_LINGUA</th>\n",
              "      <th>TX_GABARITO_CN</th>\n",
              "      <th>TX_GABARITO_CH</th>\n",
              "      <th>TX_GABARITO_LC</th>\n",
              "      <th>TX_GABARITO_MT</th>\n",
              "      <th>TP_STATUS_REDACAO</th>\n",
              "      <th>NU_NOTA_COMP1</th>\n",
              "      <th>NU_NOTA_COMP2</th>\n",
              "      <th>NU_NOTA_COMP3</th>\n",
              "      <th>NU_NOTA_COMP4</th>\n",
              "      <th>NU_NOTA_COMP5</th>\n",
              "      <th>NU_NOTA_REDACAO</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>266189</th>\n",
              "      <td>210051432069</td>\n",
              "      <td>2021</td>\n",
              "      <td>12</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2900702</td>\n",
              "      <td>Alagoinhas</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266190</th>\n",
              "      <td>210051106175</td>\n",
              "      <td>2021</td>\n",
              "      <td>14</td>\n",
              "      <td>M</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2918407</td>\n",
              "      <td>Juazeiro</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266191</th>\n",
              "      <td>210051995005</td>\n",
              "      <td>2021</td>\n",
              "      <td>11</td>\n",
              "      <td>M</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927408</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266192</th>\n",
              "      <td>210053234415</td>\n",
              "      <td>2021</td>\n",
              "      <td>12</td>\n",
              "      <td>M</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927408</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266193</th>\n",
              "      <td>210054027870</td>\n",
              "      <td>2021</td>\n",
              "      <td>5</td>\n",
              "      <td>F</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927408</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7889f485-3c1d-4bfd-ac76-e102217b0a3c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7889f485-3c1d-4bfd-ac76-e102217b0a3c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7889f485-3c1d-4bfd-ac76-e102217b0a3c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-0c112fa3-2450-4936-af1f-8cfc7c760bed\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0c112fa3-2450-4936-af1f-8cfc7c760bed')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-0c112fa3-2450-4936-af1f-8cfc7c760bed button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Quantidade de linhas x de uma coluna\n",
        "# O resultado é uma tupla - podemos verificar com a função type()"
      ],
      "metadata": {
        "id": "_A6jqrA0jkWo"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 383
        },
        "id": "Mbt_gCRWHT30",
        "outputId": "bea1c75d-79ca-4561-f194-e2e76304534b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   NU_INSCRICAO  NU_ANO  TP_FAIXA_ETARIA TP_SEXO  TP_ESTADO_CIVIL  \\\n",
              "0  210051128744    2021                4       F                1   \n",
              "1  210054173438    2021                5       F                1   \n",
              "2  210052118573    2021                3       F                1   \n",
              "3  210052350230    2021               10       F                1   \n",
              "4  210053156861    2021                9       M                1   \n",
              "5  210053085526    2021                3       M                1   \n",
              "6  210053741476    2021                6       F                1   \n",
              "7  210053790986    2021                1       M                1   \n",
              "8  210051521447    2021                7       F                1   \n",
              "9  210054171092    2021                4       M                1   \n",
              "\n",
              "   TP_COR_RACA  TP_NACIONALIDADE  TP_ST_CONCLUSAO  TP_ANO_CONCLUIU  TP_ESCOLA  \\\n",
              "0            3                 1                2                0          2   \n",
              "1            2                 1                2                0          2   \n",
              "2            3                 1                2                0          2   \n",
              "3            2                 1                1                8          1   \n",
              "4            2                 1                1                5          1   \n",
              "5            1                 1                2                0          2   \n",
              "6            3                 1                1                3          1   \n",
              "7            1                 1                2                0          2   \n",
              "8            3                 1                1                5          1   \n",
              "9            2                 1                1                1          1   \n",
              "\n",
              "   TP_ENSINO  IN_TREINEIRO  CO_MUNICIPIO_ESC NO_MUNICIPIO_ESC  CO_UF_ESC  \\\n",
              "0        1.0             0               NaN              NaN        NaN   \n",
              "1        1.0             0         2927408.0         Salvador       29.0   \n",
              "2        1.0             0               NaN              NaN        NaN   \n",
              "3        NaN             0               NaN              NaN        NaN   \n",
              "4        NaN             0               NaN              NaN        NaN   \n",
              "5        1.0             0         2932606.0           Urandi       29.0   \n",
              "6        NaN             0               NaN              NaN        NaN   \n",
              "7        1.0             0               NaN              NaN        NaN   \n",
              "8        NaN             0               NaN              NaN        NaN   \n",
              "9        NaN             0               NaN              NaN        NaN   \n",
              "\n",
              "  SG_UF_ESC  TP_DEPENDENCIA_ADM_ESC  TP_LOCALIZACAO_ESC  TP_SIT_FUNC_ESC  \\\n",
              "0       NaN                     NaN                 NaN              NaN   \n",
              "1        BA                     1.0                 1.0              1.0   \n",
              "2       NaN                     NaN                 NaN              NaN   \n",
              "3       NaN                     NaN                 NaN              NaN   \n",
              "4       NaN                     NaN                 NaN              NaN   \n",
              "5        BA                     2.0                 1.0              1.0   \n",
              "6       NaN                     NaN                 NaN              NaN   \n",
              "7       NaN                     NaN                 NaN              NaN   \n",
              "8       NaN                     NaN                 NaN              NaN   \n",
              "9       NaN                     NaN                 NaN              NaN   \n",
              "\n",
              "   CO_MUNICIPIO_PROVA NO_MUNICIPIO_PROVA  CO_UF_PROVA SG_UF_PROVA  \\\n",
              "0             2927200        Ruy Barbosa           29          BA   \n",
              "1             2927408           Salvador           29          BA   \n",
              "2             2903201          Barreiras           29          BA   \n",
              "3             2928802      Santo Estêvão           29          BA   \n",
              "4             2910800   Feira de Santana           29          BA   \n",
              "5             2932606             Urandi           29          BA   \n",
              "6             2927408           Salvador           29          BA   \n",
              "7             2907202          Casa Nova           29          BA   \n",
              "8             2930501           Serrinha           29          BA   \n",
              "9             2927408           Salvador           29          BA   \n",
              "\n",
              "   TP_PRESENCA_CN  TP_PRESENCA_CH  TP_PRESENCA_LC  TP_PRESENCA_MT  \\\n",
              "0               1               1               1               1   \n",
              "1               0               0               0               0   \n",
              "2               1               1               1               1   \n",
              "3               1               1               1               1   \n",
              "4               1               1               1               1   \n",
              "5               1               1               1               1   \n",
              "6               1               1               1               1   \n",
              "7               1               1               1               1   \n",
              "8               0               0               0               0   \n",
              "9               0               0               0               0   \n",
              "\n",
              "   CO_PROVA_CN  CO_PROVA_CH  CO_PROVA_LC  CO_PROVA_MT  NU_NOTA_CN  NU_NOTA_CH  \\\n",
              "0        909.0        881.0        892.0        899.0       507.6       539.2   \n",
              "1          NaN          NaN          NaN          NaN         NaN         NaN   \n",
              "2        912.0        882.0        891.0        901.0       439.6       437.7   \n",
              "3        911.0        880.0        890.0        902.0       548.1       619.5   \n",
              "4       1014.0       1000.0       1004.0       1010.0       465.2       613.1   \n",
              "5        910.0        879.0        889.0        900.0       414.6       410.1   \n",
              "6        910.0        879.0        889.0        900.0       453.4       438.3   \n",
              "7        912.0        882.0        891.0        901.0       590.9       659.7   \n",
              "8          NaN          NaN          NaN          NaN         NaN         NaN   \n",
              "9          NaN          NaN          NaN          NaN         NaN         NaN   \n",
              "\n",
              "   NU_NOTA_LC  NU_NOTA_MT                                TX_RESPOSTAS_CN  \\\n",
              "0       494.6       413.3  BAEDEBDECCEAEDDCBDEDAEECEEEDBDECBDCECBCCDABED   \n",
              "1         NaN         NaN                                            NaN   \n",
              "2       455.9       446.2  BCEDEACAEDCEDCBDDCCAADABADDEBEECBACDCCABBDCCA   \n",
              "3       676.3       386.6  CCAECCADEAADDEDDEECEDDEADDDCACDEDCDCDEADBEDDE   \n",
              "4       522.1       579.6  CDCCBDBBDCBACEBDACBCACADBCBECCEBCDDEBDACEECCD   \n",
              "5       386.7       423.0  CBCAEDDBBCBABADAABECACCEBDEABCCAECEECCDBCBDCB   \n",
              "6       503.4       379.5  BCDBECADBCCDCEBBBCEDCBCEBACDBEEAEDCDBCAACEEBD   \n",
              "7       593.6       586.8  BADCBEEBECDDEABAEDEBCDCCDABBBEBBDDACCCADBEACE   \n",
              "8         NaN         NaN                                            NaN   \n",
              "9         NaN         NaN                                            NaN   \n",
              "\n",
              "                                 TX_RESPOSTAS_CH  \\\n",
              "0  EEEBAABCBCDBEAEBEACEDDEDECACBDBCDACECDAECBCBD   \n",
              "1                                            NaN   \n",
              "2  AAEADCDCAAADCBBBAABBEAEDABCDAACDDCBDAAABAABBB   \n",
              "3  DBBEADDCABABCECEAEBEAEDCBCAEABEEDEBBEAABCBDCD   \n",
              "4  CCBAADECCBACBECCBEADAEBEACBEBBEADEBBABDACDEBC   \n",
              "5  BACDABADEBACEDCACDADBCBDBDBECADBEDAEBDCAEBDCA   \n",
              "6  BDDCABAEEAABECBBCBEDBEABACBCCEDEBAEBAACBBECAC   \n",
              "7  EBBBEADACABBBADEECBAAEDDBBADCDADBCADDEBBCCEAB   \n",
              "8                                            NaN   \n",
              "9                                            NaN   \n",
              "\n",
              "                                     TX_RESPOSTAS_LC  \\\n",
              "0  99999ACAEEEEBDEACDACDEABCEABBDEDBAEEBDEEACDBAC...   \n",
              "1                                                NaN   \n",
              "2  EDBEC99999DDAAEBBDCDBBAABDECAADAEACCDABCEABABE...   \n",
              "3  ABCCA99999DDCACDCACABBEAAEBDAEEBDEEAADACEEDDDB...   \n",
              "4  BADCE99999DABAABBABBBCEDBDCDABEABCBBDCACBABAAA...   \n",
              "5  BAEAB99999CACBABEBADECADCEDCBCADABDEDBDCABCACB...   \n",
              "6  BABAC99999ACCDEADAECADBBADBBCEDCBADBCCABDABDAB...   \n",
              "7  ACBAB99999DCEADCADACBDEAEDDABDADCBBBDABCDDDECB...   \n",
              "8                                                NaN   \n",
              "9                                                NaN   \n",
              "\n",
              "                                 TX_RESPOSTAS_MT  TP_LINGUA  \\\n",
              "0  BACEACDACBAAAEDCECABBACDCDBBA.CEABCDADADBECBE          1   \n",
              "1                                            NaN          0   \n",
              "2  EBBEBDCCDDCDCBADABBBCCEABDADCBCCACBDACDCDADCE          0   \n",
              "3  CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA          0   \n",
              "4  CCBACBBCCCCEDDDDCBCCDCACCCBBBDDDBCBADDBCABACA          0   \n",
              "5  EACDCADDDCDBADABACEDEDCECBDCCBEAACEADEAECCCEC          0   \n",
              "6  DCDDABDEDBADAEACBCDEAABCBDBCAEBAABECEDABEBBCC          0   \n",
              "7  DDEBEEEDDDCAEEBACBEAADDDCCEDEEBABEECEBEEBCAAC          0   \n",
              "8                                            NaN          1   \n",
              "9                                            NaN          0   \n",
              "\n",
              "                                  TX_GABARITO_CN  \\\n",
              "0  EDECABEDABCBEBACCDCBBEEBBCBDAAECDCBDCDBBBADCD   \n",
              "1                                            NaN   \n",
              "2  DABCEDEBEEBBCABEDDCBCBECDADCDAACBDCCCDBBBEBAB   \n",
              "3  CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB   \n",
              "4  CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB   \n",
              "5  ADCDCDBBBECDCCDCBCBDABCAADCBEBABEEBBBCABEDEDE   \n",
              "6  ADCDCDBBBECDCCDCBCBDABCAADCBEBABEEBBBCABEDEDE   \n",
              "7  DABCEDEBEEBBCABEDDCBCBECDADCDAACBDCCCDBBBEBAB   \n",
              "8                                            NaN   \n",
              "9                                            NaN   \n",
              "\n",
              "                                  TX_GABARITO_CH  \\\n",
              "0  BEECCAEABADBCAEBAAEEDDEBBBADBCBAAEEBBBADCCBBA   \n",
              "1                                            NaN   \n",
              "2  EBAAEADBCACBBABEECBAAEEBBBADCBADBCEDDEBBCAEAB   \n",
              "3  BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC   \n",
              "4  BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC   \n",
              "5  BADCBADBCEDDEBBADBCABEECCAEABEBAAECBBABAAEEBB   \n",
              "6  BADCBADBCEDDEBBADBCABEECCAEABEBAAECBBABAAEEBB   \n",
              "7  EBAAEADBCACBBABEECBAAEEBBBADCBADBCEDDEBBCAEAB   \n",
              "8                                            NaN   \n",
              "9                                            NaN   \n",
              "\n",
              "                                      TX_GABARITO_LC  \\\n",
              "0  ABBACAAECACDBDDADEBDDCBDCEDBEDDBBBBDCEEAADABAC...   \n",
              "1                                                NaN   \n",
              "2  ACABBACAEADCEADABDACDCEABDDADBEDDDEBBACCDDDCCE...   \n",
              "3  ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...   \n",
              "4  ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...   \n",
              "5  CAABBCAEAABDCDEADCEDBEDDDABBBBDEBCEADABDBACACD...   \n",
              "6  CAABBCAEAABDCDEADCEDBEDDDABBBBDEBCEADABDBACACD...   \n",
              "7  ACABBACAEADCEADABDACDCEABDDADBEDDDEBBACCDDDCCE...   \n",
              "8                                                NaN   \n",
              "9                                                NaN   \n",
              "\n",
              "                                  TX_GABARITO_MT  TP_STATUS_REDACAO  \\\n",
              "0  EEXEBABDDCECCBCCECDCAEBADEABBDBDEDCEDCCADDCAB                1.0   \n",
              "1                                            NaN                NaN   \n",
              "2  DCCAEBABDDCABEECCBCCEXADDCEECDEBADCABBDBDEDCE                1.0   \n",
              "3  ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA                1.0   \n",
              "4  ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA                1.0   \n",
              "5  DDCABDCCAEDCEBBDBDAEEBADCAECDBCCCCDDCEEBABXEE                1.0   \n",
              "6  DDCABDCCAEDCEBBDBDAEEBADCAECDBCCCCDDCEEBABXEE                1.0   \n",
              "7  DCCAEBABDDCABEECCBCCEXADDCEECDEBADCABBDBDEDCE                1.0   \n",
              "8                                            NaN                NaN   \n",
              "9                                            NaN                NaN   \n",
              "\n",
              "   NU_NOTA_COMP1  NU_NOTA_COMP2  NU_NOTA_COMP3  NU_NOTA_COMP4  NU_NOTA_COMP5  \\\n",
              "0           80.0          120.0           80.0           80.0           20.0   \n",
              "1            NaN            NaN            NaN            NaN            NaN   \n",
              "2           80.0          120.0           80.0          100.0           80.0   \n",
              "3          120.0          120.0          100.0          120.0          120.0   \n",
              "4          100.0          120.0          100.0          120.0          100.0   \n",
              "5          120.0          180.0          140.0          160.0          100.0   \n",
              "6          100.0          140.0          120.0          120.0          120.0   \n",
              "7          160.0          180.0          160.0          200.0          200.0   \n",
              "8            NaN            NaN            NaN            NaN            NaN   \n",
              "9            NaN            NaN            NaN            NaN            NaN   \n",
              "\n",
              "   NU_NOTA_REDACAO  \n",
              "0            380.0  \n",
              "1              NaN  \n",
              "2            460.0  \n",
              "3            580.0  \n",
              "4            540.0  \n",
              "5            700.0  \n",
              "6            600.0  \n",
              "7            900.0  \n",
              "8              NaN  \n",
              "9              NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c3b15362-180f-4320-8866-b6b471575d23\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>NU_INSCRICAO</th>\n",
              "      <th>NU_ANO</th>\n",
              "      <th>TP_FAIXA_ETARIA</th>\n",
              "      <th>TP_SEXO</th>\n",
              "      <th>TP_ESTADO_CIVIL</th>\n",
              "      <th>TP_COR_RACA</th>\n",
              "      <th>TP_NACIONALIDADE</th>\n",
              "      <th>TP_ST_CONCLUSAO</th>\n",
              "      <th>TP_ANO_CONCLUIU</th>\n",
              "      <th>TP_ESCOLA</th>\n",
              "      <th>TP_ENSINO</th>\n",
              "      <th>IN_TREINEIRO</th>\n",
              "      <th>CO_MUNICIPIO_ESC</th>\n",
              "      <th>NO_MUNICIPIO_ESC</th>\n",
              "      <th>CO_UF_ESC</th>\n",
              "      <th>SG_UF_ESC</th>\n",
              "      <th>TP_DEPENDENCIA_ADM_ESC</th>\n",
              "      <th>TP_LOCALIZACAO_ESC</th>\n",
              "      <th>TP_SIT_FUNC_ESC</th>\n",
              "      <th>CO_MUNICIPIO_PROVA</th>\n",
              "      <th>NO_MUNICIPIO_PROVA</th>\n",
              "      <th>CO_UF_PROVA</th>\n",
              "      <th>SG_UF_PROVA</th>\n",
              "      <th>TP_PRESENCA_CN</th>\n",
              "      <th>TP_PRESENCA_CH</th>\n",
              "      <th>TP_PRESENCA_LC</th>\n",
              "      <th>TP_PRESENCA_MT</th>\n",
              "      <th>CO_PROVA_CN</th>\n",
              "      <th>CO_PROVA_CH</th>\n",
              "      <th>CO_PROVA_LC</th>\n",
              "      <th>CO_PROVA_MT</th>\n",
              "      <th>NU_NOTA_CN</th>\n",
              "      <th>NU_NOTA_CH</th>\n",
              "      <th>NU_NOTA_LC</th>\n",
              "      <th>NU_NOTA_MT</th>\n",
              "      <th>TX_RESPOSTAS_CN</th>\n",
              "      <th>TX_RESPOSTAS_CH</th>\n",
              "      <th>TX_RESPOSTAS_LC</th>\n",
              "      <th>TX_RESPOSTAS_MT</th>\n",
              "      <th>TP_LINGUA</th>\n",
              "      <th>TX_GABARITO_CN</th>\n",
              "      <th>TX_GABARITO_CH</th>\n",
              "      <th>TX_GABARITO_LC</th>\n",
              "      <th>TX_GABARITO_MT</th>\n",
              "      <th>TP_STATUS_REDACAO</th>\n",
              "      <th>NU_NOTA_COMP1</th>\n",
              "      <th>NU_NOTA_COMP2</th>\n",
              "      <th>NU_NOTA_COMP3</th>\n",
              "      <th>NU_NOTA_COMP4</th>\n",
              "      <th>NU_NOTA_COMP5</th>\n",
              "      <th>NU_NOTA_REDACAO</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>210051128744</td>\n",
              "      <td>2021</td>\n",
              "      <td>4</td>\n",
              "      <td>F</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927200</td>\n",
              "      <td>Ruy Barbosa</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>909.0</td>\n",
              "      <td>881.0</td>\n",
              "      <td>892.0</td>\n",
              "      <td>899.0</td>\n",
              "      <td>507.6</td>\n",
              "      <td>539.2</td>\n",
              "      <td>494.6</td>\n",
              "      <td>413.3</td>\n",
              "      <td>BAEDEBDECCEAEDDCBDEDAEECEEEDBDECBDCECBCCDABED</td>\n",
              "      <td>EEEBAABCBCDBEAEBEACEDDEDECACBDBCDACECDAECBCBD</td>\n",
              "      <td>99999ACAEEEEBDEACDACDEABCEABBDEDBAEEBDEEACDBAC...</td>\n",
              "      <td>BACEACDACBAAAEDCECABBACDCDBBA.CEABCDADADBECBE</td>\n",
              "      <td>1</td>\n",
              "      <td>EDECABEDABCBEBACCDCBBEEBBCBDAAECDCBDCDBBBADCD</td>\n",
              "      <td>BEECCAEABADBCAEBAAEEDDEBBBADBCBAAEEBBBADCCBBA</td>\n",
              "      <td>ABBACAAECACDBDDADEBDDCBDCEDBEDDBBBBDCEEAADABAC...</td>\n",
              "      <td>EEXEBABDDCECCBCCECDCAEBADEABBDBDEDCEDCCADDCAB</td>\n",
              "      <td>1.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>380.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>210054173438</td>\n",
              "      <td>2021</td>\n",
              "      <td>5</td>\n",
              "      <td>F</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2927408.0</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29.0</td>\n",
              "      <td>BA</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2927408</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>210052118573</td>\n",
              "      <td>2021</td>\n",
              "      <td>3</td>\n",
              "      <td>F</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2903201</td>\n",
              "      <td>Barreiras</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>912.0</td>\n",
              "      <td>882.0</td>\n",
              "      <td>891.0</td>\n",
              "      <td>901.0</td>\n",
              "      <td>439.6</td>\n",
              "      <td>437.7</td>\n",
              "      <td>455.9</td>\n",
              "      <td>446.2</td>\n",
              "      <td>BCEDEACAEDCEDCBDDCCAADABADDEBEECBACDCCABBDCCA</td>\n",
              "      <td>AAEADCDCAAADCBBBAABBEAEDABCDAACDDCBDAAABAABBB</td>\n",
              "      <td>EDBEC99999DDAAEBBDCDBBAABDECAADAEACCDABCEABABE...</td>\n",
              "      <td>EBBEBDCCDDCDCBADABBBCCEABDADCBCCACBDACDCDADCE</td>\n",
              "      <td>0</td>\n",
              "      <td>DABCEDEBEEBBCABEDDCBCBECDADCDAACBDCCCDBBBEBAB</td>\n",
              "      <td>EBAAEADBCACBBABEECBAAEEBBBADCBADBCEDDEBBCAEAB</td>\n",
              "      <td>ACABBACAEADCEADABDACDCEABDDADBEDDDEBBACCDDDCCE...</td>\n",
              "      <td>DCCAEBABDDCABEECCBCCEXADDCEECDEBADCABBDBDEDCE</td>\n",
              "      <td>1.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>460.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>210052350230</td>\n",
              "      <td>2021</td>\n",
              "      <td>10</td>\n",
              "      <td>F</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2928802</td>\n",
              "      <td>Santo Estêvão</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>911.0</td>\n",
              "      <td>880.0</td>\n",
              "      <td>890.0</td>\n",
              "      <td>902.0</td>\n",
              "      <td>548.1</td>\n",
              "      <td>619.5</td>\n",
              "      <td>676.3</td>\n",
              "      <td>386.6</td>\n",
              "      <td>CCAECCADEAADDEDDEECEDDEADDDCACDEDCDCDEADBEDDE</td>\n",
              "      <td>DBBEADDCABABCECEAEBEAEDCBCAEABEEDEBBEAABCBDCD</td>\n",
              "      <td>ABCCA99999DDCACDCACABBEAAEBDAEEBDEEAADACEEDDDB...</td>\n",
              "      <td>CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</td>\n",
              "      <td>0</td>\n",
              "      <td>CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB</td>\n",
              "      <td>BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC</td>\n",
              "      <td>ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...</td>\n",
              "      <td>ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA</td>\n",
              "      <td>1.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>580.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>210053156861</td>\n",
              "      <td>2021</td>\n",
              "      <td>9</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2910800</td>\n",
              "      <td>Feira de Santana</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1014.0</td>\n",
              "      <td>1000.0</td>\n",
              "      <td>1004.0</td>\n",
              "      <td>1010.0</td>\n",
              "      <td>465.2</td>\n",
              "      <td>613.1</td>\n",
              "      <td>522.1</td>\n",
              "      <td>579.6</td>\n",
              "      <td>CDCCBDBBDCBACEBDACBCACADBCBECCEBCDDEBDACEECCD</td>\n",
              "      <td>CCBAADECCBACBECCBEADAEBEACBEBBEADEBBABDACDEBC</td>\n",
              "      <td>BADCE99999DABAABBABBBCEDBDCDABEABCBBDCACBABAAA...</td>\n",
              "      <td>CCBACBBCCCCEDDDDCBCCDCACCCBBBDDDBCBADDBCABACA</td>\n",
              "      <td>0</td>\n",
              "      <td>CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB</td>\n",
              "      <td>BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC</td>\n",
              "      <td>ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...</td>\n",
              "      <td>ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA</td>\n",
              "      <td>1.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>540.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>210053085526</td>\n",
              "      <td>2021</td>\n",
              "      <td>3</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2932606.0</td>\n",
              "      <td>Urandi</td>\n",
              "      <td>29.0</td>\n",
              "      <td>BA</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2932606</td>\n",
              "      <td>Urandi</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>910.0</td>\n",
              "      <td>879.0</td>\n",
              "      <td>889.0</td>\n",
              "      <td>900.0</td>\n",
              "      <td>414.6</td>\n",
              "      <td>410.1</td>\n",
              "      <td>386.7</td>\n",
              "      <td>423.0</td>\n",
              "      <td>CBCAEDDBBCBABADAABECACCEBDEABCCAECEECCDBCBDCB</td>\n",
              "      <td>BACDABADEBACEDCACDADBCBDBDBECADBEDAEBDCAEBDCA</td>\n",
              "      <td>BAEAB99999CACBABEBADECADCEDCBCADABDEDBDCABCACB...</td>\n",
              "      <td>EACDCADDDCDBADABACEDEDCECBDCCBEAACEADEAECCCEC</td>\n",
              "      <td>0</td>\n",
              "      <td>ADCDCDBBBECDCCDCBCBDABCAADCBEBABEEBBBCABEDEDE</td>\n",
              "      <td>BADCBADBCEDDEBBADBCABEECCAEABEBAAECBBABAAEEBB</td>\n",
              "      <td>CAABBCAEAABDCDEADCEDBEDDDABBBBDEBCEADABDBACACD...</td>\n",
              "      <td>DDCABDCCAEDCEBBDBDAEEBADCAECDBCCCCDDCEEBABXEE</td>\n",
              "      <td>1.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>180.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>700.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>210053741476</td>\n",
              "      <td>2021</td>\n",
              "      <td>6</td>\n",
              "      <td>F</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927408</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>910.0</td>\n",
              "      <td>879.0</td>\n",
              "      <td>889.0</td>\n",
              "      <td>900.0</td>\n",
              "      <td>453.4</td>\n",
              "      <td>438.3</td>\n",
              "      <td>503.4</td>\n",
              "      <td>379.5</td>\n",
              "      <td>BCDBECADBCCDCEBBBCEDCBCEBACDBEEAEDCDBCAACEEBD</td>\n",
              "      <td>BDDCABAEEAABECBBCBEDBEABACBCCEDEBAEBAACBBECAC</td>\n",
              "      <td>BABAC99999ACCDEADAECADBBADBBCEDCBADBCCABDABDAB...</td>\n",
              "      <td>DCDDABDEDBADAEACBCDEAABCBDBCAEBAABECEDABEBBCC</td>\n",
              "      <td>0</td>\n",
              "      <td>ADCDCDBBBECDCCDCBCBDABCAADCBEBABEEBBBCABEDEDE</td>\n",
              "      <td>BADCBADBCEDDEBBADBCABEECCAEABEBAAECBBABAAEEBB</td>\n",
              "      <td>CAABBCAEAABDCDEADCEDBEDDDABBBBDEBCEADABDBACACD...</td>\n",
              "      <td>DDCABDCCAEDCEBBDBDAEEBADCAECDBCCCCDDCEEBABXEE</td>\n",
              "      <td>1.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>600.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>210053790986</td>\n",
              "      <td>2021</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2907202</td>\n",
              "      <td>Casa Nova</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>912.0</td>\n",
              "      <td>882.0</td>\n",
              "      <td>891.0</td>\n",
              "      <td>901.0</td>\n",
              "      <td>590.9</td>\n",
              "      <td>659.7</td>\n",
              "      <td>593.6</td>\n",
              "      <td>586.8</td>\n",
              "      <td>BADCBEEBECDDEABAEDEBCDCCDABBBEBBDDACCCADBEACE</td>\n",
              "      <td>EBBBEADACABBBADEECBAAEDDBBADCDADBCADDEBBCCEAB</td>\n",
              "      <td>ACBAB99999DCEADCADACBDEAEDDABDADCBBBDABCDDDECB...</td>\n",
              "      <td>DDEBEEEDDDCAEEBACBEAADDDCCEDEEBABEECEBEEBCAAC</td>\n",
              "      <td>0</td>\n",
              "      <td>DABCEDEBEEBBCABEDDCBCBECDADCDAACBDCCCDBBBEBAB</td>\n",
              "      <td>EBAAEADBCACBBABEECBAAEEBBBADCBADBCEDDEBBCAEAB</td>\n",
              "      <td>ACABBACAEADCEADABDACDCEABDDADBEDDDEBBACCDDDCCE...</td>\n",
              "      <td>DCCAEBABDDCABEECCBCCEXADDCEECDEBADCABBDBDEDCE</td>\n",
              "      <td>1.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>180.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>200.0</td>\n",
              "      <td>200.0</td>\n",
              "      <td>900.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>210051521447</td>\n",
              "      <td>2021</td>\n",
              "      <td>7</td>\n",
              "      <td>F</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2930501</td>\n",
              "      <td>Serrinha</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>210054171092</td>\n",
              "      <td>2021</td>\n",
              "      <td>4</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927408</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c3b15362-180f-4320-8866-b6b471575d23')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c3b15362-180f-4320-8866-b6b471575d23 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c3b15362-180f-4320-8866-b6b471575d23');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-f1640001-180c-4453-87be-5747c68ee33b\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f1640001-180c-4453-87be-5747c68ee33b')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-f1640001-180c-4453-87be-5747c68ee33b button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.tail(n = 10) #lê as últimas 10 linhas"
      ],
      "metadata": {
        "id": "vd4kzzAAHVXc",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 400
        },
        "outputId": "4a593e63-caad-4c7f-bf7f-a36252bce9d0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        NU_INSCRICAO  NU_ANO  TP_FAIXA_ETARIA TP_SEXO  TP_ESTADO_CIVIL  \\\n",
              "266184  210053251102    2021               11       F                1   \n",
              "266185  210052439300    2021                8       M                1   \n",
              "266186  210053752138    2021                7       F                1   \n",
              "266187  210053346615    2021                5       F                1   \n",
              "266188  210054023670    2021                5       F                1   \n",
              "266189  210051432069    2021               12       M                1   \n",
              "266190  210051106175    2021               14       M                2   \n",
              "266191  210051995005    2021               11       M                0   \n",
              "266192  210053234415    2021               12       M                2   \n",
              "266193  210054027870    2021                5       F                1   \n",
              "\n",
              "        TP_COR_RACA  TP_NACIONALIDADE  TP_ST_CONCLUSAO  TP_ANO_CONCLUIU  \\\n",
              "266184            3                 1                1                0   \n",
              "266185            2                 1                2                0   \n",
              "266186            3                 1                1                5   \n",
              "266187            1                 1                1                2   \n",
              "266188            3                 1                1                2   \n",
              "266189            3                 1                1                0   \n",
              "266190            2                 1                1                0   \n",
              "266191            2                 1                1               12   \n",
              "266192            2                 1                1               15   \n",
              "266193            2                 1                1                2   \n",
              "\n",
              "        TP_ESCOLA  TP_ENSINO  IN_TREINEIRO  CO_MUNICIPIO_ESC NO_MUNICIPIO_ESC  \\\n",
              "266184          1        NaN             0               NaN              NaN   \n",
              "266185          2        1.0             0               NaN              NaN   \n",
              "266186          1        NaN             0               NaN              NaN   \n",
              "266187          1        NaN             0               NaN              NaN   \n",
              "266188          1        NaN             0               NaN              NaN   \n",
              "266189          1        NaN             0               NaN              NaN   \n",
              "266190          1        NaN             0               NaN              NaN   \n",
              "266191          1        NaN             0               NaN              NaN   \n",
              "266192          1        NaN             0               NaN              NaN   \n",
              "266193          1        NaN             0               NaN              NaN   \n",
              "\n",
              "        CO_UF_ESC SG_UF_ESC  TP_DEPENDENCIA_ADM_ESC  TP_LOCALIZACAO_ESC  \\\n",
              "266184        NaN       NaN                     NaN                 NaN   \n",
              "266185        NaN       NaN                     NaN                 NaN   \n",
              "266186        NaN       NaN                     NaN                 NaN   \n",
              "266187        NaN       NaN                     NaN                 NaN   \n",
              "266188        NaN       NaN                     NaN                 NaN   \n",
              "266189        NaN       NaN                     NaN                 NaN   \n",
              "266190        NaN       NaN                     NaN                 NaN   \n",
              "266191        NaN       NaN                     NaN                 NaN   \n",
              "266192        NaN       NaN                     NaN                 NaN   \n",
              "266193        NaN       NaN                     NaN                 NaN   \n",
              "\n",
              "        TP_SIT_FUNC_ESC  CO_MUNICIPIO_PROVA           NO_MUNICIPIO_PROVA  \\\n",
              "266184              NaN             2909802               Cruz das Almas   \n",
              "266185              NaN             2900702                   Alagoinhas   \n",
              "266186              NaN             2903201                    Barreiras   \n",
              "266187              NaN             2919504  Livramento de Nossa Senhora   \n",
              "266188              NaN             2927408                     Salvador   \n",
              "266189              NaN             2900702                   Alagoinhas   \n",
              "266190              NaN             2918407                     Juazeiro   \n",
              "266191              NaN             2927408                     Salvador   \n",
              "266192              NaN             2927408                     Salvador   \n",
              "266193              NaN             2927408                     Salvador   \n",
              "\n",
              "        CO_UF_PROVA SG_UF_PROVA  TP_PRESENCA_CN  TP_PRESENCA_CH  \\\n",
              "266184           29          BA               1               1   \n",
              "266185           29          BA               0               0   \n",
              "266186           29          BA               0               0   \n",
              "266187           29          BA               0               0   \n",
              "266188           29          BA               1               1   \n",
              "266189           29          BA               0               0   \n",
              "266190           29          BA               0               0   \n",
              "266191           29          BA               0               0   \n",
              "266192           29          BA               0               0   \n",
              "266193           29          BA               0               0   \n",
              "\n",
              "        TP_PRESENCA_LC  TP_PRESENCA_MT  CO_PROVA_CN  CO_PROVA_CH  CO_PROVA_LC  \\\n",
              "266184               1               1       1045.0       1017.0       1028.0   \n",
              "266185               0               0          NaN          NaN          NaN   \n",
              "266186               0               0          NaN          NaN          NaN   \n",
              "266187               0               0          NaN          NaN          NaN   \n",
              "266188               1               1       1045.0       1017.0       1028.0   \n",
              "266189               0               0          NaN          NaN          NaN   \n",
              "266190               0               0          NaN          NaN          NaN   \n",
              "266191               0               0          NaN          NaN          NaN   \n",
              "266192               0               0          NaN          NaN          NaN   \n",
              "266193               0               0          NaN          NaN          NaN   \n",
              "\n",
              "        CO_PROVA_MT  NU_NOTA_CN  NU_NOTA_CH  NU_NOTA_LC  NU_NOTA_MT  \\\n",
              "266184       1035.0       409.0       366.6       406.8       415.4   \n",
              "266185          NaN         NaN         NaN         NaN         NaN   \n",
              "266186          NaN         NaN         NaN         NaN         NaN   \n",
              "266187          NaN         NaN         NaN         NaN         NaN   \n",
              "266188       1035.0       463.8       474.9       333.3       357.8   \n",
              "266189          NaN         NaN         NaN         NaN         NaN   \n",
              "266190          NaN         NaN         NaN         NaN         NaN   \n",
              "266191          NaN         NaN         NaN         NaN         NaN   \n",
              "266192          NaN         NaN         NaN         NaN         NaN   \n",
              "266193          NaN         NaN         NaN         NaN         NaN   \n",
              "\n",
              "                                      TX_RESPOSTAS_CN  \\\n",
              "266184  CCCCACEEECECEAECECEEEECCEDEEEDACEDDAEEDCCCCCC   \n",
              "266185                                            NaN   \n",
              "266186                                            NaN   \n",
              "266187                                            NaN   \n",
              "266188  AEEECBDDBBCBDBCCBBABEEBCEADDCCBDEDDAEEACCECEE   \n",
              "266189                                            NaN   \n",
              "266190                                            NaN   \n",
              "266191                                            NaN   \n",
              "266192                                            NaN   \n",
              "266193                                            NaN   \n",
              "\n",
              "                                      TX_RESPOSTAS_CH  \\\n",
              "266184  DCCCCCCCEBCCCBEDCCCCCCDCCCCDCCDCACDDEDEBDCCEE   \n",
              "266185                                            NaN   \n",
              "266186                                            NaN   \n",
              "266187                                            NaN   \n",
              "266188  DBCECABAEBACDADCEDBCCBEEACEBAACECEEDCABBDEEBD   \n",
              "266189                                            NaN   \n",
              "266190                                            NaN   \n",
              "266191                                            NaN   \n",
              "266192                                            NaN   \n",
              "266193                                            NaN   \n",
              "\n",
              "                                          TX_RESPOSTAS_LC  \\\n",
              "266184  99999BBBCCEACBECCACCCCECAECCEEEBCCCCBAEECCCACC...   \n",
              "266185                                                NaN   \n",
              "266186                                                NaN   \n",
              "266187                                                NaN   \n",
              "266188  CBCDB99999CABBCBACECCEABBBCEEDDCCBDDCAEDBBDEAC...   \n",
              "266189                                                NaN   \n",
              "266190                                                NaN   \n",
              "266191                                                NaN   \n",
              "266192                                                NaN   \n",
              "266193                                                NaN   \n",
              "\n",
              "                                      TX_RESPOSTAS_MT  TP_LINGUA  \\\n",
              "266184  EDDCEDBBBBAECAEBECCCDBACDBEEEBCCDBCEEEEDCCEDE          1   \n",
              "266185                                            NaN          1   \n",
              "266186                                            NaN          1   \n",
              "266187                                            NaN          0   \n",
              "266188  ECECBDDECBABAACCCCCACEAEDDDCCADAEEDECCDBDCEDB          0   \n",
              "266189                                            NaN          1   \n",
              "266190                                            NaN          1   \n",
              "266191                                            NaN          1   \n",
              "266192                                            NaN          1   \n",
              "266193                                            NaN          0   \n",
              "\n",
              "                                       TX_GABARITO_CN  \\\n",
              "266184  BACEECDDDEABEEDCBACBDABCCAEAAEABACCDAAACCAEEA   \n",
              "266185                                            NaN   \n",
              "266186                                            NaN   \n",
              "266187                                            NaN   \n",
              "266188  BACEECDDDEABEEDCBACBDABCCAEAAEABACCDAAACCAEEA   \n",
              "266189                                            NaN   \n",
              "266190                                            NaN   \n",
              "266191                                            NaN   \n",
              "266192                                            NaN   \n",
              "266193                                            NaN   \n",
              "\n",
              "                                       TX_GABARITO_CH  \\\n",
              "266184  ACBCBACADEABDBDBABBCCBABABDDBBAEDAEEEEBAAEBED   \n",
              "266185                                            NaN   \n",
              "266186                                            NaN   \n",
              "266187                                            NaN   \n",
              "266188  ACBCBACADEABDBDBABBCCBABABDDBBAEDAEEEEBAAEBED   \n",
              "266189                                            NaN   \n",
              "266190                                            NaN   \n",
              "266191                                            NaN   \n",
              "266192                                            NaN   \n",
              "266193                                            NaN   \n",
              "\n",
              "                                           TX_GABARITO_LC  \\\n",
              "266184  ADCECCBBCEDDAEBABACBCACBEDACCEAEDACABAAABBAAEB...   \n",
              "266185                                                NaN   \n",
              "266186                                                NaN   \n",
              "266187                                                NaN   \n",
              "266188  ADCECCBBCEDDAEBABACBCACBEDACCEAEDACABAAABBAAEB...   \n",
              "266189                                                NaN   \n",
              "266190                                                NaN   \n",
              "266191                                                NaN   \n",
              "266192                                                NaN   \n",
              "266193                                                NaN   \n",
              "\n",
              "                                       TX_GABARITO_MT  TP_STATUS_REDACAO  \\\n",
              "266184  DBDBBDBAACBADBBDECBDBBACEBCBDCCECDEEDCADEABBB                1.0   \n",
              "266185                                            NaN                NaN   \n",
              "266186                                            NaN                NaN   \n",
              "266187                                            NaN                NaN   \n",
              "266188  DBDBBDBAACBADBBDECBDBBACEBCBDCCECDEEDCADEABBB                1.0   \n",
              "266189                                            NaN                NaN   \n",
              "266190                                            NaN                NaN   \n",
              "266191                                            NaN                NaN   \n",
              "266192                                            NaN                NaN   \n",
              "266193                                            NaN                NaN   \n",
              "\n",
              "        NU_NOTA_COMP1  NU_NOTA_COMP2  NU_NOTA_COMP3  NU_NOTA_COMP4  \\\n",
              "266184           80.0           40.0           40.0          100.0   \n",
              "266185            NaN            NaN            NaN            NaN   \n",
              "266186            NaN            NaN            NaN            NaN   \n",
              "266187            NaN            NaN            NaN            NaN   \n",
              "266188           80.0           40.0           40.0          120.0   \n",
              "266189            NaN            NaN            NaN            NaN   \n",
              "266190            NaN            NaN            NaN            NaN   \n",
              "266191            NaN            NaN            NaN            NaN   \n",
              "266192            NaN            NaN            NaN            NaN   \n",
              "266193            NaN            NaN            NaN            NaN   \n",
              "\n",
              "        NU_NOTA_COMP5  NU_NOTA_REDACAO  \n",
              "266184            0.0            260.0  \n",
              "266185            NaN              NaN  \n",
              "266186            NaN              NaN  \n",
              "266187            NaN              NaN  \n",
              "266188            0.0            280.0  \n",
              "266189            NaN              NaN  \n",
              "266190            NaN              NaN  \n",
              "266191            NaN              NaN  \n",
              "266192            NaN              NaN  \n",
              "266193            NaN              NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1a569b76-1fc2-4029-b06e-8c87b6d0f295\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>NU_INSCRICAO</th>\n",
              "      <th>NU_ANO</th>\n",
              "      <th>TP_FAIXA_ETARIA</th>\n",
              "      <th>TP_SEXO</th>\n",
              "      <th>TP_ESTADO_CIVIL</th>\n",
              "      <th>TP_COR_RACA</th>\n",
              "      <th>TP_NACIONALIDADE</th>\n",
              "      <th>TP_ST_CONCLUSAO</th>\n",
              "      <th>TP_ANO_CONCLUIU</th>\n",
              "      <th>TP_ESCOLA</th>\n",
              "      <th>TP_ENSINO</th>\n",
              "      <th>IN_TREINEIRO</th>\n",
              "      <th>CO_MUNICIPIO_ESC</th>\n",
              "      <th>NO_MUNICIPIO_ESC</th>\n",
              "      <th>CO_UF_ESC</th>\n",
              "      <th>SG_UF_ESC</th>\n",
              "      <th>TP_DEPENDENCIA_ADM_ESC</th>\n",
              "      <th>TP_LOCALIZACAO_ESC</th>\n",
              "      <th>TP_SIT_FUNC_ESC</th>\n",
              "      <th>CO_MUNICIPIO_PROVA</th>\n",
              "      <th>NO_MUNICIPIO_PROVA</th>\n",
              "      <th>CO_UF_PROVA</th>\n",
              "      <th>SG_UF_PROVA</th>\n",
              "      <th>TP_PRESENCA_CN</th>\n",
              "      <th>TP_PRESENCA_CH</th>\n",
              "      <th>TP_PRESENCA_LC</th>\n",
              "      <th>TP_PRESENCA_MT</th>\n",
              "      <th>CO_PROVA_CN</th>\n",
              "      <th>CO_PROVA_CH</th>\n",
              "      <th>CO_PROVA_LC</th>\n",
              "      <th>CO_PROVA_MT</th>\n",
              "      <th>NU_NOTA_CN</th>\n",
              "      <th>NU_NOTA_CH</th>\n",
              "      <th>NU_NOTA_LC</th>\n",
              "      <th>NU_NOTA_MT</th>\n",
              "      <th>TX_RESPOSTAS_CN</th>\n",
              "      <th>TX_RESPOSTAS_CH</th>\n",
              "      <th>TX_RESPOSTAS_LC</th>\n",
              "      <th>TX_RESPOSTAS_MT</th>\n",
              "      <th>TP_LINGUA</th>\n",
              "      <th>TX_GABARITO_CN</th>\n",
              "      <th>TX_GABARITO_CH</th>\n",
              "      <th>TX_GABARITO_LC</th>\n",
              "      <th>TX_GABARITO_MT</th>\n",
              "      <th>TP_STATUS_REDACAO</th>\n",
              "      <th>NU_NOTA_COMP1</th>\n",
              "      <th>NU_NOTA_COMP2</th>\n",
              "      <th>NU_NOTA_COMP3</th>\n",
              "      <th>NU_NOTA_COMP4</th>\n",
              "      <th>NU_NOTA_COMP5</th>\n",
              "      <th>NU_NOTA_REDACAO</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>266184</th>\n",
              "      <td>210053251102</td>\n",
              "      <td>2021</td>\n",
              "      <td>11</td>\n",
              "      <td>F</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2909802</td>\n",
              "      <td>Cruz das Almas</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1045.0</td>\n",
              "      <td>1017.0</td>\n",
              "      <td>1028.0</td>\n",
              "      <td>1035.0</td>\n",
              "      <td>409.0</td>\n",
              "      <td>366.6</td>\n",
              "      <td>406.8</td>\n",
              "      <td>415.4</td>\n",
              "      <td>CCCCACEEECECEAECECEEEECCEDEEEDACEDDAEEDCCCCCC</td>\n",
              "      <td>DCCCCCCCEBCCCBEDCCCCCCDCCCCDCCDCACDDEDEBDCCEE</td>\n",
              "      <td>99999BBBCCEACBECCACCCCECAECCEEEBCCCCBAEECCCACC...</td>\n",
              "      <td>EDDCEDBBBBAECAEBECCCDBACDBEEEBCCDBCEEEEDCCEDE</td>\n",
              "      <td>1</td>\n",
              "      <td>BACEECDDDEABEEDCBACBDABCCAEAAEABACCDAAACCAEEA</td>\n",
              "      <td>ACBCBACADEABDBDBABBCCBABABDDBBAEDAEEEEBAAEBED</td>\n",
              "      <td>ADCECCBBCEDDAEBABACBCACBEDACCEAEDACABAAABBAAEB...</td>\n",
              "      <td>DBDBBDBAACBADBBDECBDBBACEBCBDCCECDEEDCADEABBB</td>\n",
              "      <td>1.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>40.0</td>\n",
              "      <td>40.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>260.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266185</th>\n",
              "      <td>210052439300</td>\n",
              "      <td>2021</td>\n",
              "      <td>8</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2900702</td>\n",
              "      <td>Alagoinhas</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266186</th>\n",
              "      <td>210053752138</td>\n",
              "      <td>2021</td>\n",
              "      <td>7</td>\n",
              "      <td>F</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2903201</td>\n",
              "      <td>Barreiras</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266187</th>\n",
              "      <td>210053346615</td>\n",
              "      <td>2021</td>\n",
              "      <td>5</td>\n",
              "      <td>F</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2919504</td>\n",
              "      <td>Livramento de Nossa Senhora</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266188</th>\n",
              "      <td>210054023670</td>\n",
              "      <td>2021</td>\n",
              "      <td>5</td>\n",
              "      <td>F</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927408</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1045.0</td>\n",
              "      <td>1017.0</td>\n",
              "      <td>1028.0</td>\n",
              "      <td>1035.0</td>\n",
              "      <td>463.8</td>\n",
              "      <td>474.9</td>\n",
              "      <td>333.3</td>\n",
              "      <td>357.8</td>\n",
              "      <td>AEEECBDDBBCBDBCCBBABEEBCEADDCCBDEDDAEEACCECEE</td>\n",
              "      <td>DBCECABAEBACDADCEDBCCBEEACEBAACECEEDCABBDEEBD</td>\n",
              "      <td>CBCDB99999CABBCBACECCEABBBCEEDDCCBDDCAEDBBDEAC...</td>\n",
              "      <td>ECECBDDECBABAACCCCCACEAEDDDCCADAEEDECCDBDCEDB</td>\n",
              "      <td>0</td>\n",
              "      <td>BACEECDDDEABEEDCBACBDABCCAEAAEABACCDAAACCAEEA</td>\n",
              "      <td>ACBCBACADEABDBDBABBCCBABABDDBBAEDAEEEEBAAEBED</td>\n",
              "      <td>ADCECCBBCEDDAEBABACBCACBEDACCEAEDACABAAABBAAEB...</td>\n",
              "      <td>DBDBBDBAACBADBBDECBDBBACEBCBDCCECDEEDCADEABBB</td>\n",
              "      <td>1.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>40.0</td>\n",
              "      <td>40.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>280.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266189</th>\n",
              "      <td>210051432069</td>\n",
              "      <td>2021</td>\n",
              "      <td>12</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2900702</td>\n",
              "      <td>Alagoinhas</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266190</th>\n",
              "      <td>210051106175</td>\n",
              "      <td>2021</td>\n",
              "      <td>14</td>\n",
              "      <td>M</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2918407</td>\n",
              "      <td>Juazeiro</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266191</th>\n",
              "      <td>210051995005</td>\n",
              "      <td>2021</td>\n",
              "      <td>11</td>\n",
              "      <td>M</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927408</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266192</th>\n",
              "      <td>210053234415</td>\n",
              "      <td>2021</td>\n",
              "      <td>12</td>\n",
              "      <td>M</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927408</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266193</th>\n",
              "      <td>210054027870</td>\n",
              "      <td>2021</td>\n",
              "      <td>5</td>\n",
              "      <td>F</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927408</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1a569b76-1fc2-4029-b06e-8c87b6d0f295')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1a569b76-1fc2-4029-b06e-8c87b6d0f295 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1a569b76-1fc2-4029-b06e-8c87b6d0f295');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-e41e9dac-4938-46e4-af39-a469683b0114\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e41e9dac-4938-46e4-af39-a469683b0114')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-e41e9dac-4938-46e4-af39-a469683b0114 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.shape #mostra a quantidade de linhas e de colunas para uma tabela de banco de dados"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "06SFCdRqjtxt",
        "outputId": "34695be2-896c-48dd-ddda-f40ba0876379"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(266194, 51)"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#cria um sumário do data set\n",
        "#mostra número de registros nulos\n",
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "g61AAIVSj6gO",
        "outputId": "b2148d8a-a868-41f3-97f3-33be655ee6d1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 266194 entries, 0 to 266193\n",
            "Data columns (total 51 columns):\n",
            " #   Column                  Non-Null Count   Dtype  \n",
            "---  ------                  --------------   -----  \n",
            " 0   NU_INSCRICAO            266194 non-null  int64  \n",
            " 1   NU_ANO                  266194 non-null  int64  \n",
            " 2   TP_FAIXA_ETARIA         266194 non-null  int64  \n",
            " 3   TP_SEXO                 266194 non-null  object \n",
            " 4   TP_ESTADO_CIVIL         266194 non-null  int64  \n",
            " 5   TP_COR_RACA             266194 non-null  int64  \n",
            " 6   TP_NACIONALIDADE        266194 non-null  int64  \n",
            " 7   TP_ST_CONCLUSAO         266194 non-null  int64  \n",
            " 8   TP_ANO_CONCLUIU         266194 non-null  int64  \n",
            " 9   TP_ESCOLA               266194 non-null  int64  \n",
            " 10  TP_ENSINO               84388 non-null   float64\n",
            " 11  IN_TREINEIRO            266194 non-null  int64  \n",
            " 12  CO_MUNICIPIO_ESC        47820 non-null   float64\n",
            " 13  NO_MUNICIPIO_ESC        47820 non-null   object \n",
            " 14  CO_UF_ESC               47820 non-null   float64\n",
            " 15  SG_UF_ESC               47820 non-null   object \n",
            " 16  TP_DEPENDENCIA_ADM_ESC  47820 non-null   float64\n",
            " 17  TP_LOCALIZACAO_ESC      47820 non-null   float64\n",
            " 18  TP_SIT_FUNC_ESC         47820 non-null   float64\n",
            " 19  CO_MUNICIPIO_PROVA      266194 non-null  int64  \n",
            " 20  NO_MUNICIPIO_PROVA      266194 non-null  object \n",
            " 21  CO_UF_PROVA             266194 non-null  int64  \n",
            " 22  SG_UF_PROVA             266194 non-null  object \n",
            " 23  TP_PRESENCA_CN          266194 non-null  int64  \n",
            " 24  TP_PRESENCA_CH          266194 non-null  int64  \n",
            " 25  TP_PRESENCA_LC          266194 non-null  int64  \n",
            " 26  TP_PRESENCA_MT          266194 non-null  int64  \n",
            " 27  CO_PROVA_CN             175356 non-null  float64\n",
            " 28  CO_PROVA_CH             184844 non-null  float64\n",
            " 29  CO_PROVA_LC             184844 non-null  float64\n",
            " 30  CO_PROVA_MT             175356 non-null  float64\n",
            " 31  NU_NOTA_CN              175356 non-null  float64\n",
            " 32  NU_NOTA_CH              184844 non-null  float64\n",
            " 33  NU_NOTA_LC              184844 non-null  float64\n",
            " 34  NU_NOTA_MT              175356 non-null  float64\n",
            " 35  TX_RESPOSTAS_CN         175356 non-null  object \n",
            " 36  TX_RESPOSTAS_CH         184844 non-null  object \n",
            " 37  TX_RESPOSTAS_LC         184844 non-null  object \n",
            " 38  TX_RESPOSTAS_MT         175356 non-null  object \n",
            " 39  TP_LINGUA               266194 non-null  int64  \n",
            " 40  TX_GABARITO_CN          175356 non-null  object \n",
            " 41  TX_GABARITO_CH          184844 non-null  object \n",
            " 42  TX_GABARITO_LC          184844 non-null  object \n",
            " 43  TX_GABARITO_MT          175356 non-null  object \n",
            " 44  TP_STATUS_REDACAO       184844 non-null  float64\n",
            " 45  NU_NOTA_COMP1           184844 non-null  float64\n",
            " 46  NU_NOTA_COMP2           184844 non-null  float64\n",
            " 47  NU_NOTA_COMP3           184844 non-null  float64\n",
            " 48  NU_NOTA_COMP4           184844 non-null  float64\n",
            " 49  NU_NOTA_COMP5           184844 non-null  float64\n",
            " 50  NU_NOTA_REDACAO         184844 non-null  float64\n",
            "dtypes: float64(21), int64(17), object(13)\n",
            "memory usage: 103.6+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.isna().sum() #verificar missing data (dados faltantes)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "aJomQ1rPkJzT",
        "outputId": "cc9be2d5-6074-4bfb-b43b-c638ebb07937"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "NU_INSCRICAO                   0\n",
              "NU_ANO                         0\n",
              "TP_FAIXA_ETARIA                0\n",
              "TP_SEXO                        0\n",
              "TP_ESTADO_CIVIL                0\n",
              "TP_COR_RACA                    0\n",
              "TP_NACIONALIDADE               0\n",
              "TP_ST_CONCLUSAO                0\n",
              "TP_ANO_CONCLUIU                0\n",
              "TP_ESCOLA                      0\n",
              "TP_ENSINO                 181806\n",
              "IN_TREINEIRO                   0\n",
              "CO_MUNICIPIO_ESC          218374\n",
              "NO_MUNICIPIO_ESC          218374\n",
              "CO_UF_ESC                 218374\n",
              "SG_UF_ESC                 218374\n",
              "TP_DEPENDENCIA_ADM_ESC    218374\n",
              "TP_LOCALIZACAO_ESC        218374\n",
              "TP_SIT_FUNC_ESC           218374\n",
              "CO_MUNICIPIO_PROVA             0\n",
              "NO_MUNICIPIO_PROVA             0\n",
              "CO_UF_PROVA                    0\n",
              "SG_UF_PROVA                    0\n",
              "TP_PRESENCA_CN                 0\n",
              "TP_PRESENCA_CH                 0\n",
              "TP_PRESENCA_LC                 0\n",
              "TP_PRESENCA_MT                 0\n",
              "CO_PROVA_CN                90838\n",
              "CO_PROVA_CH                81350\n",
              "CO_PROVA_LC                81350\n",
              "CO_PROVA_MT                90838\n",
              "NU_NOTA_CN                 90838\n",
              "NU_NOTA_CH                 81350\n",
              "NU_NOTA_LC                 81350\n",
              "NU_NOTA_MT                 90838\n",
              "TX_RESPOSTAS_CN            90838\n",
              "TX_RESPOSTAS_CH            81350\n",
              "TX_RESPOSTAS_LC            81350\n",
              "TX_RESPOSTAS_MT            90838\n",
              "TP_LINGUA                      0\n",
              "TX_GABARITO_CN             90838\n",
              "TX_GABARITO_CH             81350\n",
              "TX_GABARITO_LC             81350\n",
              "TX_GABARITO_MT             90838\n",
              "TP_STATUS_REDACAO          81350\n",
              "NU_NOTA_COMP1              81350\n",
              "NU_NOTA_COMP2              81350\n",
              "NU_NOTA_COMP3              81350\n",
              "NU_NOTA_COMP4              81350\n",
              "NU_NOTA_COMP5              81350\n",
              "NU_NOTA_REDACAO            81350\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>NU_INSCRICAO</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_ANO</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_FAIXA_ETARIA</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_SEXO</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_ESTADO_CIVIL</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_COR_RACA</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_NACIONALIDADE</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_ST_CONCLUSAO</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_ANO_CONCLUIU</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_ESCOLA</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_ENSINO</th>\n",
              "      <td>181806</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>IN_TREINEIRO</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_MUNICIPIO_ESC</th>\n",
              "      <td>218374</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NO_MUNICIPIO_ESC</th>\n",
              "      <td>218374</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_UF_ESC</th>\n",
              "      <td>218374</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SG_UF_ESC</th>\n",
              "      <td>218374</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_DEPENDENCIA_ADM_ESC</th>\n",
              "      <td>218374</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_LOCALIZACAO_ESC</th>\n",
              "      <td>218374</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_SIT_FUNC_ESC</th>\n",
              "      <td>218374</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_MUNICIPIO_PROVA</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NO_MUNICIPIO_PROVA</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_UF_PROVA</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SG_UF_PROVA</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_PRESENCA_CN</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_PRESENCA_CH</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_PRESENCA_LC</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_PRESENCA_MT</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_PROVA_CN</th>\n",
              "      <td>90838</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_PROVA_CH</th>\n",
              "      <td>81350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_PROVA_LC</th>\n",
              "      <td>81350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_PROVA_MT</th>\n",
              "      <td>90838</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_CN</th>\n",
              "      <td>90838</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_CH</th>\n",
              "      <td>81350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_LC</th>\n",
              "      <td>81350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_MT</th>\n",
              "      <td>90838</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_RESPOSTAS_CN</th>\n",
              "      <td>90838</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_RESPOSTAS_CH</th>\n",
              "      <td>81350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_RESPOSTAS_LC</th>\n",
              "      <td>81350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_RESPOSTAS_MT</th>\n",
              "      <td>90838</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_LINGUA</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_GABARITO_CN</th>\n",
              "      <td>90838</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_GABARITO_CH</th>\n",
              "      <td>81350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_GABARITO_LC</th>\n",
              "      <td>81350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_GABARITO_MT</th>\n",
              "      <td>90838</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_STATUS_REDACAO</th>\n",
              "      <td>81350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_COMP1</th>\n",
              "      <td>81350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_COMP2</th>\n",
              "      <td>81350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_COMP3</th>\n",
              "      <td>81350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_COMP4</th>\n",
              "      <td>81350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_COMP5</th>\n",
              "      <td>81350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_REDACAO</th>\n",
              "      <td>81350</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "(df.isna().sum() * 100).sort_values(ascending = False) #porcentagem de dados faltantes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "MyFYe8skmw-5",
        "outputId": "f22cd593-7ae6-4582-83b4-b0e0bae2476c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "TP_DEPENDENCIA_ADM_ESC    21837400\n",
              "TP_SIT_FUNC_ESC           21837400\n",
              "SG_UF_ESC                 21837400\n",
              "NO_MUNICIPIO_ESC          21837400\n",
              "CO_UF_ESC                 21837400\n",
              "CO_MUNICIPIO_ESC          21837400\n",
              "TP_LOCALIZACAO_ESC        21837400\n",
              "TP_ENSINO                 18180600\n",
              "CO_PROVA_MT                9083800\n",
              "NU_NOTA_MT                 9083800\n",
              "NU_NOTA_CN                 9083800\n",
              "TX_RESPOSTAS_CN            9083800\n",
              "TX_RESPOSTAS_MT            9083800\n",
              "TX_GABARITO_CN             9083800\n",
              "TX_GABARITO_MT             9083800\n",
              "CO_PROVA_CN                9083800\n",
              "TX_GABARITO_CH             8135000\n",
              "TX_GABARITO_LC             8135000\n",
              "TX_RESPOSTAS_CH            8135000\n",
              "NU_NOTA_COMP3              8135000\n",
              "TP_STATUS_REDACAO          8135000\n",
              "NU_NOTA_COMP1              8135000\n",
              "NU_NOTA_COMP2              8135000\n",
              "NU_NOTA_COMP5              8135000\n",
              "NU_NOTA_COMP4              8135000\n",
              "NU_NOTA_REDACAO            8135000\n",
              "CO_PROVA_LC                8135000\n",
              "NU_NOTA_LC                 8135000\n",
              "NU_NOTA_CH                 8135000\n",
              "CO_PROVA_CH                8135000\n",
              "TX_RESPOSTAS_LC            8135000\n",
              "NU_ANO                           0\n",
              "NU_INSCRICAO                     0\n",
              "TP_FAIXA_ETARIA                  0\n",
              "TP_ESCOLA                        0\n",
              "IN_TREINEIRO                     0\n",
              "TP_SEXO                          0\n",
              "TP_COR_RACA                      0\n",
              "TP_ESTADO_CIVIL                  0\n",
              "TP_NACIONALIDADE                 0\n",
              "TP_ST_CONCLUSAO                  0\n",
              "TP_ANO_CONCLUIU                  0\n",
              "TP_PRESENCA_MT                   0\n",
              "CO_MUNICIPIO_PROVA               0\n",
              "NO_MUNICIPIO_PROVA               0\n",
              "CO_UF_PROVA                      0\n",
              "SG_UF_PROVA                      0\n",
              "TP_PRESENCA_CN                   0\n",
              "TP_PRESENCA_CH                   0\n",
              "TP_PRESENCA_LC                   0\n",
              "TP_LINGUA                        0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>TP_DEPENDENCIA_ADM_ESC</th>\n",
              "      <td>21837400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_SIT_FUNC_ESC</th>\n",
              "      <td>21837400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SG_UF_ESC</th>\n",
              "      <td>21837400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NO_MUNICIPIO_ESC</th>\n",
              "      <td>21837400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_UF_ESC</th>\n",
              "      <td>21837400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_MUNICIPIO_ESC</th>\n",
              "      <td>21837400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_LOCALIZACAO_ESC</th>\n",
              "      <td>21837400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_ENSINO</th>\n",
              "      <td>18180600</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_PROVA_MT</th>\n",
              "      <td>9083800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_MT</th>\n",
              "      <td>9083800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_CN</th>\n",
              "      <td>9083800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_RESPOSTAS_CN</th>\n",
              "      <td>9083800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_RESPOSTAS_MT</th>\n",
              "      <td>9083800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_GABARITO_CN</th>\n",
              "      <td>9083800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_GABARITO_MT</th>\n",
              "      <td>9083800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_PROVA_CN</th>\n",
              "      <td>9083800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_GABARITO_CH</th>\n",
              "      <td>8135000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_GABARITO_LC</th>\n",
              "      <td>8135000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_RESPOSTAS_CH</th>\n",
              "      <td>8135000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_COMP3</th>\n",
              "      <td>8135000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_STATUS_REDACAO</th>\n",
              "      <td>8135000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_COMP1</th>\n",
              "      <td>8135000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_COMP2</th>\n",
              "      <td>8135000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_COMP5</th>\n",
              "      <td>8135000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_COMP4</th>\n",
              "      <td>8135000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_REDACAO</th>\n",
              "      <td>8135000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_PROVA_LC</th>\n",
              "      <td>8135000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_LC</th>\n",
              "      <td>8135000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_CH</th>\n",
              "      <td>8135000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_PROVA_CH</th>\n",
              "      <td>8135000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_RESPOSTAS_LC</th>\n",
              "      <td>8135000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_ANO</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_INSCRICAO</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_FAIXA_ETARIA</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_ESCOLA</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>IN_TREINEIRO</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_SEXO</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_COR_RACA</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_ESTADO_CIVIL</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_NACIONALIDADE</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_ST_CONCLUSAO</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_ANO_CONCLUIU</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_PRESENCA_MT</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_MUNICIPIO_PROVA</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NO_MUNICIPIO_PROVA</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_UF_PROVA</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SG_UF_PROVA</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_PRESENCA_CN</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_PRESENCA_CH</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_PRESENCA_LC</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_LINGUA</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#sumário dos dados\n",
        "df.describe().transpose() #'transpose()' serve para transformar linhas em colunas, facilitando a visualização da tabela"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "w-oF7rFNnIYi",
        "outputId": "3f7d4182-b4b0-4423-bad8-e5de5e6aac74"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                           count          mean            std           min  \\\n",
              "NU_INSCRICAO            266194.0  2.100527e+11  981957.687860  2.100510e+11   \n",
              "NU_ANO                  266194.0  2.021000e+03       0.000000  2.021000e+03   \n",
              "TP_FAIXA_ETARIA         266194.0  5.710166e+00       3.878161  1.000000e+00   \n",
              "TP_ESTADO_CIVIL         266194.0  1.048991e+00       0.411030  0.000000e+00   \n",
              "TP_COR_RACA             266194.0  2.301832e+00       0.907761  0.000000e+00   \n",
              "TP_NACIONALIDADE        266194.0  1.029787e+00       0.194507  0.000000e+00   \n",
              "TP_ST_CONCLUSAO         266194.0  1.595810e+00       0.719902  1.000000e+00   \n",
              "TP_ANO_CONCLUIU         266194.0  2.846845e+00       4.468500  0.000000e+00   \n",
              "TP_ESCOLA               266194.0  1.379663e+00       0.570947  1.000000e+00   \n",
              "TP_ENSINO                84388.0  1.013272e+00       0.114438  1.000000e+00   \n",
              "IN_TREINEIRO            266194.0  1.226587e-01       0.328046  0.000000e+00   \n",
              "CO_MUNICIPIO_ESC         47820.0  2.921430e+06   77089.022929  1.100122e+06   \n",
              "CO_UF_ESC                47820.0  2.901662e+01       0.764082  1.100000e+01   \n",
              "TP_DEPENDENCIA_ADM_ESC   47820.0  2.411731e+00       0.926189  1.000000e+00   \n",
              "TP_LOCALIZACAO_ESC       47820.0  1.043580e+00       0.204161  1.000000e+00   \n",
              "TP_SIT_FUNC_ESC          47820.0  1.037286e+00       0.298561  1.000000e+00   \n",
              "CO_MUNICIPIO_PROVA      266194.0  2.919423e+06    9521.537357  2.900702e+06   \n",
              "CO_UF_PROVA             266194.0  2.900000e+01       0.000000  2.900000e+01   \n",
              "TP_PRESENCA_CN          266194.0  6.594664e-01       0.474642  0.000000e+00   \n",
              "TP_PRESENCA_CH          266194.0  6.966498e-01       0.462151  0.000000e+00   \n",
              "TP_PRESENCA_LC          266194.0  6.966498e-01       0.462151  0.000000e+00   \n",
              "TP_PRESENCA_MT          266194.0  6.594664e-01       0.474642  0.000000e+00   \n",
              "CO_PROVA_CN             175356.0  9.163912e+02      27.250799  9.090000e+02   \n",
              "CO_PROVA_CH             184844.0  8.869030e+02      28.573475  8.790000e+02   \n",
              "CO_PROVA_LC             184844.0  8.968647e+02      28.422958  8.890000e+02   \n",
              "CO_PROVA_MT             175356.0  9.064295e+02      27.385340  8.990000e+02   \n",
              "NU_NOTA_CN              175356.0  4.799396e+02      75.043774  0.000000e+00   \n",
              "NU_NOTA_CH              184844.0  5.062345e+02      94.101182  0.000000e+00   \n",
              "NU_NOTA_LC              184844.0  4.891311e+02      77.829960  0.000000e+00   \n",
              "NU_NOTA_MT              175356.0  5.135080e+02     101.187047  0.000000e+00   \n",
              "TP_LINGUA               266194.0  4.814158e-01       0.499655  0.000000e+00   \n",
              "TP_STATUS_REDACAO       184844.0  1.128892e+00       0.769342  1.000000e+00   \n",
              "NU_NOTA_COMP1           184844.0  1.163537e+02      32.975823  0.000000e+00   \n",
              "NU_NOTA_COMP2           184844.0  1.374400e+02      44.661524  0.000000e+00   \n",
              "NU_NOTA_COMP3           184844.0  1.141837e+02      35.119702  0.000000e+00   \n",
              "NU_NOTA_COMP4           184844.0  1.267852e+02      37.470281  0.000000e+00   \n",
              "NU_NOTA_COMP5           184844.0  1.115144e+02      58.994407  0.000000e+00   \n",
              "NU_NOTA_REDACAO         184844.0  6.062770e+02     184.233494  0.000000e+00   \n",
              "\n",
              "                                 25%           50%           75%           max  \n",
              "NU_INSCRICAO            2.100519e+11  2.100527e+11  2.100536e+11  2.100545e+11  \n",
              "NU_ANO                  2.021000e+03  2.021000e+03  2.021000e+03  2.021000e+03  \n",
              "TP_FAIXA_ETARIA         3.000000e+00  4.000000e+00  8.000000e+00  2.000000e+01  \n",
              "TP_ESTADO_CIVIL         1.000000e+00  1.000000e+00  1.000000e+00  4.000000e+00  \n",
              "TP_COR_RACA             2.000000e+00  3.000000e+00  3.000000e+00  5.000000e+00  \n",
              "TP_NACIONALIDADE        1.000000e+00  1.000000e+00  1.000000e+00  4.000000e+00  \n",
              "TP_ST_CONCLUSAO         1.000000e+00  1.000000e+00  2.000000e+00  4.000000e+00  \n",
              "TP_ANO_CONCLUIU         0.000000e+00  0.000000e+00  4.000000e+00  1.500000e+01  \n",
              "TP_ESCOLA               1.000000e+00  1.000000e+00  2.000000e+00  3.000000e+00  \n",
              "TP_ENSINO               1.000000e+00  1.000000e+00  1.000000e+00  2.000000e+00  \n",
              "IN_TREINEIRO            0.000000e+00  0.000000e+00  0.000000e+00  1.000000e+00  \n",
              "CO_MUNICIPIO_ESC        2.910800e+06  2.922003e+06  2.927408e+06  5.300108e+06  \n",
              "CO_UF_ESC               2.900000e+01  2.900000e+01  2.900000e+01  5.300000e+01  \n",
              "TP_DEPENDENCIA_ADM_ESC  2.000000e+00  2.000000e+00  2.000000e+00  4.000000e+00  \n",
              "TP_LOCALIZACAO_ESC      1.000000e+00  1.000000e+00  1.000000e+00  2.000000e+00  \n",
              "TP_SIT_FUNC_ESC         1.000000e+00  1.000000e+00  1.000000e+00  4.000000e+00  \n",
              "CO_MUNICIPIO_PROVA      2.910800e+06  2.919553e+06  2.927408e+06  2.933604e+06  \n",
              "CO_UF_PROVA             2.900000e+01  2.900000e+01  2.900000e+01  2.900000e+01  \n",
              "TP_PRESENCA_CN          0.000000e+00  1.000000e+00  1.000000e+00  2.000000e+00  \n",
              "TP_PRESENCA_CH          0.000000e+00  1.000000e+00  1.000000e+00  2.000000e+00  \n",
              "TP_PRESENCA_LC          0.000000e+00  1.000000e+00  1.000000e+00  2.000000e+00  \n",
              "TP_PRESENCA_MT          0.000000e+00  1.000000e+00  1.000000e+00  2.000000e+00  \n",
              "CO_PROVA_CN             9.100000e+02  9.110000e+02  9.120000e+02  1.048000e+03  \n",
              "CO_PROVA_CH             8.800000e+02  8.810000e+02  8.820000e+02  1.018000e+03  \n",
              "CO_PROVA_LC             8.900000e+02  8.910000e+02  8.920000e+02  1.028000e+03  \n",
              "CO_PROVA_MT             9.000000e+02  9.010000e+02  9.020000e+02  1.038000e+03  \n",
              "NU_NOTA_CN              4.243000e+02  4.704000e+02  5.276000e+02  8.390000e+02  \n",
              "NU_NOTA_CH              4.315000e+02  5.028000e+02  5.754000e+02  8.469000e+02  \n",
              "NU_NOTA_LC              4.323000e+02  4.902000e+02  5.447000e+02  8.216000e+02  \n",
              "NU_NOTA_MT              4.337000e+02  4.915000e+02  5.794000e+02  9.531000e+02  \n",
              "TP_LINGUA               0.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  \n",
              "TP_STATUS_REDACAO       1.000000e+00  1.000000e+00  1.000000e+00  9.000000e+00  \n",
              "NU_NOTA_COMP1           1.000000e+02  1.200000e+02  1.400000e+02  2.000000e+02  \n",
              "NU_NOTA_COMP2           1.200000e+02  1.200000e+02  1.800000e+02  2.000000e+02  \n",
              "NU_NOTA_COMP3           1.000000e+02  1.200000e+02  1.200000e+02  2.000000e+02  \n",
              "NU_NOTA_COMP4           1.200000e+02  1.200000e+02  1.400000e+02  2.000000e+02  \n",
              "NU_NOTA_COMP5           8.000000e+01  1.200000e+02  1.600000e+02  2.000000e+02  \n",
              "NU_NOTA_REDACAO         5.200000e+02  6.000000e+02  7.200000e+02  1.000000e+03  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3399084c-966e-4a3d-9cce-f5209770bd29\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>NU_INSCRICAO</th>\n",
              "      <td>266194.0</td>\n",
              "      <td>2.100527e+11</td>\n",
              "      <td>981957.687860</td>\n",
              "      <td>2.100510e+11</td>\n",
              "      <td>2.100519e+11</td>\n",
              "      <td>2.100527e+11</td>\n",
              "      <td>2.100536e+11</td>\n",
              "      <td>2.100545e+11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_ANO</th>\n",
              "      <td>266194.0</td>\n",
              "      <td>2.021000e+03</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.021000e+03</td>\n",
              "      <td>2.021000e+03</td>\n",
              "      <td>2.021000e+03</td>\n",
              "      <td>2.021000e+03</td>\n",
              "      <td>2.021000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_FAIXA_ETARIA</th>\n",
              "      <td>266194.0</td>\n",
              "      <td>5.710166e+00</td>\n",
              "      <td>3.878161</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>3.000000e+00</td>\n",
              "      <td>4.000000e+00</td>\n",
              "      <td>8.000000e+00</td>\n",
              "      <td>2.000000e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_ESTADO_CIVIL</th>\n",
              "      <td>266194.0</td>\n",
              "      <td>1.048991e+00</td>\n",
              "      <td>0.411030</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>4.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_COR_RACA</th>\n",
              "      <td>266194.0</td>\n",
              "      <td>2.301832e+00</td>\n",
              "      <td>0.907761</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>2.000000e+00</td>\n",
              "      <td>3.000000e+00</td>\n",
              "      <td>3.000000e+00</td>\n",
              "      <td>5.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_NACIONALIDADE</th>\n",
              "      <td>266194.0</td>\n",
              "      <td>1.029787e+00</td>\n",
              "      <td>0.194507</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>4.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_ST_CONCLUSAO</th>\n",
              "      <td>266194.0</td>\n",
              "      <td>1.595810e+00</td>\n",
              "      <td>0.719902</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>2.000000e+00</td>\n",
              "      <td>4.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_ANO_CONCLUIU</th>\n",
              "      <td>266194.0</td>\n",
              "      <td>2.846845e+00</td>\n",
              "      <td>4.468500</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>4.000000e+00</td>\n",
              "      <td>1.500000e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_ESCOLA</th>\n",
              "      <td>266194.0</td>\n",
              "      <td>1.379663e+00</td>\n",
              "      <td>0.570947</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>2.000000e+00</td>\n",
              "      <td>3.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_ENSINO</th>\n",
              "      <td>84388.0</td>\n",
              "      <td>1.013272e+00</td>\n",
              "      <td>0.114438</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>2.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>IN_TREINEIRO</th>\n",
              "      <td>266194.0</td>\n",
              "      <td>1.226587e-01</td>\n",
              "      <td>0.328046</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_MUNICIPIO_ESC</th>\n",
              "      <td>47820.0</td>\n",
              "      <td>2.921430e+06</td>\n",
              "      <td>77089.022929</td>\n",
              "      <td>1.100122e+06</td>\n",
              "      <td>2.910800e+06</td>\n",
              "      <td>2.922003e+06</td>\n",
              "      <td>2.927408e+06</td>\n",
              "      <td>5.300108e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_UF_ESC</th>\n",
              "      <td>47820.0</td>\n",
              "      <td>2.901662e+01</td>\n",
              "      <td>0.764082</td>\n",
              "      <td>1.100000e+01</td>\n",
              "      <td>2.900000e+01</td>\n",
              "      <td>2.900000e+01</td>\n",
              "      <td>2.900000e+01</td>\n",
              "      <td>5.300000e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_DEPENDENCIA_ADM_ESC</th>\n",
              "      <td>47820.0</td>\n",
              "      <td>2.411731e+00</td>\n",
              "      <td>0.926189</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>2.000000e+00</td>\n",
              "      <td>2.000000e+00</td>\n",
              "      <td>2.000000e+00</td>\n",
              "      <td>4.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_LOCALIZACAO_ESC</th>\n",
              "      <td>47820.0</td>\n",
              "      <td>1.043580e+00</td>\n",
              "      <td>0.204161</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>2.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_SIT_FUNC_ESC</th>\n",
              "      <td>47820.0</td>\n",
              "      <td>1.037286e+00</td>\n",
              "      <td>0.298561</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>4.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_MUNICIPIO_PROVA</th>\n",
              "      <td>266194.0</td>\n",
              "      <td>2.919423e+06</td>\n",
              "      <td>9521.537357</td>\n",
              "      <td>2.900702e+06</td>\n",
              "      <td>2.910800e+06</td>\n",
              "      <td>2.919553e+06</td>\n",
              "      <td>2.927408e+06</td>\n",
              "      <td>2.933604e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_UF_PROVA</th>\n",
              "      <td>266194.0</td>\n",
              "      <td>2.900000e+01</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.900000e+01</td>\n",
              "      <td>2.900000e+01</td>\n",
              "      <td>2.900000e+01</td>\n",
              "      <td>2.900000e+01</td>\n",
              "      <td>2.900000e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_PRESENCA_CN</th>\n",
              "      <td>266194.0</td>\n",
              "      <td>6.594664e-01</td>\n",
              "      <td>0.474642</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>2.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_PRESENCA_CH</th>\n",
              "      <td>266194.0</td>\n",
              "      <td>6.966498e-01</td>\n",
              "      <td>0.462151</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>2.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_PRESENCA_LC</th>\n",
              "      <td>266194.0</td>\n",
              "      <td>6.966498e-01</td>\n",
              "      <td>0.462151</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>2.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_PRESENCA_MT</th>\n",
              "      <td>266194.0</td>\n",
              "      <td>6.594664e-01</td>\n",
              "      <td>0.474642</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>2.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_PROVA_CN</th>\n",
              "      <td>175356.0</td>\n",
              "      <td>9.163912e+02</td>\n",
              "      <td>27.250799</td>\n",
              "      <td>9.090000e+02</td>\n",
              "      <td>9.100000e+02</td>\n",
              "      <td>9.110000e+02</td>\n",
              "      <td>9.120000e+02</td>\n",
              "      <td>1.048000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_PROVA_CH</th>\n",
              "      <td>184844.0</td>\n",
              "      <td>8.869030e+02</td>\n",
              "      <td>28.573475</td>\n",
              "      <td>8.790000e+02</td>\n",
              "      <td>8.800000e+02</td>\n",
              "      <td>8.810000e+02</td>\n",
              "      <td>8.820000e+02</td>\n",
              "      <td>1.018000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_PROVA_LC</th>\n",
              "      <td>184844.0</td>\n",
              "      <td>8.968647e+02</td>\n",
              "      <td>28.422958</td>\n",
              "      <td>8.890000e+02</td>\n",
              "      <td>8.900000e+02</td>\n",
              "      <td>8.910000e+02</td>\n",
              "      <td>8.920000e+02</td>\n",
              "      <td>1.028000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_PROVA_MT</th>\n",
              "      <td>175356.0</td>\n",
              "      <td>9.064295e+02</td>\n",
              "      <td>27.385340</td>\n",
              "      <td>8.990000e+02</td>\n",
              "      <td>9.000000e+02</td>\n",
              "      <td>9.010000e+02</td>\n",
              "      <td>9.020000e+02</td>\n",
              "      <td>1.038000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_CN</th>\n",
              "      <td>175356.0</td>\n",
              "      <td>4.799396e+02</td>\n",
              "      <td>75.043774</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>4.243000e+02</td>\n",
              "      <td>4.704000e+02</td>\n",
              "      <td>5.276000e+02</td>\n",
              "      <td>8.390000e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_CH</th>\n",
              "      <td>184844.0</td>\n",
              "      <td>5.062345e+02</td>\n",
              "      <td>94.101182</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>4.315000e+02</td>\n",
              "      <td>5.028000e+02</td>\n",
              "      <td>5.754000e+02</td>\n",
              "      <td>8.469000e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_LC</th>\n",
              "      <td>184844.0</td>\n",
              "      <td>4.891311e+02</td>\n",
              "      <td>77.829960</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>4.323000e+02</td>\n",
              "      <td>4.902000e+02</td>\n",
              "      <td>5.447000e+02</td>\n",
              "      <td>8.216000e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_MT</th>\n",
              "      <td>175356.0</td>\n",
              "      <td>5.135080e+02</td>\n",
              "      <td>101.187047</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>4.337000e+02</td>\n",
              "      <td>4.915000e+02</td>\n",
              "      <td>5.794000e+02</td>\n",
              "      <td>9.531000e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_LINGUA</th>\n",
              "      <td>266194.0</td>\n",
              "      <td>4.814158e-01</td>\n",
              "      <td>0.499655</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_STATUS_REDACAO</th>\n",
              "      <td>184844.0</td>\n",
              "      <td>1.128892e+00</td>\n",
              "      <td>0.769342</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>1.000000e+00</td>\n",
              "      <td>9.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_COMP1</th>\n",
              "      <td>184844.0</td>\n",
              "      <td>1.163537e+02</td>\n",
              "      <td>32.975823</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>1.000000e+02</td>\n",
              "      <td>1.200000e+02</td>\n",
              "      <td>1.400000e+02</td>\n",
              "      <td>2.000000e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_COMP2</th>\n",
              "      <td>184844.0</td>\n",
              "      <td>1.374400e+02</td>\n",
              "      <td>44.661524</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>1.200000e+02</td>\n",
              "      <td>1.200000e+02</td>\n",
              "      <td>1.800000e+02</td>\n",
              "      <td>2.000000e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_COMP3</th>\n",
              "      <td>184844.0</td>\n",
              "      <td>1.141837e+02</td>\n",
              "      <td>35.119702</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>1.000000e+02</td>\n",
              "      <td>1.200000e+02</td>\n",
              "      <td>1.200000e+02</td>\n",
              "      <td>2.000000e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_COMP4</th>\n",
              "      <td>184844.0</td>\n",
              "      <td>1.267852e+02</td>\n",
              "      <td>37.470281</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>1.200000e+02</td>\n",
              "      <td>1.200000e+02</td>\n",
              "      <td>1.400000e+02</td>\n",
              "      <td>2.000000e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_COMP5</th>\n",
              "      <td>184844.0</td>\n",
              "      <td>1.115144e+02</td>\n",
              "      <td>58.994407</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>8.000000e+01</td>\n",
              "      <td>1.200000e+02</td>\n",
              "      <td>1.600000e+02</td>\n",
              "      <td>2.000000e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_REDACAO</th>\n",
              "      <td>184844.0</td>\n",
              "      <td>6.062770e+02</td>\n",
              "      <td>184.233494</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>5.200000e+02</td>\n",
              "      <td>6.000000e+02</td>\n",
              "      <td>7.200000e+02</td>\n",
              "      <td>1.000000e+03</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3399084c-966e-4a3d-9cce-f5209770bd29')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3399084c-966e-4a3d-9cce-f5209770bd29 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3399084c-966e-4a3d-9cce-f5209770bd29');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-aecf5515-d102-4e8a-b6b3-1ca9b4c68193\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-aecf5515-d102-4e8a-b6b3-1ca9b4c68193')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-aecf5515-d102-4e8a-b6b3-1ca9b4c68193 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 38,\n  \"fields\": [\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 75084.95320362346,\n        \"min\": 47820.0,\n        \"max\": 266194.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          84388.0,\n          184844.0,\n          47820.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 34075026172.17439,\n        \"min\": 0.12265866247924447,\n        \"max\": 210052726549.6326,\n        \"num_unique_values\": 36,\n        \"samples\": [\n          606.2769686871092,\n          2.4117314930991216,\n          489.13113057497134\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 159405.7397260127,\n        \"min\": 0.0,\n        \"max\": 981957.6878601755,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          101.18704697696714,\n          0.9261893848696334,\n          94.101181738158\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 34074756492.888878,\n        \"min\": 0.0,\n        \"max\": 210051014333.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          889.0,\n          879.0,\n          210051014333.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"25%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 34074888084.33022,\n        \"min\": 0.0,\n        \"max\": 210051874786.0,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          210051874786.0,\n          120.0,\n          433.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"50%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 34075028570.27455,\n        \"min\": 0.0,\n        \"max\": 210052741349.5,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          210052741349.5,\n          491.5,\n          502.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"75%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 34075169037.64271,\n        \"min\": 0.0,\n        \"max\": 210053607621.5,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          575.4,\n          29.0,\n          210053607621.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 34075297765.509174,\n        \"min\": 1.0,\n        \"max\": 210054465467.0,\n        \"num_unique_values\": 24,\n        \"samples\": [\n          1.0,\n          1038.0,\n          210054465467.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#mostrar configuração de contagem\n",
        "df.index"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2LtH1QkBntu0",
        "outputId": "7aa9aa8e-77c0-48c4-a6be-e2f5f3d2a83f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "RangeIndex(start=0, stop=266194, step=1)"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#mostrar quandidade de valores únicos por coluna\n",
        "df.nunique().sort_values(ascending = True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "0rvWCmQgowpi",
        "outputId": "9d51e9d5-bec4-4dad-df02-f9b573bfe664"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "NU_ANO                         1\n",
              "SG_UF_PROVA                    1\n",
              "CO_UF_PROVA                    1\n",
              "TP_SEXO                        2\n",
              "TP_ENSINO                      2\n",
              "TP_LOCALIZACAO_ESC             2\n",
              "IN_TREINEIRO                   2\n",
              "TP_LINGUA                      2\n",
              "TP_PRESENCA_CN                 3\n",
              "TP_PRESENCA_CH                 3\n",
              "TP_PRESENCA_MT                 3\n",
              "TP_PRESENCA_LC                 3\n",
              "TP_ESCOLA                      3\n",
              "TP_DEPENDENCIA_ADM_ESC         4\n",
              "TP_SIT_FUNC_ESC                4\n",
              "TP_ST_CONCLUSAO                4\n",
              "TP_ESTADO_CIVIL                5\n",
              "TP_NACIONALIDADE               5\n",
              "TP_COR_RACA                    6\n",
              "TX_GABARITO_MT                 8\n",
              "TX_GABARITO_CN                 8\n",
              "TX_GABARITO_CH                 8\n",
              "TP_STATUS_REDACAO              8\n",
              "TX_GABARITO_LC                10\n",
              "NU_NOTA_COMP2                 10\n",
              "NU_NOTA_COMP1                 11\n",
              "NU_NOTA_COMP4                 11\n",
              "NU_NOTA_COMP3                 11\n",
              "NU_NOTA_COMP5                 11\n",
              "TP_ANO_CONCLUIU               16\n",
              "CO_PROVA_MT                   18\n",
              "CO_PROVA_LC                   18\n",
              "CO_PROVA_CN                   18\n",
              "CO_PROVA_CH                   18\n",
              "TP_FAIXA_ETARIA               20\n",
              "SG_UF_ESC                     23\n",
              "CO_UF_ESC                     23\n",
              "NU_NOTA_REDACAO               50\n",
              "CO_MUNICIPIO_PROVA           162\n",
              "NO_MUNICIPIO_PROVA           162\n",
              "NO_MUNICIPIO_ESC             588\n",
              "CO_MUNICIPIO_ESC             590\n",
              "NU_NOTA_LC                  4183\n",
              "NU_NOTA_CN                  4185\n",
              "NU_NOTA_CH                  4512\n",
              "NU_NOTA_MT                  5371\n",
              "TX_RESPOSTAS_MT           175270\n",
              "TX_RESPOSTAS_CN           175290\n",
              "TX_RESPOSTAS_CH           184475\n",
              "TX_RESPOSTAS_LC           184718\n",
              "NU_INSCRICAO              266194\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>NU_ANO</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SG_UF_PROVA</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_UF_PROVA</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_SEXO</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_ENSINO</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_LOCALIZACAO_ESC</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>IN_TREINEIRO</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_LINGUA</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_PRESENCA_CN</th>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_PRESENCA_CH</th>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_PRESENCA_MT</th>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_PRESENCA_LC</th>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_ESCOLA</th>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_DEPENDENCIA_ADM_ESC</th>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_SIT_FUNC_ESC</th>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_ST_CONCLUSAO</th>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_ESTADO_CIVIL</th>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_NACIONALIDADE</th>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_COR_RACA</th>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_GABARITO_MT</th>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_GABARITO_CN</th>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_GABARITO_CH</th>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_STATUS_REDACAO</th>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_GABARITO_LC</th>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_COMP2</th>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_COMP1</th>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_COMP4</th>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_COMP3</th>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_COMP5</th>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_ANO_CONCLUIU</th>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_PROVA_MT</th>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_PROVA_LC</th>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_PROVA_CN</th>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_PROVA_CH</th>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_FAIXA_ETARIA</th>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SG_UF_ESC</th>\n",
              "      <td>23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_UF_ESC</th>\n",
              "      <td>23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_REDACAO</th>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_MUNICIPIO_PROVA</th>\n",
              "      <td>162</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NO_MUNICIPIO_PROVA</th>\n",
              "      <td>162</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NO_MUNICIPIO_ESC</th>\n",
              "      <td>588</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO_MUNICIPIO_ESC</th>\n",
              "      <td>590</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_LC</th>\n",
              "      <td>4183</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_CN</th>\n",
              "      <td>4185</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_CH</th>\n",
              "      <td>4512</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_NOTA_MT</th>\n",
              "      <td>5371</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_RESPOSTAS_MT</th>\n",
              "      <td>175270</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_RESPOSTAS_CN</th>\n",
              "      <td>175290</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_RESPOSTAS_CH</th>\n",
              "      <td>184475</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TX_RESPOSTAS_LC</th>\n",
              "      <td>184718</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NU_INSCRICAO</th>\n",
              "      <td>266194</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#seleção de colunas\n",
        "df.TP_ESCOLA.value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 210
        },
        "id": "kh3MK-cuo9Sx",
        "outputId": "135e6829-0860-42fd-f6d1-2f955d4d0802"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "TP_ESCOLA\n",
              "1    177170\n",
              "2     76984\n",
              "3     12040\n",
              "Name: count, dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TP_ESCOLA</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>177170</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>76984</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>12040</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['TP_ESCOLA']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 459
        },
        "id": "300XmNJwps8w",
        "outputId": "3c3aa19d-5a73-4843-b3c7-5b443ec36bec"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0         2\n",
              "1         2\n",
              "2         2\n",
              "3         1\n",
              "4         1\n",
              "         ..\n",
              "266189    1\n",
              "266190    1\n",
              "266191    1\n",
              "266192    1\n",
              "266193    1\n",
              "Name: TP_ESCOLA, Length: 266194, dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>TP_ESCOLA</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266189</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266190</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266191</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266192</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266193</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>266194 rows × 1 columns</p>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.loc[:, 'TP_SEXO']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 459
        },
        "id": "ARRijzSVp77m",
        "outputId": "9220ead6-49ee-4eda-9dc0-782fec889f15"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0         F\n",
              "1         F\n",
              "2         F\n",
              "3         F\n",
              "4         M\n",
              "         ..\n",
              "266189    M\n",
              "266190    M\n",
              "266191    M\n",
              "266192    M\n",
              "266193    F\n",
              "Name: TP_SEXO, Length: 266194, dtype: object"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>TP_SEXO</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>F</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>F</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>F</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>F</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266189</th>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266190</th>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266191</th>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266192</th>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266193</th>\n",
              "      <td>F</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>266194 rows × 1 columns</p>\n",
              "</div><br><label><b>dtype:</b> object</label>"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#selecionar múltiplas\n",
        "df[['TP_SEXO', 'TP_ESCOLA']]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "E4ZmbPBmqoMO",
        "outputId": "9648c0c4-b561-4d0a-e9a0-f21b01ebf9f1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       TP_SEXO  TP_ESCOLA\n",
              "0            F          2\n",
              "1            F          2\n",
              "2            F          2\n",
              "3            F          1\n",
              "4            M          1\n",
              "...        ...        ...\n",
              "266189       M          1\n",
              "266190       M          1\n",
              "266191       M          1\n",
              "266192       M          1\n",
              "266193       F          1\n",
              "\n",
              "[266194 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1b0dbf24-9a33-4c91-870e-be9085bf620c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>TP_SEXO</th>\n",
              "      <th>TP_ESCOLA</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>F</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>F</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>F</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>F</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266189</th>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266190</th>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266191</th>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266192</th>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266193</th>\n",
              "      <td>F</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>266194 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1b0dbf24-9a33-4c91-870e-be9085bf620c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1b0dbf24-9a33-4c91-870e-be9085bf620c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1b0dbf24-9a33-4c91-870e-be9085bf620c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-5128d7ef-0259-49d5-a0ea-fd82966340f7\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5128d7ef-0259-49d5-a0ea-fd82966340f7')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-5128d7ef-0259-49d5-a0ea-fd82966340f7 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.loc[:, ['TP_SEXO', 'TP_ESCOLA']]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "KpowxXsXrW65",
        "outputId": "914eed0f-3d69-4092-bc2f-a3d72dbf081e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       TP_SEXO  TP_ESCOLA\n",
              "0            F          2\n",
              "1            F          2\n",
              "2            F          2\n",
              "3            F          1\n",
              "4            M          1\n",
              "...        ...        ...\n",
              "266189       M          1\n",
              "266190       M          1\n",
              "266191       M          1\n",
              "266192       M          1\n",
              "266193       F          1\n",
              "\n",
              "[266194 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b5c594e4-5d8f-4290-aa2a-25d8b95ed32c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>TP_SEXO</th>\n",
              "      <th>TP_ESCOLA</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>F</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>F</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>F</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>F</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266189</th>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266190</th>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266191</th>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266192</th>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266193</th>\n",
              "      <td>F</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>266194 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b5c594e4-5d8f-4290-aa2a-25d8b95ed32c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b5c594e4-5d8f-4290-aa2a-25d8b95ed32c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b5c594e4-5d8f-4290-aa2a-25d8b95ed32c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-2edeab0b-4e5f-4c5e-a1d1-d54204623af7\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2edeab0b-4e5f-4c5e-a1d1-d54204623af7')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-2edeab0b-4e5f-4c5e-a1d1-d54204623af7 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#seleciona colunas pela possição\n",
        "df.iloc[:, 0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 459
        },
        "id": "TzZImKL7r5pv",
        "outputId": "41bad804-6e94-46ac-d7f2-91b5aa306934"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0         210051128744\n",
              "1         210054173438\n",
              "2         210052118573\n",
              "3         210052350230\n",
              "4         210053156861\n",
              "              ...     \n",
              "266189    210051432069\n",
              "266190    210051106175\n",
              "266191    210051995005\n",
              "266192    210053234415\n",
              "266193    210054027870\n",
              "Name: NU_INSCRICAO, Length: 266194, dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>NU_INSCRICAO</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>210051128744</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>210054173438</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>210052118573</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>210052350230</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>210053156861</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266189</th>\n",
              "      <td>210051432069</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266190</th>\n",
              "      <td>210051106175</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266191</th>\n",
              "      <td>210051995005</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266192</th>\n",
              "      <td>210053234415</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266193</th>\n",
              "      <td>210054027870</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>266194 rows × 1 columns</p>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.iloc[0:5, 0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 241
        },
        "id": "5wd1TvDRsJHb",
        "outputId": "9cfa80de-537f-490b-b3fc-c79eff769136"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    210051128744\n",
              "1    210054173438\n",
              "2    210052118573\n",
              "3    210052350230\n",
              "4    210053156861\n",
              "Name: NU_INSCRICAO, dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>NU_INSCRICAO</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>210051128744</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>210054173438</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>210052118573</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>210052350230</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>210053156861</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#selecionar apenas colunas de um tipo especifico\n",
        "df.select_dtypes(include = [int, float])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 444
        },
        "id": "DjEb-89esYjQ",
        "outputId": "7dbbcf8d-e7c0-437f-b094-369ffb5587fa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        NU_INSCRICAO  NU_ANO  TP_FAIXA_ETARIA  TP_ESTADO_CIVIL  TP_COR_RACA  \\\n",
              "0       210051128744    2021                4                1            3   \n",
              "1       210054173438    2021                5                1            2   \n",
              "2       210052118573    2021                3                1            3   \n",
              "3       210052350230    2021               10                1            2   \n",
              "4       210053156861    2021                9                1            2   \n",
              "...              ...     ...              ...              ...          ...   \n",
              "266189  210051432069    2021               12                1            3   \n",
              "266190  210051106175    2021               14                2            2   \n",
              "266191  210051995005    2021               11                0            2   \n",
              "266192  210053234415    2021               12                2            2   \n",
              "266193  210054027870    2021                5                1            2   \n",
              "\n",
              "        TP_NACIONALIDADE  TP_ST_CONCLUSAO  TP_ANO_CONCLUIU  TP_ESCOLA  \\\n",
              "0                      1                2                0          2   \n",
              "1                      1                2                0          2   \n",
              "2                      1                2                0          2   \n",
              "3                      1                1                8          1   \n",
              "4                      1                1                5          1   \n",
              "...                  ...              ...              ...        ...   \n",
              "266189                 1                1                0          1   \n",
              "266190                 1                1                0          1   \n",
              "266191                 1                1               12          1   \n",
              "266192                 1                1               15          1   \n",
              "266193                 1                1                2          1   \n",
              "\n",
              "        TP_ENSINO  IN_TREINEIRO  CO_MUNICIPIO_ESC  CO_UF_ESC  \\\n",
              "0             1.0             0               NaN        NaN   \n",
              "1             1.0             0         2927408.0       29.0   \n",
              "2             1.0             0               NaN        NaN   \n",
              "3             NaN             0               NaN        NaN   \n",
              "4             NaN             0               NaN        NaN   \n",
              "...           ...           ...               ...        ...   \n",
              "266189        NaN             0               NaN        NaN   \n",
              "266190        NaN             0               NaN        NaN   \n",
              "266191        NaN             0               NaN        NaN   \n",
              "266192        NaN             0               NaN        NaN   \n",
              "266193        NaN             0               NaN        NaN   \n",
              "\n",
              "        TP_DEPENDENCIA_ADM_ESC  TP_LOCALIZACAO_ESC  TP_SIT_FUNC_ESC  \\\n",
              "0                          NaN                 NaN              NaN   \n",
              "1                          1.0                 1.0              1.0   \n",
              "2                          NaN                 NaN              NaN   \n",
              "3                          NaN                 NaN              NaN   \n",
              "4                          NaN                 NaN              NaN   \n",
              "...                        ...                 ...              ...   \n",
              "266189                     NaN                 NaN              NaN   \n",
              "266190                     NaN                 NaN              NaN   \n",
              "266191                     NaN                 NaN              NaN   \n",
              "266192                     NaN                 NaN              NaN   \n",
              "266193                     NaN                 NaN              NaN   \n",
              "\n",
              "        CO_MUNICIPIO_PROVA  CO_UF_PROVA  TP_PRESENCA_CN  TP_PRESENCA_CH  \\\n",
              "0                  2927200           29               1               1   \n",
              "1                  2927408           29               0               0   \n",
              "2                  2903201           29               1               1   \n",
              "3                  2928802           29               1               1   \n",
              "4                  2910800           29               1               1   \n",
              "...                    ...          ...             ...             ...   \n",
              "266189             2900702           29               0               0   \n",
              "266190             2918407           29               0               0   \n",
              "266191             2927408           29               0               0   \n",
              "266192             2927408           29               0               0   \n",
              "266193             2927408           29               0               0   \n",
              "\n",
              "        TP_PRESENCA_LC  TP_PRESENCA_MT  CO_PROVA_CN  CO_PROVA_CH  CO_PROVA_LC  \\\n",
              "0                    1               1        909.0        881.0        892.0   \n",
              "1                    0               0          NaN          NaN          NaN   \n",
              "2                    1               1        912.0        882.0        891.0   \n",
              "3                    1               1        911.0        880.0        890.0   \n",
              "4                    1               1       1014.0       1000.0       1004.0   \n",
              "...                ...             ...          ...          ...          ...   \n",
              "266189               0               0          NaN          NaN          NaN   \n",
              "266190               0               0          NaN          NaN          NaN   \n",
              "266191               0               0          NaN          NaN          NaN   \n",
              "266192               0               0          NaN          NaN          NaN   \n",
              "266193               0               0          NaN          NaN          NaN   \n",
              "\n",
              "        CO_PROVA_MT  NU_NOTA_CN  NU_NOTA_CH  NU_NOTA_LC  NU_NOTA_MT  \\\n",
              "0             899.0       507.6       539.2       494.6       413.3   \n",
              "1               NaN         NaN         NaN         NaN         NaN   \n",
              "2             901.0       439.6       437.7       455.9       446.2   \n",
              "3             902.0       548.1       619.5       676.3       386.6   \n",
              "4            1010.0       465.2       613.1       522.1       579.6   \n",
              "...             ...         ...         ...         ...         ...   \n",
              "266189          NaN         NaN         NaN         NaN         NaN   \n",
              "266190          NaN         NaN         NaN         NaN         NaN   \n",
              "266191          NaN         NaN         NaN         NaN         NaN   \n",
              "266192          NaN         NaN         NaN         NaN         NaN   \n",
              "266193          NaN         NaN         NaN         NaN         NaN   \n",
              "\n",
              "        TP_LINGUA  TP_STATUS_REDACAO  NU_NOTA_COMP1  NU_NOTA_COMP2  \\\n",
              "0               1                1.0           80.0          120.0   \n",
              "1               0                NaN            NaN            NaN   \n",
              "2               0                1.0           80.0          120.0   \n",
              "3               0                1.0          120.0          120.0   \n",
              "4               0                1.0          100.0          120.0   \n",
              "...           ...                ...            ...            ...   \n",
              "266189          1                NaN            NaN            NaN   \n",
              "266190          1                NaN            NaN            NaN   \n",
              "266191          1                NaN            NaN            NaN   \n",
              "266192          1                NaN            NaN            NaN   \n",
              "266193          0                NaN            NaN            NaN   \n",
              "\n",
              "        NU_NOTA_COMP3  NU_NOTA_COMP4  NU_NOTA_COMP5  NU_NOTA_REDACAO  \n",
              "0                80.0           80.0           20.0            380.0  \n",
              "1                 NaN            NaN            NaN              NaN  \n",
              "2                80.0          100.0           80.0            460.0  \n",
              "3               100.0          120.0          120.0            580.0  \n",
              "4               100.0          120.0          100.0            540.0  \n",
              "...               ...            ...            ...              ...  \n",
              "266189            NaN            NaN            NaN              NaN  \n",
              "266190            NaN            NaN            NaN              NaN  \n",
              "266191            NaN            NaN            NaN              NaN  \n",
              "266192            NaN            NaN            NaN              NaN  \n",
              "266193            NaN            NaN            NaN              NaN  \n",
              "\n",
              "[266194 rows x 38 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-595b1882-4146-434f-8849-1330ea73ca2d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>NU_INSCRICAO</th>\n",
              "      <th>NU_ANO</th>\n",
              "      <th>TP_FAIXA_ETARIA</th>\n",
              "      <th>TP_ESTADO_CIVIL</th>\n",
              "      <th>TP_COR_RACA</th>\n",
              "      <th>TP_NACIONALIDADE</th>\n",
              "      <th>TP_ST_CONCLUSAO</th>\n",
              "      <th>TP_ANO_CONCLUIU</th>\n",
              "      <th>TP_ESCOLA</th>\n",
              "      <th>TP_ENSINO</th>\n",
              "      <th>IN_TREINEIRO</th>\n",
              "      <th>CO_MUNICIPIO_ESC</th>\n",
              "      <th>CO_UF_ESC</th>\n",
              "      <th>TP_DEPENDENCIA_ADM_ESC</th>\n",
              "      <th>TP_LOCALIZACAO_ESC</th>\n",
              "      <th>TP_SIT_FUNC_ESC</th>\n",
              "      <th>CO_MUNICIPIO_PROVA</th>\n",
              "      <th>CO_UF_PROVA</th>\n",
              "      <th>TP_PRESENCA_CN</th>\n",
              "      <th>TP_PRESENCA_CH</th>\n",
              "      <th>TP_PRESENCA_LC</th>\n",
              "      <th>TP_PRESENCA_MT</th>\n",
              "      <th>CO_PROVA_CN</th>\n",
              "      <th>CO_PROVA_CH</th>\n",
              "      <th>CO_PROVA_LC</th>\n",
              "      <th>CO_PROVA_MT</th>\n",
              "      <th>NU_NOTA_CN</th>\n",
              "      <th>NU_NOTA_CH</th>\n",
              "      <th>NU_NOTA_LC</th>\n",
              "      <th>NU_NOTA_MT</th>\n",
              "      <th>TP_LINGUA</th>\n",
              "      <th>TP_STATUS_REDACAO</th>\n",
              "      <th>NU_NOTA_COMP1</th>\n",
              "      <th>NU_NOTA_COMP2</th>\n",
              "      <th>NU_NOTA_COMP3</th>\n",
              "      <th>NU_NOTA_COMP4</th>\n",
              "      <th>NU_NOTA_COMP5</th>\n",
              "      <th>NU_NOTA_REDACAO</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>210051128744</td>\n",
              "      <td>2021</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927200</td>\n",
              "      <td>29</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>909.0</td>\n",
              "      <td>881.0</td>\n",
              "      <td>892.0</td>\n",
              "      <td>899.0</td>\n",
              "      <td>507.6</td>\n",
              "      <td>539.2</td>\n",
              "      <td>494.6</td>\n",
              "      <td>413.3</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>380.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>210054173438</td>\n",
              "      <td>2021</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2927408.0</td>\n",
              "      <td>29.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2927408</td>\n",
              "      <td>29</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>210052118573</td>\n",
              "      <td>2021</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2903201</td>\n",
              "      <td>29</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>912.0</td>\n",
              "      <td>882.0</td>\n",
              "      <td>891.0</td>\n",
              "      <td>901.0</td>\n",
              "      <td>439.6</td>\n",
              "      <td>437.7</td>\n",
              "      <td>455.9</td>\n",
              "      <td>446.2</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>460.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>210052350230</td>\n",
              "      <td>2021</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2928802</td>\n",
              "      <td>29</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>911.0</td>\n",
              "      <td>880.0</td>\n",
              "      <td>890.0</td>\n",
              "      <td>902.0</td>\n",
              "      <td>548.1</td>\n",
              "      <td>619.5</td>\n",
              "      <td>676.3</td>\n",
              "      <td>386.6</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>580.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>210053156861</td>\n",
              "      <td>2021</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2910800</td>\n",
              "      <td>29</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1014.0</td>\n",
              "      <td>1000.0</td>\n",
              "      <td>1004.0</td>\n",
              "      <td>1010.0</td>\n",
              "      <td>465.2</td>\n",
              "      <td>613.1</td>\n",
              "      <td>522.1</td>\n",
              "      <td>579.6</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>540.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266189</th>\n",
              "      <td>210051432069</td>\n",
              "      <td>2021</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2900702</td>\n",
              "      <td>29</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266190</th>\n",
              "      <td>210051106175</td>\n",
              "      <td>2021</td>\n",
              "      <td>14</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2918407</td>\n",
              "      <td>29</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266191</th>\n",
              "      <td>210051995005</td>\n",
              "      <td>2021</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927408</td>\n",
              "      <td>29</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266192</th>\n",
              "      <td>210053234415</td>\n",
              "      <td>2021</td>\n",
              "      <td>12</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927408</td>\n",
              "      <td>29</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266193</th>\n",
              "      <td>210054027870</td>\n",
              "      <td>2021</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927408</td>\n",
              "      <td>29</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>266194 rows × 38 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-595b1882-4146-434f-8849-1330ea73ca2d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-595b1882-4146-434f-8849-1330ea73ca2d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-595b1882-4146-434f-8849-1330ea73ca2d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-99733e34-1835-4c6f-b167-2e5fb5609893\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-99733e34-1835-4c6f-b167-2e5fb5609893')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-99733e34-1835-4c6f-b167-2e5fb5609893 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#da para incluir tipos específicos de dados também\n",
        "df.select_dtypes(include = object)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 444
        },
        "id": "5RFicp40uSVM",
        "outputId": "fe3c269e-05ce-47ac-b813-db0977fcc4bb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       TP_SEXO NO_MUNICIPIO_ESC SG_UF_ESC NO_MUNICIPIO_PROVA SG_UF_PROVA  \\\n",
              "0            F              NaN       NaN        Ruy Barbosa          BA   \n",
              "1            F         Salvador        BA           Salvador          BA   \n",
              "2            F              NaN       NaN          Barreiras          BA   \n",
              "3            F              NaN       NaN      Santo Estêvão          BA   \n",
              "4            M              NaN       NaN   Feira de Santana          BA   \n",
              "...        ...              ...       ...                ...         ...   \n",
              "266189       M              NaN       NaN         Alagoinhas          BA   \n",
              "266190       M              NaN       NaN           Juazeiro          BA   \n",
              "266191       M              NaN       NaN           Salvador          BA   \n",
              "266192       M              NaN       NaN           Salvador          BA   \n",
              "266193       F              NaN       NaN           Salvador          BA   \n",
              "\n",
              "                                      TX_RESPOSTAS_CN  \\\n",
              "0       BAEDEBDECCEAEDDCBDEDAEECEEEDBDECBDCECBCCDABED   \n",
              "1                                                 NaN   \n",
              "2       BCEDEACAEDCEDCBDDCCAADABADDEBEECBACDCCABBDCCA   \n",
              "3       CCAECCADEAADDEDDEECEDDEADDDCACDEDCDCDEADBEDDE   \n",
              "4       CDCCBDBBDCBACEBDACBCACADBCBECCEBCDDEBDACEECCD   \n",
              "...                                               ...   \n",
              "266189                                            NaN   \n",
              "266190                                            NaN   \n",
              "266191                                            NaN   \n",
              "266192                                            NaN   \n",
              "266193                                            NaN   \n",
              "\n",
              "                                      TX_RESPOSTAS_CH  \\\n",
              "0       EEEBAABCBCDBEAEBEACEDDEDECACBDBCDACECDAECBCBD   \n",
              "1                                                 NaN   \n",
              "2       AAEADCDCAAADCBBBAABBEAEDABCDAACDDCBDAAABAABBB   \n",
              "3       DBBEADDCABABCECEAEBEAEDCBCAEABEEDEBBEAABCBDCD   \n",
              "4       CCBAADECCBACBECCBEADAEBEACBEBBEADEBBABDACDEBC   \n",
              "...                                               ...   \n",
              "266189                                            NaN   \n",
              "266190                                            NaN   \n",
              "266191                                            NaN   \n",
              "266192                                            NaN   \n",
              "266193                                            NaN   \n",
              "\n",
              "                                          TX_RESPOSTAS_LC  \\\n",
              "0       99999ACAEEEEBDEACDACDEABCEABBDEDBAEEBDEEACDBAC...   \n",
              "1                                                     NaN   \n",
              "2       EDBEC99999DDAAEBBDCDBBAABDECAADAEACCDABCEABABE...   \n",
              "3       ABCCA99999DDCACDCACABBEAAEBDAEEBDEEAADACEEDDDB...   \n",
              "4       BADCE99999DABAABBABBBCEDBDCDABEABCBBDCACBABAAA...   \n",
              "...                                                   ...   \n",
              "266189                                                NaN   \n",
              "266190                                                NaN   \n",
              "266191                                                NaN   \n",
              "266192                                                NaN   \n",
              "266193                                                NaN   \n",
              "\n",
              "                                      TX_RESPOSTAS_MT  \\\n",
              "0       BACEACDACBAAAEDCECABBACDCDBBA.CEABCDADADBECBE   \n",
              "1                                                 NaN   \n",
              "2       EBBEBDCCDDCDCBADABBBCCEABDADCBCCACBDACDCDADCE   \n",
              "3       CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   \n",
              "4       CCBACBBCCCCEDDDDCBCCDCACCCBBBDDDBCBADDBCABACA   \n",
              "...                                               ...   \n",
              "266189                                            NaN   \n",
              "266190                                            NaN   \n",
              "266191                                            NaN   \n",
              "266192                                            NaN   \n",
              "266193                                            NaN   \n",
              "\n",
              "                                       TX_GABARITO_CN  \\\n",
              "0       EDECABEDABCBEBACCDCBBEEBBCBDAAECDCBDCDBBBADCD   \n",
              "1                                                 NaN   \n",
              "2       DABCEDEBEEBBCABEDDCBCBECDADCDAACBDCCCDBBBEBAB   \n",
              "3       CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB   \n",
              "4       CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB   \n",
              "...                                               ...   \n",
              "266189                                            NaN   \n",
              "266190                                            NaN   \n",
              "266191                                            NaN   \n",
              "266192                                            NaN   \n",
              "266193                                            NaN   \n",
              "\n",
              "                                       TX_GABARITO_CH  \\\n",
              "0       BEECCAEABADBCAEBAAEEDDEBBBADBCBAAEEBBBADCCBBA   \n",
              "1                                                 NaN   \n",
              "2       EBAAEADBCACBBABEECBAAEEBBBADCBADBCEDDEBBCAEAB   \n",
              "3       BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC   \n",
              "4       BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC   \n",
              "...                                               ...   \n",
              "266189                                            NaN   \n",
              "266190                                            NaN   \n",
              "266191                                            NaN   \n",
              "266192                                            NaN   \n",
              "266193                                            NaN   \n",
              "\n",
              "                                           TX_GABARITO_LC  \\\n",
              "0       ABBACAAECACDBDDADEBDDCBDCEDBEDDBBBBDCEEAADABAC...   \n",
              "1                                                     NaN   \n",
              "2       ACABBACAEADCEADABDACDCEABDDADBEDDDEBBACCDDDCCE...   \n",
              "3       ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...   \n",
              "4       ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...   \n",
              "...                                                   ...   \n",
              "266189                                                NaN   \n",
              "266190                                                NaN   \n",
              "266191                                                NaN   \n",
              "266192                                                NaN   \n",
              "266193                                                NaN   \n",
              "\n",
              "                                       TX_GABARITO_MT  \n",
              "0       EEXEBABDDCECCBCCECDCAEBADEABBDBDEDCEDCCADDCAB  \n",
              "1                                                 NaN  \n",
              "2       DCCAEBABDDCABEECCBCCEXADDCEECDEBADCABBDBDEDCE  \n",
              "3       ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA  \n",
              "4       ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA  \n",
              "...                                               ...  \n",
              "266189                                            NaN  \n",
              "266190                                            NaN  \n",
              "266191                                            NaN  \n",
              "266192                                            NaN  \n",
              "266193                                            NaN  \n",
              "\n",
              "[266194 rows x 13 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-32f1e43d-a4f4-407f-9a2c-2edce3aecc1d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>TP_SEXO</th>\n",
              "      <th>NO_MUNICIPIO_ESC</th>\n",
              "      <th>SG_UF_ESC</th>\n",
              "      <th>NO_MUNICIPIO_PROVA</th>\n",
              "      <th>SG_UF_PROVA</th>\n",
              "      <th>TX_RESPOSTAS_CN</th>\n",
              "      <th>TX_RESPOSTAS_CH</th>\n",
              "      <th>TX_RESPOSTAS_LC</th>\n",
              "      <th>TX_RESPOSTAS_MT</th>\n",
              "      <th>TX_GABARITO_CN</th>\n",
              "      <th>TX_GABARITO_CH</th>\n",
              "      <th>TX_GABARITO_LC</th>\n",
              "      <th>TX_GABARITO_MT</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>F</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Ruy Barbosa</td>\n",
              "      <td>BA</td>\n",
              "      <td>BAEDEBDECCEAEDDCBDEDAEECEEEDBDECBDCECBCCDABED</td>\n",
              "      <td>EEEBAABCBCDBEAEBEACEDDEDECACBDBCDACECDAECBCBD</td>\n",
              "      <td>99999ACAEEEEBDEACDACDEABCEABBDEDBAEEBDEEACDBAC...</td>\n",
              "      <td>BACEACDACBAAAEDCECABBACDCDBBA.CEABCDADADBECBE</td>\n",
              "      <td>EDECABEDABCBEBACCDCBBEEBBCBDAAECDCBDCDBBBADCD</td>\n",
              "      <td>BEECCAEABADBCAEBAAEEDDEBBBADBCBAAEEBBBADCCBBA</td>\n",
              "      <td>ABBACAAECACDBDDADEBDDCBDCEDBEDDBBBBDCEEAADABAC...</td>\n",
              "      <td>EEXEBABDDCECCBCCECDCAEBADEABBDBDEDCEDCCADDCAB</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>F</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>BA</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>BA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>F</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Barreiras</td>\n",
              "      <td>BA</td>\n",
              "      <td>BCEDEACAEDCEDCBDDCCAADABADDEBEECBACDCCABBDCCA</td>\n",
              "      <td>AAEADCDCAAADCBBBAABBEAEDABCDAACDDCBDAAABAABBB</td>\n",
              "      <td>EDBEC99999DDAAEBBDCDBBAABDECAADAEACCDABCEABABE...</td>\n",
              "      <td>EBBEBDCCDDCDCBADABBBCCEABDADCBCCACBDACDCDADCE</td>\n",
              "      <td>DABCEDEBEEBBCABEDDCBCBECDADCDAACBDCCCDBBBEBAB</td>\n",
              "      <td>EBAAEADBCACBBABEECBAAEEBBBADCBADBCEDDEBBCAEAB</td>\n",
              "      <td>ACABBACAEADCEADABDACDCEABDDADBEDDDEBBACCDDDCCE...</td>\n",
              "      <td>DCCAEBABDDCABEECCBCCEXADDCEECDEBADCABBDBDEDCE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>F</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Santo Estêvão</td>\n",
              "      <td>BA</td>\n",
              "      <td>CCAECCADEAADDEDDEECEDDEADDDCACDEDCDCDEADBEDDE</td>\n",
              "      <td>DBBEADDCABABCECEAEBEAEDCBCAEABEEDEBBEAABCBDCD</td>\n",
              "      <td>ABCCA99999DDCACDCACABBEAAEBDAEEBDEEAADACEEDDDB...</td>\n",
              "      <td>CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</td>\n",
              "      <td>CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB</td>\n",
              "      <td>BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC</td>\n",
              "      <td>ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...</td>\n",
              "      <td>ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>M</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Feira de Santana</td>\n",
              "      <td>BA</td>\n",
              "      <td>CDCCBDBBDCBACEBDACBCACADBCBECCEBCDDEBDACEECCD</td>\n",
              "      <td>CCBAADECCBACBECCBEADAEBEACBEBBEADEBBABDACDEBC</td>\n",
              "      <td>BADCE99999DABAABBABBBCEDBDCDABEABCBBDCACBABAAA...</td>\n",
              "      <td>CCBACBBCCCCEDDDDCBCCDCACCCBBBDDDBCBADDBCABACA</td>\n",
              "      <td>CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB</td>\n",
              "      <td>BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC</td>\n",
              "      <td>ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...</td>\n",
              "      <td>ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266189</th>\n",
              "      <td>M</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Alagoinhas</td>\n",
              "      <td>BA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266190</th>\n",
              "      <td>M</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Juazeiro</td>\n",
              "      <td>BA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266191</th>\n",
              "      <td>M</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>BA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266192</th>\n",
              "      <td>M</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>BA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266193</th>\n",
              "      <td>F</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>BA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>266194 rows × 13 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-32f1e43d-a4f4-407f-9a2c-2edce3aecc1d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-32f1e43d-a4f4-407f-9a2c-2edce3aecc1d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-32f1e43d-a4f4-407f-9a2c-2edce3aecc1d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-784755b4-f4e7-4c14-8d77-004893172239\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-784755b4-f4e7-4c14-8d77-004893172239')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-784755b4-f4e7-4c14-8d77-004893172239 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cat_cols = df.select_dtypes(include = object).columns.tolist()"
      ],
      "metadata": {
        "id": "c-_5aDzmvhM6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "cat_cols"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "e_QiPTFfv-YC",
        "outputId": "f989d5c9-5ac8-4e12-8eae-3ae6125c4005"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['TP_SEXO',\n",
              " 'NO_MUNICIPIO_ESC',\n",
              " 'SG_UF_ESC',\n",
              " 'NO_MUNICIPIO_PROVA',\n",
              " 'SG_UF_PROVA',\n",
              " 'TX_RESPOSTAS_CN',\n",
              " 'TX_RESPOSTAS_CH',\n",
              " 'TX_RESPOSTAS_LC',\n",
              " 'TX_RESPOSTAS_MT',\n",
              " 'TX_GABARITO_CN',\n",
              " 'TX_GABARITO_CH',\n",
              " 'TX_GABARITO_LC',\n",
              " 'TX_GABARITO_MT']"
            ]
          },
          "metadata": {},
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Existe diferença na nota de matemática entre alunos de escola pública e privada?\n",
        "df.query('TP_ESCOLA == 2').NU_NOTA_MT.mean() #Alunos de escola pública"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "S2dv13gKwFpY",
        "outputId": "bd2b619a-c9e9-4f40-e87c-8b76aaff0246"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "np.float64(487.37504991538157)"
            ]
          },
          "metadata": {},
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.query('TP_ESCOLA == 3').NU_NOTA_MT.mean() #Alunos de escola privada"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Uzhxy7lVxO-T",
        "outputId": "982239d0-8229-46f3-a0a9-2b57fd89a910"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "np.float64(579.8338996340826)"
            ]
          },
          "metadata": {},
          "execution_count": 68
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.query('TP_ESCOLA == 2').NU_NOTA_MT.agg([np.mean, np.median]) #Alunos de escola pública"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "_Wax-HY2yLRa",
        "outputId": "bed62d61-a328-4fc4-990e-4f0db832de4b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/tmp/ipython-input-1504875824.py:1: FutureWarning: The provided callable <function mean at 0x798fa691a700> is currently using Series.mean. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"mean\" instead.\n",
            "  df.query('TP_ESCOLA == 2').NU_NOTA_MT.agg([np.mean, np.median]) #Alunos de escola pública\n",
            "/tmp/ipython-input-1504875824.py:1: FutureWarning: The provided callable <function median at 0x798fa687fd80> is currently using Series.median. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"median\" instead.\n",
            "  df.query('TP_ESCOLA == 2').NU_NOTA_MT.agg([np.mean, np.median]) #Alunos de escola pública\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "mean      487.37505\n",
              "median    468.90000\n",
              "Name: NU_NOTA_MT, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>NU_NOTA_MT</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>487.37505</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>median</th>\n",
              "      <td>468.90000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.query('TP_ESCOLA == 3').NU_NOTA_MT.agg([np.mean, np.median]) #Alunos de escola privada"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "-TfokQDeyZke",
        "outputId": "145469ab-f8cd-4ff4-c90a-138313717e1b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/tmp/ipython-input-3516751974.py:1: FutureWarning: The provided callable <function mean at 0x798fa691a700> is currently using Series.mean. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"mean\" instead.\n",
            "  df.query('TP_ESCOLA == 3').NU_NOTA_MT.agg([np.mean, np.median]) #Alunos de escola privada\n",
            "/tmp/ipython-input-3516751974.py:1: FutureWarning: The provided callable <function median at 0x798fa687fd80> is currently using Series.median. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"median\" instead.\n",
            "  df.query('TP_ESCOLA == 3').NU_NOTA_MT.agg([np.mean, np.median]) #Alunos de escola privada\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "mean      579.8339\n",
              "median    581.6000\n",
              "Name: NU_NOTA_MT, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>NU_NOTA_MT</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>579.8339</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>median</th>\n",
              "      <td>581.6000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 70
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#unique() retorna os valores únicos de uma determinada consulta\n",
        "df.query('TP_SEXO == \"M\"')['TP_SEXO'].unique()"
      ],
      "metadata": {
        "id": "ZWHrOyYkyr18",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f095cbea-f8ec-443b-93f5-23e0176d1c3c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['M'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.query(\"(TP_SEXO == 'M') & (IN_TREINEIRO == 1)\").sample(5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "id": "vUKXiMt7JAJd",
        "outputId": "37bb87db-9900-48ce-f426-3b52f3577295"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        NU_INSCRICAO  NU_ANO  TP_FAIXA_ETARIA TP_SEXO  TP_ESTADO_CIVIL  \\\n",
              "130750  210051680968    2021                1       M                1   \n",
              "192722  210051246756    2021                1       M                1   \n",
              "190270  210053754517    2021                1       M                1   \n",
              "83619   210052847003    2021                1       M                1   \n",
              "183181  210054105067    2021                1       M                1   \n",
              "\n",
              "        TP_COR_RACA  TP_NACIONALIDADE  TP_ST_CONCLUSAO  TP_ANO_CONCLUIU  \\\n",
              "130750            2                 1                3                0   \n",
              "192722            3                 1                3                0   \n",
              "190270            3                 1                3                0   \n",
              "83619             3                 1                3                0   \n",
              "183181            2                 1                3                0   \n",
              "\n",
              "        TP_ESCOLA  TP_ENSINO  IN_TREINEIRO  CO_MUNICIPIO_ESC NO_MUNICIPIO_ESC  \\\n",
              "130750          1        NaN             1               NaN              NaN   \n",
              "192722          1        NaN             1               NaN              NaN   \n",
              "190270          1        NaN             1               NaN              NaN   \n",
              "83619           1        NaN             1               NaN              NaN   \n",
              "183181          1        NaN             1               NaN              NaN   \n",
              "\n",
              "        CO_UF_ESC SG_UF_ESC  TP_DEPENDENCIA_ADM_ESC  TP_LOCALIZACAO_ESC  \\\n",
              "130750        NaN       NaN                     NaN                 NaN   \n",
              "192722        NaN       NaN                     NaN                 NaN   \n",
              "190270        NaN       NaN                     NaN                 NaN   \n",
              "83619         NaN       NaN                     NaN                 NaN   \n",
              "183181        NaN       NaN                     NaN                 NaN   \n",
              "\n",
              "        TP_SIT_FUNC_ESC  CO_MUNICIPIO_PROVA      NO_MUNICIPIO_PROVA  \\\n",
              "130750              NaN             2929602                 Sapeaçu   \n",
              "192722              NaN             2927408                Salvador   \n",
              "190270              NaN             2921708         Morro do Chapéu   \n",
              "83619               NaN             2924009            Paulo Afonso   \n",
              "183181              NaN             2928703  Santo Antônio de Jesus   \n",
              "\n",
              "        CO_UF_PROVA SG_UF_PROVA  TP_PRESENCA_CN  TP_PRESENCA_CH  \\\n",
              "130750           29          BA               0               1   \n",
              "192722           29          BA               1               1   \n",
              "190270           29          BA               1               1   \n",
              "83619            29          BA               1               1   \n",
              "183181           29          BA               1               1   \n",
              "\n",
              "        TP_PRESENCA_LC  TP_PRESENCA_MT  CO_PROVA_CN  CO_PROVA_CH  CO_PROVA_LC  \\\n",
              "130750               1               0          NaN        879.0        889.0   \n",
              "192722               1               1        911.0        880.0        890.0   \n",
              "190270               1               1        909.0        881.0        892.0   \n",
              "83619                1               1        911.0        880.0        890.0   \n",
              "183181               1               1        911.0        880.0        890.0   \n",
              "\n",
              "        CO_PROVA_MT  NU_NOTA_CN  NU_NOTA_CH  NU_NOTA_LC  NU_NOTA_MT  \\\n",
              "130750          NaN         NaN       613.2       536.6         NaN   \n",
              "192722        902.0       490.0       476.8       473.5       559.1   \n",
              "190270        899.0       538.6       553.9       543.9       567.5   \n",
              "83619         902.0       462.1       384.0       435.5       399.9   \n",
              "183181        902.0       509.1       641.4       582.5       431.5   \n",
              "\n",
              "                                      TX_RESPOSTAS_CN  \\\n",
              "130750                                            NaN   \n",
              "192722  CCCEBBEACBEEECBECCBBDACAEBADCCBCAEDBEBEBAEDAC   \n",
              "190270  EECDDDEBABDDCACCCAAABEDCCBCAEDABDBADCADEBAACE   \n",
              "83619   CDDDBEDEDDBABECDACBCDADDACBEEBCDCDDBCBCABEAEB   \n",
              "183181  CDBCCACDBAAEDBCABCBDECAABCBDBCEDECABCBACCEDDE   \n",
              "\n",
              "                                      TX_RESPOSTAS_CH  \\\n",
              "130750  BAACDCDACEBBEBBAEBEABEECCABABDBAEABAECABABEDB   \n",
              "192722  BBACDAECBCABEBBCBCBBCCBBBECECCBAEEBCBACCECBCA   \n",
              "190270  AEECCACBDACACADEEAAADEBBBCBABCCBAADDBEECDBABE   \n",
              "83619   DBCECBAEEADDDABACEBDECCBDEDDADEDDBADDBEDCBCCC   \n",
              "183181  DBBBCEAABDABEECEAABACDCCACCAABEDDEBBDAABCBACC   \n",
              "\n",
              "                                          TX_RESPOSTAS_LC  \\\n",
              "130750  CADAC99999BDADEDDCEDBAADDABADDBDDACAEBBDDBBAAB...   \n",
              "192722  DAADB99999BAAACABABCDCEEBBCDAAEAEABADCACABBCAC...   \n",
              "190270  ABAAB99999CDBBDBCECBCEBCAEDBAADDBEDEEBEADCCDBB...   \n",
              "83619   CCABA99999CBADADCBAABBAEDADBDACDDAABDAAECEEDAB...   \n",
              "183181  ADACC99999DDEADBBACDBBCBDEEDABEADEDABDACEDDDAD...   \n",
              "\n",
              "                                      TX_RESPOSTAS_MT  TP_LINGUA  \\\n",
              "130750                                            NaN          0   \n",
              "192722  DCCACBDCEEDBCABDDBAACABEDDAEDBACCEBDEBBCEAECA          0   \n",
              "190270  BBDECABCDACADEBEDECBDBDEBDACBBACEDDBBCDADDEBC          0   \n",
              "83619   EACAEECEABEACEACCDBDCEAECECBAACADDCCDCECDCEAB          0   \n",
              "183181  ACBDBAECCCCBDBDDDCDCEACAECAECCEEEEDEDBEEDEBEB          0   \n",
              "\n",
              "                                       TX_GABARITO_CN  \\\n",
              "130750                                            NaN   \n",
              "192722  CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB   \n",
              "190270  EDECABEDABCBEBACCDCBBEEBBCBDAAECDCBDCDBBBADCD   \n",
              "83619   CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB   \n",
              "183181  CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB   \n",
              "\n",
              "                                       TX_GABARITO_CH  \\\n",
              "130750  BADCBADBCEDDEBBADBCABEECCAEABEBAAECBBABAAEEBB   \n",
              "192722  BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC   \n",
              "190270  BEECCAEABADBCAEBAAEEDDEBBBADBCBAAEEBBBADCCBBA   \n",
              "83619   BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC   \n",
              "183181  BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC   \n",
              "\n",
              "                                           TX_GABARITO_LC  \\\n",
              "130750  CAABBCAEAABDCDEADCEDBEDDDABBBBDEBCEADABDBACACD...   \n",
              "192722  ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...   \n",
              "190270  ABBACAAECACDBDDADEBDDCBDCEDBEDDBBBBDCEEAADABAC...   \n",
              "83619   ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...   \n",
              "183181  ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...   \n",
              "\n",
              "                                       TX_GABARITO_MT  TP_STATUS_REDACAO  \\\n",
              "130750                                            NaN                1.0   \n",
              "192722  ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA                1.0   \n",
              "190270  EEXEBABDDCECCBCCECDCAEBADEABBDBDEDCEDCCADDCAB                1.0   \n",
              "83619   ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA                1.0   \n",
              "183181  ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA                1.0   \n",
              "\n",
              "        NU_NOTA_COMP1  NU_NOTA_COMP2  NU_NOTA_COMP3  NU_NOTA_COMP4  \\\n",
              "130750          120.0          120.0          120.0          100.0   \n",
              "192722          120.0          180.0          120.0          120.0   \n",
              "190270          160.0          120.0          160.0          160.0   \n",
              "83619           140.0          160.0          140.0          160.0   \n",
              "183181          120.0          120.0          100.0          120.0   \n",
              "\n",
              "        NU_NOTA_COMP5  NU_NOTA_REDACAO  \n",
              "130750            0.0            460.0  \n",
              "192722          140.0            680.0  \n",
              "190270          180.0            780.0  \n",
              "83619           160.0            760.0  \n",
              "183181          140.0            600.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e266c0bc-22e5-4311-9b5a-bd5c43256f2c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>NU_INSCRICAO</th>\n",
              "      <th>NU_ANO</th>\n",
              "      <th>TP_FAIXA_ETARIA</th>\n",
              "      <th>TP_SEXO</th>\n",
              "      <th>TP_ESTADO_CIVIL</th>\n",
              "      <th>TP_COR_RACA</th>\n",
              "      <th>TP_NACIONALIDADE</th>\n",
              "      <th>TP_ST_CONCLUSAO</th>\n",
              "      <th>TP_ANO_CONCLUIU</th>\n",
              "      <th>TP_ESCOLA</th>\n",
              "      <th>TP_ENSINO</th>\n",
              "      <th>IN_TREINEIRO</th>\n",
              "      <th>CO_MUNICIPIO_ESC</th>\n",
              "      <th>NO_MUNICIPIO_ESC</th>\n",
              "      <th>CO_UF_ESC</th>\n",
              "      <th>SG_UF_ESC</th>\n",
              "      <th>TP_DEPENDENCIA_ADM_ESC</th>\n",
              "      <th>TP_LOCALIZACAO_ESC</th>\n",
              "      <th>TP_SIT_FUNC_ESC</th>\n",
              "      <th>CO_MUNICIPIO_PROVA</th>\n",
              "      <th>NO_MUNICIPIO_PROVA</th>\n",
              "      <th>CO_UF_PROVA</th>\n",
              "      <th>SG_UF_PROVA</th>\n",
              "      <th>TP_PRESENCA_CN</th>\n",
              "      <th>TP_PRESENCA_CH</th>\n",
              "      <th>TP_PRESENCA_LC</th>\n",
              "      <th>TP_PRESENCA_MT</th>\n",
              "      <th>CO_PROVA_CN</th>\n",
              "      <th>CO_PROVA_CH</th>\n",
              "      <th>CO_PROVA_LC</th>\n",
              "      <th>CO_PROVA_MT</th>\n",
              "      <th>NU_NOTA_CN</th>\n",
              "      <th>NU_NOTA_CH</th>\n",
              "      <th>NU_NOTA_LC</th>\n",
              "      <th>NU_NOTA_MT</th>\n",
              "      <th>TX_RESPOSTAS_CN</th>\n",
              "      <th>TX_RESPOSTAS_CH</th>\n",
              "      <th>TX_RESPOSTAS_LC</th>\n",
              "      <th>TX_RESPOSTAS_MT</th>\n",
              "      <th>TP_LINGUA</th>\n",
              "      <th>TX_GABARITO_CN</th>\n",
              "      <th>TX_GABARITO_CH</th>\n",
              "      <th>TX_GABARITO_LC</th>\n",
              "      <th>TX_GABARITO_MT</th>\n",
              "      <th>TP_STATUS_REDACAO</th>\n",
              "      <th>NU_NOTA_COMP1</th>\n",
              "      <th>NU_NOTA_COMP2</th>\n",
              "      <th>NU_NOTA_COMP3</th>\n",
              "      <th>NU_NOTA_COMP4</th>\n",
              "      <th>NU_NOTA_COMP5</th>\n",
              "      <th>NU_NOTA_REDACAO</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>130750</th>\n",
              "      <td>210051680968</td>\n",
              "      <td>2021</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2929602</td>\n",
              "      <td>Sapeaçu</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>879.0</td>\n",
              "      <td>889.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>613.2</td>\n",
              "      <td>536.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>BAACDCDACEBBEBBAEBEABEECCABABDBAEABAECABABEDB</td>\n",
              "      <td>CADAC99999BDADEDDCEDBAADDABADDBDDACAEBBDDBBAAB...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>BADCBADBCEDDEBBADBCABEECCAEABEBAAECBBABAAEEBB</td>\n",
              "      <td>CAABBCAEAABDCDEADCEDBEDDDABBBBDEBCEADABDBACACD...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>460.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>192722</th>\n",
              "      <td>210051246756</td>\n",
              "      <td>2021</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927408</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>911.0</td>\n",
              "      <td>880.0</td>\n",
              "      <td>890.0</td>\n",
              "      <td>902.0</td>\n",
              "      <td>490.0</td>\n",
              "      <td>476.8</td>\n",
              "      <td>473.5</td>\n",
              "      <td>559.1</td>\n",
              "      <td>CCCEBBEACBEEECBECCBBDACAEBADCCBCAEDBEBEBAEDAC</td>\n",
              "      <td>BBACDAECBCABEBBCBCBBCCBBBECECCBAEEBCBACCECBCA</td>\n",
              "      <td>DAADB99999BAAACABABCDCEEBBCDAAEAEABADCACABBCAC...</td>\n",
              "      <td>DCCACBDCEEDBCABDDBAACABEDDAEDBACCEBDEBBCEAECA</td>\n",
              "      <td>0</td>\n",
              "      <td>CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB</td>\n",
              "      <td>BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC</td>\n",
              "      <td>ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...</td>\n",
              "      <td>ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA</td>\n",
              "      <td>1.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>180.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>680.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>190270</th>\n",
              "      <td>210053754517</td>\n",
              "      <td>2021</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2921708</td>\n",
              "      <td>Morro do Chapéu</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>909.0</td>\n",
              "      <td>881.0</td>\n",
              "      <td>892.0</td>\n",
              "      <td>899.0</td>\n",
              "      <td>538.6</td>\n",
              "      <td>553.9</td>\n",
              "      <td>543.9</td>\n",
              "      <td>567.5</td>\n",
              "      <td>EECDDDEBABDDCACCCAAABEDCCBCAEDABDBADCADEBAACE</td>\n",
              "      <td>AEECCACBDACACADEEAAADEBBBCBABCCBAADDBEECDBABE</td>\n",
              "      <td>ABAAB99999CDBBDBCECBCEBCAEDBAADDBEDEEBEADCCDBB...</td>\n",
              "      <td>BBDECABCDACADEBEDECBDBDEBDACBBACEDDBBCDADDEBC</td>\n",
              "      <td>0</td>\n",
              "      <td>EDECABEDABCBEBACCDCBBEEBBCBDAAECDCBDCDBBBADCD</td>\n",
              "      <td>BEECCAEABADBCAEBAAEEDDEBBBADBCBAAEEBBBADCCBBA</td>\n",
              "      <td>ABBACAAECACDBDDADEBDDCBDCEDBEDDBBBBDCEEAADABAC...</td>\n",
              "      <td>EEXEBABDDCECCBCCECDCAEBADEABBDBDEDCEDCCADDCAB</td>\n",
              "      <td>1.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>180.0</td>\n",
              "      <td>780.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>83619</th>\n",
              "      <td>210052847003</td>\n",
              "      <td>2021</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2924009</td>\n",
              "      <td>Paulo Afonso</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>911.0</td>\n",
              "      <td>880.0</td>\n",
              "      <td>890.0</td>\n",
              "      <td>902.0</td>\n",
              "      <td>462.1</td>\n",
              "      <td>384.0</td>\n",
              "      <td>435.5</td>\n",
              "      <td>399.9</td>\n",
              "      <td>CDDDBEDEDDBABECDACBCDADDACBEEBCDCDDBCBCABEAEB</td>\n",
              "      <td>DBCECBAEEADDDABACEBDECCBDEDDADEDDBADDBEDCBCCC</td>\n",
              "      <td>CCABA99999CBADADCBAABBAEDADBDACDDAABDAAECEEDAB...</td>\n",
              "      <td>EACAEECEABEACEACCDBDCEAECECBAACADDCCDCECDCEAB</td>\n",
              "      <td>0</td>\n",
              "      <td>CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB</td>\n",
              "      <td>BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC</td>\n",
              "      <td>ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...</td>\n",
              "      <td>ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>183181</th>\n",
              "      <td>210054105067</td>\n",
              "      <td>2021</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2928703</td>\n",
              "      <td>Santo Antônio de Jesus</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>911.0</td>\n",
              "      <td>880.0</td>\n",
              "      <td>890.0</td>\n",
              "      <td>902.0</td>\n",
              "      <td>509.1</td>\n",
              "      <td>641.4</td>\n",
              "      <td>582.5</td>\n",
              "      <td>431.5</td>\n",
              "      <td>CDBCCACDBAAEDBCABCBDECAABCBDBCEDECABCBACCEDDE</td>\n",
              "      <td>DBBBCEAABDABEECEAABACDCCACCAABEDDEBBDAABCBACC</td>\n",
              "      <td>ADACC99999DDEADBBACDBBCBDEEDABEADEDABDACEDDDAD...</td>\n",
              "      <td>ACBDBAECCCCBDBDDDCDCEACAECAECCEEEEDEDBEEDEBEB</td>\n",
              "      <td>0</td>\n",
              "      <td>CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB</td>\n",
              "      <td>BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC</td>\n",
              "      <td>ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...</td>\n",
              "      <td>ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA</td>\n",
              "      <td>1.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>600.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e266c0bc-22e5-4311-9b5a-bd5c43256f2c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e266c0bc-22e5-4311-9b5a-bd5c43256f2c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e266c0bc-22e5-4311-9b5a-bd5c43256f2c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-8f1c2023-90ad-41c7-a02e-43a868f51e3e\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8f1c2023-90ad-41c7-a02e-43a868f51e3e')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-8f1c2023-90ad-41c7-a02e-43a868f51e3e button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.query('(TP_SEXO == \"M\") & (IN_TREINEIRO == 1)')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 444
        },
        "id": "b9wumjBeKOBk",
        "outputId": "819fc08e-e5a8-4faf-afc8-c5a8c5f1f876"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        NU_INSCRICAO  NU_ANO  TP_FAIXA_ETARIA TP_SEXO  TP_ESTADO_CIVIL  \\\n",
              "69      210053707047    2021                1       M                1   \n",
              "113     210051127853    2021                1       M                1   \n",
              "151     210053634740    2021                5       M                1   \n",
              "155     210052073811    2021                1       M                1   \n",
              "204     210053593141    2021                2       M                1   \n",
              "...              ...     ...              ...     ...              ...   \n",
              "265284  210051161032    2021                1       M                1   \n",
              "265325  210051362311    2021                2       M                1   \n",
              "265359  210051833040    2021                2       M                1   \n",
              "265994  210054130477    2021                4       M                1   \n",
              "266084  210053795196    2021                4       M                1   \n",
              "\n",
              "        TP_COR_RACA  TP_NACIONALIDADE  TP_ST_CONCLUSAO  TP_ANO_CONCLUIU  \\\n",
              "69                1                 1                3                0   \n",
              "113               2                 1                3                0   \n",
              "151               2                 1                3                0   \n",
              "155               2                 2                3                0   \n",
              "204               3                 1                3                0   \n",
              "...             ...               ...              ...              ...   \n",
              "265284            3                 1                3                0   \n",
              "265325            3                 1                3                0   \n",
              "265359            1                 1                3                0   \n",
              "265994            3                 1                3                0   \n",
              "266084            3                 1                3                0   \n",
              "\n",
              "        TP_ESCOLA  TP_ENSINO  IN_TREINEIRO  CO_MUNICIPIO_ESC NO_MUNICIPIO_ESC  \\\n",
              "69              1        NaN             1               NaN              NaN   \n",
              "113             1        NaN             1               NaN              NaN   \n",
              "151             1        NaN             1               NaN              NaN   \n",
              "155             1        NaN             1               NaN              NaN   \n",
              "204             1        NaN             1               NaN              NaN   \n",
              "...           ...        ...           ...               ...              ...   \n",
              "265284          1        NaN             1               NaN              NaN   \n",
              "265325          1        NaN             1               NaN              NaN   \n",
              "265359          1        NaN             1               NaN              NaN   \n",
              "265994          1        NaN             1               NaN              NaN   \n",
              "266084          1        NaN             1               NaN              NaN   \n",
              "\n",
              "        CO_UF_ESC SG_UF_ESC  TP_DEPENDENCIA_ADM_ESC  TP_LOCALIZACAO_ESC  \\\n",
              "69            NaN       NaN                     NaN                 NaN   \n",
              "113           NaN       NaN                     NaN                 NaN   \n",
              "151           NaN       NaN                     NaN                 NaN   \n",
              "155           NaN       NaN                     NaN                 NaN   \n",
              "204           NaN       NaN                     NaN                 NaN   \n",
              "...           ...       ...                     ...                 ...   \n",
              "265284        NaN       NaN                     NaN                 NaN   \n",
              "265325        NaN       NaN                     NaN                 NaN   \n",
              "265359        NaN       NaN                     NaN                 NaN   \n",
              "265994        NaN       NaN                     NaN                 NaN   \n",
              "266084        NaN       NaN                     NaN                 NaN   \n",
              "\n",
              "        TP_SIT_FUNC_ESC  CO_MUNICIPIO_PROVA      NO_MUNICIPIO_PROVA  \\\n",
              "69                  NaN             2902104                   Araci   \n",
              "113                 NaN             2932903                 Valença   \n",
              "151                 NaN             2927408                Salvador   \n",
              "155                 NaN             2911204                   Gandu   \n",
              "204                 NaN             2927408                Salvador   \n",
              "...                 ...                 ...                     ...   \n",
              "265284              NaN             2928703  Santo Antônio de Jesus   \n",
              "265325              NaN             2904100                 Boquira   \n",
              "265359              NaN             2923605               Paramirim   \n",
              "265994              NaN             2924009            Paulo Afonso   \n",
              "266084              NaN             2905701                Camaçari   \n",
              "\n",
              "        CO_UF_PROVA SG_UF_PROVA  TP_PRESENCA_CN  TP_PRESENCA_CH  \\\n",
              "69               29          BA               1               1   \n",
              "113              29          BA               1               1   \n",
              "151              29          BA               0               0   \n",
              "155              29          BA               0               0   \n",
              "204              29          BA               1               1   \n",
              "...             ...         ...             ...             ...   \n",
              "265284           29          BA               0               0   \n",
              "265325           29          BA               0               0   \n",
              "265359           29          BA               0               0   \n",
              "265994           29          BA               0               0   \n",
              "266084           29          BA               0               0   \n",
              "\n",
              "        TP_PRESENCA_LC  TP_PRESENCA_MT  CO_PROVA_CN  CO_PROVA_CH  CO_PROVA_LC  \\\n",
              "69                   1               1        912.0        882.0        891.0   \n",
              "113                  1               1        911.0        880.0        890.0   \n",
              "151                  0               0          NaN          NaN          NaN   \n",
              "155                  0               0          NaN          NaN          NaN   \n",
              "204                  1               1        909.0        881.0        892.0   \n",
              "...                ...             ...          ...          ...          ...   \n",
              "265284               0               0          NaN          NaN          NaN   \n",
              "265325               0               0          NaN          NaN          NaN   \n",
              "265359               0               0          NaN          NaN          NaN   \n",
              "265994               0               0          NaN          NaN          NaN   \n",
              "266084               0               0          NaN          NaN          NaN   \n",
              "\n",
              "        CO_PROVA_MT  NU_NOTA_CN  NU_NOTA_CH  NU_NOTA_LC  NU_NOTA_MT  \\\n",
              "69            901.0       521.7       566.7       569.5       702.3   \n",
              "113           902.0       494.4       408.4       504.1       483.3   \n",
              "151             NaN         NaN         NaN         NaN         NaN   \n",
              "155             NaN         NaN         NaN         NaN         NaN   \n",
              "204           899.0       541.6       646.9       510.6       601.0   \n",
              "...             ...         ...         ...         ...         ...   \n",
              "265284          NaN         NaN         NaN         NaN         NaN   \n",
              "265325          NaN         NaN         NaN         NaN         NaN   \n",
              "265359          NaN         NaN         NaN         NaN         NaN   \n",
              "265994          NaN         NaN         NaN         NaN         NaN   \n",
              "266084          NaN         NaN         NaN         NaN         NaN   \n",
              "\n",
              "                                      TX_RESPOSTAS_CN  \\\n",
              "69      DDD*CEEDECBBEACBAACABEDCEACEEEABCACCCCBDBEDED   \n",
              "113     CBECBCEBEDBADCEBADABBAACBDBAEBBEDCBDAEBDBEBCE   \n",
              "151                                               NaN   \n",
              "155                                               NaN   \n",
              "204     AEDDABDEADBDEBCAADDCBBCCDCBADECACCDDCEADBCACA   \n",
              "...                                               ...   \n",
              "265284                                            NaN   \n",
              "265325                                            NaN   \n",
              "265359                                            NaN   \n",
              "265994                                            NaN   \n",
              "266084                                            NaN   \n",
              "\n",
              "                                      TX_RESPOSTAS_CH  \\\n",
              "69      DDEDEBCAEDCCBBBEACABAEEADBABCDABBDECBEBACAEAC   \n",
              "113     ECEBADDABBACCCBDADEECACABCACBADCBAEACCCAABBCA   \n",
              "151                                               NaN   \n",
              "155                                               NaN   \n",
              "204     BCECCAEABABCEAEBAACAEDEBBEBABCBBAEEBBEDECBBBA   \n",
              "...                                               ...   \n",
              "265284                                            NaN   \n",
              "265325                                            NaN   \n",
              "265359                                            NaN   \n",
              "265994                                            NaN   \n",
              "266084                                            NaN   \n",
              "\n",
              "                                          TX_RESPOSTAS_LC  \\\n",
              "69      ABACC99999DAEADCBDACDDCACDDACADAAEDCDACDDCDACE...   \n",
              "113     BACBA99999CECACBBACCBBEDAEEBADEBEEBACDACACEACD...   \n",
              "151                                                   NaN   \n",
              "155                                                   NaN   \n",
              "204     DACAC99999ACBDDEBEEBCCBBCEAAADAAADAECDEBADCBAA...   \n",
              "...                                                   ...   \n",
              "265284                                                NaN   \n",
              "265325                                                NaN   \n",
              "265359                                                NaN   \n",
              "265994                                                NaN   \n",
              "266084                                                NaN   \n",
              "\n",
              "                                      TX_RESPOSTAS_MT  TP_LINGUA  \\\n",
              "69      CCEDEBCCDDCDBEBCCBCAEAABDAEEDCEADDABDBABCDACB          0   \n",
              "113     AACBCACDDBABCDCBDADBDCEDDBBDACECBDDCADCECBDCA          0   \n",
              "151                                               NaN          1   \n",
              "155                                               NaN          1   \n",
              "204     CADEEBDDDCBBCBBBBEDDCDAABDBABBEDCCCDDDDBDBCAC          0   \n",
              "...                                               ...        ...   \n",
              "265284                                            NaN          1   \n",
              "265325                                            NaN          1   \n",
              "265359                                            NaN          0   \n",
              "265994                                            NaN          0   \n",
              "266084                                            NaN          0   \n",
              "\n",
              "                                       TX_GABARITO_CN  \\\n",
              "69      DABCEDEBEEBBCABEDDCBCBECDADCDAACBDCCCDBBBEBAB   \n",
              "113     CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB   \n",
              "151                                               NaN   \n",
              "155                                               NaN   \n",
              "204     EDECABEDABCBEBACCDCBBEEBBCBDAAECDCBDCDBBBADCD   \n",
              "...                                               ...   \n",
              "265284                                            NaN   \n",
              "265325                                            NaN   \n",
              "265359                                            NaN   \n",
              "265994                                            NaN   \n",
              "266084                                            NaN   \n",
              "\n",
              "                                       TX_GABARITO_CH  \\\n",
              "69      EBAAEADBCACBBABEECBAAEEBBBADCBADBCEDDEBBCAEAB   \n",
              "113     BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC   \n",
              "151                                               NaN   \n",
              "155                                               NaN   \n",
              "204     BEECCAEABADBCAEBAAEEDDEBBBADBCBAAEEBBBADCCBBA   \n",
              "...                                               ...   \n",
              "265284                                            NaN   \n",
              "265325                                            NaN   \n",
              "265359                                            NaN   \n",
              "265994                                            NaN   \n",
              "266084                                            NaN   \n",
              "\n",
              "                                           TX_GABARITO_LC  \\\n",
              "69      ACABBACAEADCEADABDACDCEABDDADBEDDDEBBACCDDDCCE...   \n",
              "113     ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...   \n",
              "151                                                   NaN   \n",
              "155                                                   NaN   \n",
              "204     ABBACAAECACDBDDADEBDDCBDCEDBEDDBBBBDCEEAADABAC...   \n",
              "...                                                   ...   \n",
              "265284                                                NaN   \n",
              "265325                                                NaN   \n",
              "265359                                                NaN   \n",
              "265994                                                NaN   \n",
              "266084                                                NaN   \n",
              "\n",
              "                                       TX_GABARITO_MT  TP_STATUS_REDACAO  \\\n",
              "69      DCCAEBABDDCABEECCBCCEXADDCEECDEBADCABBDBDEDCE                1.0   \n",
              "113     ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA                1.0   \n",
              "151                                               NaN                NaN   \n",
              "155                                               NaN                NaN   \n",
              "204     EEXEBABDDCECCBCCECDCAEBADEABBDBDEDCEDCCADDCAB                1.0   \n",
              "...                                               ...                ...   \n",
              "265284                                            NaN                NaN   \n",
              "265325                                            NaN                NaN   \n",
              "265359                                            NaN                NaN   \n",
              "265994                                            NaN                NaN   \n",
              "266084                                            NaN                NaN   \n",
              "\n",
              "        NU_NOTA_COMP1  NU_NOTA_COMP2  NU_NOTA_COMP3  NU_NOTA_COMP4  \\\n",
              "69              160.0          200.0          160.0          200.0   \n",
              "113             120.0          120.0          120.0          140.0   \n",
              "151               NaN            NaN            NaN            NaN   \n",
              "155               NaN            NaN            NaN            NaN   \n",
              "204             140.0           40.0           40.0          140.0   \n",
              "...               ...            ...            ...            ...   \n",
              "265284            NaN            NaN            NaN            NaN   \n",
              "265325            NaN            NaN            NaN            NaN   \n",
              "265359            NaN            NaN            NaN            NaN   \n",
              "265994            NaN            NaN            NaN            NaN   \n",
              "266084            NaN            NaN            NaN            NaN   \n",
              "\n",
              "        NU_NOTA_COMP5  NU_NOTA_REDACAO  \n",
              "69              180.0            900.0  \n",
              "113             160.0            660.0  \n",
              "151               NaN              NaN  \n",
              "155               NaN              NaN  \n",
              "204              40.0            400.0  \n",
              "...               ...              ...  \n",
              "265284            NaN              NaN  \n",
              "265325            NaN              NaN  \n",
              "265359            NaN              NaN  \n",
              "265994            NaN              NaN  \n",
              "266084            NaN              NaN  \n",
              "\n",
              "[10650 rows x 51 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a525a92d-7eb2-4e87-833b-7fd9e2a548f5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>NU_INSCRICAO</th>\n",
              "      <th>NU_ANO</th>\n",
              "      <th>TP_FAIXA_ETARIA</th>\n",
              "      <th>TP_SEXO</th>\n",
              "      <th>TP_ESTADO_CIVIL</th>\n",
              "      <th>TP_COR_RACA</th>\n",
              "      <th>TP_NACIONALIDADE</th>\n",
              "      <th>TP_ST_CONCLUSAO</th>\n",
              "      <th>TP_ANO_CONCLUIU</th>\n",
              "      <th>TP_ESCOLA</th>\n",
              "      <th>TP_ENSINO</th>\n",
              "      <th>IN_TREINEIRO</th>\n",
              "      <th>CO_MUNICIPIO_ESC</th>\n",
              "      <th>NO_MUNICIPIO_ESC</th>\n",
              "      <th>CO_UF_ESC</th>\n",
              "      <th>SG_UF_ESC</th>\n",
              "      <th>TP_DEPENDENCIA_ADM_ESC</th>\n",
              "      <th>TP_LOCALIZACAO_ESC</th>\n",
              "      <th>TP_SIT_FUNC_ESC</th>\n",
              "      <th>CO_MUNICIPIO_PROVA</th>\n",
              "      <th>NO_MUNICIPIO_PROVA</th>\n",
              "      <th>CO_UF_PROVA</th>\n",
              "      <th>SG_UF_PROVA</th>\n",
              "      <th>TP_PRESENCA_CN</th>\n",
              "      <th>TP_PRESENCA_CH</th>\n",
              "      <th>TP_PRESENCA_LC</th>\n",
              "      <th>TP_PRESENCA_MT</th>\n",
              "      <th>CO_PROVA_CN</th>\n",
              "      <th>CO_PROVA_CH</th>\n",
              "      <th>CO_PROVA_LC</th>\n",
              "      <th>CO_PROVA_MT</th>\n",
              "      <th>NU_NOTA_CN</th>\n",
              "      <th>NU_NOTA_CH</th>\n",
              "      <th>NU_NOTA_LC</th>\n",
              "      <th>NU_NOTA_MT</th>\n",
              "      <th>TX_RESPOSTAS_CN</th>\n",
              "      <th>TX_RESPOSTAS_CH</th>\n",
              "      <th>TX_RESPOSTAS_LC</th>\n",
              "      <th>TX_RESPOSTAS_MT</th>\n",
              "      <th>TP_LINGUA</th>\n",
              "      <th>TX_GABARITO_CN</th>\n",
              "      <th>TX_GABARITO_CH</th>\n",
              "      <th>TX_GABARITO_LC</th>\n",
              "      <th>TX_GABARITO_MT</th>\n",
              "      <th>TP_STATUS_REDACAO</th>\n",
              "      <th>NU_NOTA_COMP1</th>\n",
              "      <th>NU_NOTA_COMP2</th>\n",
              "      <th>NU_NOTA_COMP3</th>\n",
              "      <th>NU_NOTA_COMP4</th>\n",
              "      <th>NU_NOTA_COMP5</th>\n",
              "      <th>NU_NOTA_REDACAO</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>69</th>\n",
              "      <td>210053707047</td>\n",
              "      <td>2021</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2902104</td>\n",
              "      <td>Araci</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>912.0</td>\n",
              "      <td>882.0</td>\n",
              "      <td>891.0</td>\n",
              "      <td>901.0</td>\n",
              "      <td>521.7</td>\n",
              "      <td>566.7</td>\n",
              "      <td>569.5</td>\n",
              "      <td>702.3</td>\n",
              "      <td>DDD*CEEDECBBEACBAACABEDCEACEEEABCACCCCBDBEDED</td>\n",
              "      <td>DDEDEBCAEDCCBBBEACABAEEADBABCDABBDECBEBACAEAC</td>\n",
              "      <td>ABACC99999DAEADCBDACDDCACDDACADAAEDCDACDDCDACE...</td>\n",
              "      <td>CCEDEBCCDDCDBEBCCBCAEAABDAEEDCEADDABDBABCDACB</td>\n",
              "      <td>0</td>\n",
              "      <td>DABCEDEBEEBBCABEDDCBCBECDADCDAACBDCCCDBBBEBAB</td>\n",
              "      <td>EBAAEADBCACBBABEECBAAEEBBBADCBADBCEDDEBBCAEAB</td>\n",
              "      <td>ACABBACAEADCEADABDACDCEABDDADBEDDDEBBACCDDDCCE...</td>\n",
              "      <td>DCCAEBABDDCABEECCBCCEXADDCEECDEBADCABBDBDEDCE</td>\n",
              "      <td>1.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>200.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>200.0</td>\n",
              "      <td>180.0</td>\n",
              "      <td>900.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113</th>\n",
              "      <td>210051127853</td>\n",
              "      <td>2021</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2932903</td>\n",
              "      <td>Valença</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>911.0</td>\n",
              "      <td>880.0</td>\n",
              "      <td>890.0</td>\n",
              "      <td>902.0</td>\n",
              "      <td>494.4</td>\n",
              "      <td>408.4</td>\n",
              "      <td>504.1</td>\n",
              "      <td>483.3</td>\n",
              "      <td>CBECBCEBEDBADCEBADABBAACBDBAEBBEDCBDAEBDBEBCE</td>\n",
              "      <td>ECEBADDABBACCCBDADEECACABCACBADCBAEACCCAABBCA</td>\n",
              "      <td>BACBA99999CECACBBACCBBEDAEEBADEBEEBACDACACEACD...</td>\n",
              "      <td>AACBCACDDBABCDCBDADBDCEDDBBDACECBDDCADCECBDCA</td>\n",
              "      <td>0</td>\n",
              "      <td>CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB</td>\n",
              "      <td>BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC</td>\n",
              "      <td>ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...</td>\n",
              "      <td>ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA</td>\n",
              "      <td>1.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>660.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>151</th>\n",
              "      <td>210053634740</td>\n",
              "      <td>2021</td>\n",
              "      <td>5</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927408</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>155</th>\n",
              "      <td>210052073811</td>\n",
              "      <td>2021</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2911204</td>\n",
              "      <td>Gandu</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>204</th>\n",
              "      <td>210053593141</td>\n",
              "      <td>2021</td>\n",
              "      <td>2</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927408</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>909.0</td>\n",
              "      <td>881.0</td>\n",
              "      <td>892.0</td>\n",
              "      <td>899.0</td>\n",
              "      <td>541.6</td>\n",
              "      <td>646.9</td>\n",
              "      <td>510.6</td>\n",
              "      <td>601.0</td>\n",
              "      <td>AEDDABDEADBDEBCAADDCBBCCDCBADECACCDDCEADBCACA</td>\n",
              "      <td>BCECCAEABABCEAEBAACAEDEBBEBABCBBAEEBBEDECBBBA</td>\n",
              "      <td>DACAC99999ACBDDEBEEBCCBBCEAAADAAADAECDEBADCBAA...</td>\n",
              "      <td>CADEEBDDDCBBCBBBBEDDCDAABDBABBEDCCCDDDDBDBCAC</td>\n",
              "      <td>0</td>\n",
              "      <td>EDECABEDABCBEBACCDCBBEEBBCBDAAECDCBDCDBBBADCD</td>\n",
              "      <td>BEECCAEABADBCAEBAAEEDDEBBBADBCBAAEEBBBADCCBBA</td>\n",
              "      <td>ABBACAAECACDBDDADEBDDCBDCEDBEDDBBBBDCEEAADABAC...</td>\n",
              "      <td>EEXEBABDDCECCBCCECDCAEBADEABBDBDEDCEDCCADDCAB</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>40.0</td>\n",
              "      <td>40.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>40.0</td>\n",
              "      <td>400.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>265284</th>\n",
              "      <td>210051161032</td>\n",
              "      <td>2021</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2928703</td>\n",
              "      <td>Santo Antônio de Jesus</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>265325</th>\n",
              "      <td>210051362311</td>\n",
              "      <td>2021</td>\n",
              "      <td>2</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2904100</td>\n",
              "      <td>Boquira</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>265359</th>\n",
              "      <td>210051833040</td>\n",
              "      <td>2021</td>\n",
              "      <td>2</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2923605</td>\n",
              "      <td>Paramirim</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>265994</th>\n",
              "      <td>210054130477</td>\n",
              "      <td>2021</td>\n",
              "      <td>4</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2924009</td>\n",
              "      <td>Paulo Afonso</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266084</th>\n",
              "      <td>210053795196</td>\n",
              "      <td>2021</td>\n",
              "      <td>4</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2905701</td>\n",
              "      <td>Camaçari</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10650 rows × 51 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a525a92d-7eb2-4e87-833b-7fd9e2a548f5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a525a92d-7eb2-4e87-833b-7fd9e2a548f5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a525a92d-7eb2-4e87-833b-7fd9e2a548f5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-f9a62570-83f6-4aea-9126-669027fc568a\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f9a62570-83f6-4aea-9126-669027fc568a')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-f9a62570-83f6-4aea-9126-669027fc568a button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.query('(TP_SEXO == \"M\") | (IN_TREINEIRO == 1)')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 444
        },
        "id": "cxBrclV2K49T",
        "outputId": "428bd8a7-7c61-4bf1-c7fd-f3e3033a181b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        NU_INSCRICAO  NU_ANO  TP_FAIXA_ETARIA TP_SEXO  TP_ESTADO_CIVIL  \\\n",
              "4       210053156861    2021                9       M                1   \n",
              "5       210053085526    2021                3       M                1   \n",
              "7       210053790986    2021                1       M                1   \n",
              "9       210054171092    2021                4       M                1   \n",
              "10      210052237624    2021                5       M                1   \n",
              "...              ...     ...              ...     ...              ...   \n",
              "266185  210052439300    2021                8       M                1   \n",
              "266189  210051432069    2021               12       M                1   \n",
              "266190  210051106175    2021               14       M                2   \n",
              "266191  210051995005    2021               11       M                0   \n",
              "266192  210053234415    2021               12       M                2   \n",
              "\n",
              "        TP_COR_RACA  TP_NACIONALIDADE  TP_ST_CONCLUSAO  TP_ANO_CONCLUIU  \\\n",
              "4                 2                 1                1                5   \n",
              "5                 1                 1                2                0   \n",
              "7                 1                 1                2                0   \n",
              "9                 2                 1                1                1   \n",
              "10                2                 1                2                0   \n",
              "...             ...               ...              ...              ...   \n",
              "266185            2                 1                2                0   \n",
              "266189            3                 1                1                0   \n",
              "266190            2                 1                1                0   \n",
              "266191            2                 1                1               12   \n",
              "266192            2                 1                1               15   \n",
              "\n",
              "        TP_ESCOLA  TP_ENSINO  IN_TREINEIRO  CO_MUNICIPIO_ESC NO_MUNICIPIO_ESC  \\\n",
              "4               1        NaN             0               NaN              NaN   \n",
              "5               2        1.0             0         2932606.0           Urandi   \n",
              "7               2        1.0             0               NaN              NaN   \n",
              "9               1        NaN             0               NaN              NaN   \n",
              "10              2        1.0             0         2910503.0       Entre Rios   \n",
              "...           ...        ...           ...               ...              ...   \n",
              "266185          2        1.0             0               NaN              NaN   \n",
              "266189          1        NaN             0               NaN              NaN   \n",
              "266190          1        NaN             0               NaN              NaN   \n",
              "266191          1        NaN             0               NaN              NaN   \n",
              "266192          1        NaN             0               NaN              NaN   \n",
              "\n",
              "        CO_UF_ESC SG_UF_ESC  TP_DEPENDENCIA_ADM_ESC  TP_LOCALIZACAO_ESC  \\\n",
              "4             NaN       NaN                     NaN                 NaN   \n",
              "5            29.0        BA                     2.0                 1.0   \n",
              "7             NaN       NaN                     NaN                 NaN   \n",
              "9             NaN       NaN                     NaN                 NaN   \n",
              "10           29.0        BA                     2.0                 1.0   \n",
              "...           ...       ...                     ...                 ...   \n",
              "266185        NaN       NaN                     NaN                 NaN   \n",
              "266189        NaN       NaN                     NaN                 NaN   \n",
              "266190        NaN       NaN                     NaN                 NaN   \n",
              "266191        NaN       NaN                     NaN                 NaN   \n",
              "266192        NaN       NaN                     NaN                 NaN   \n",
              "\n",
              "        TP_SIT_FUNC_ESC  CO_MUNICIPIO_PROVA NO_MUNICIPIO_PROVA  CO_UF_PROVA  \\\n",
              "4                   NaN             2910800   Feira de Santana           29   \n",
              "5                   1.0             2932606             Urandi           29   \n",
              "7                   NaN             2907202          Casa Nova           29   \n",
              "9                   NaN             2927408           Salvador           29   \n",
              "10                  1.0             2910503         Entre Rios           29   \n",
              "...                 ...                 ...                ...          ...   \n",
              "266185              NaN             2900702         Alagoinhas           29   \n",
              "266189              NaN             2900702         Alagoinhas           29   \n",
              "266190              NaN             2918407           Juazeiro           29   \n",
              "266191              NaN             2927408           Salvador           29   \n",
              "266192              NaN             2927408           Salvador           29   \n",
              "\n",
              "       SG_UF_PROVA  TP_PRESENCA_CN  TP_PRESENCA_CH  TP_PRESENCA_LC  \\\n",
              "4               BA               1               1               1   \n",
              "5               BA               1               1               1   \n",
              "7               BA               1               1               1   \n",
              "9               BA               0               0               0   \n",
              "10              BA               1               1               1   \n",
              "...            ...             ...             ...             ...   \n",
              "266185          BA               0               0               0   \n",
              "266189          BA               0               0               0   \n",
              "266190          BA               0               0               0   \n",
              "266191          BA               0               0               0   \n",
              "266192          BA               0               0               0   \n",
              "\n",
              "        TP_PRESENCA_MT  CO_PROVA_CN  CO_PROVA_CH  CO_PROVA_LC  CO_PROVA_MT  \\\n",
              "4                    1       1014.0       1000.0       1004.0       1010.0   \n",
              "5                    1        910.0        879.0        889.0        900.0   \n",
              "7                    1        912.0        882.0        891.0        901.0   \n",
              "9                    0          NaN          NaN          NaN          NaN   \n",
              "10                   1        909.0        881.0        892.0        899.0   \n",
              "...                ...          ...          ...          ...          ...   \n",
              "266185               0          NaN          NaN          NaN          NaN   \n",
              "266189               0          NaN          NaN          NaN          NaN   \n",
              "266190               0          NaN          NaN          NaN          NaN   \n",
              "266191               0          NaN          NaN          NaN          NaN   \n",
              "266192               0          NaN          NaN          NaN          NaN   \n",
              "\n",
              "        NU_NOTA_CN  NU_NOTA_CH  NU_NOTA_LC  NU_NOTA_MT  \\\n",
              "4            465.2       613.1       522.1       579.6   \n",
              "5            414.6       410.1       386.7       423.0   \n",
              "7            590.9       659.7       593.6       586.8   \n",
              "9              NaN         NaN         NaN         NaN   \n",
              "10           594.4       572.8       536.6       469.6   \n",
              "...            ...         ...         ...         ...   \n",
              "266185         NaN         NaN         NaN         NaN   \n",
              "266189         NaN         NaN         NaN         NaN   \n",
              "266190         NaN         NaN         NaN         NaN   \n",
              "266191         NaN         NaN         NaN         NaN   \n",
              "266192         NaN         NaN         NaN         NaN   \n",
              "\n",
              "                                      TX_RESPOSTAS_CN  \\\n",
              "4       CDCCBDBBDCBACEBDACBCACADBCBECCEBCDDEBDACEECCD   \n",
              "5       CBCAEDDBBCBABADAABECACCEBDEABCCAECEECCDBCBDCB   \n",
              "7       BADCBEEBECDDEABAEDEBCDCCDABBBEBBDDACCCADBEACE   \n",
              "9                                                 NaN   \n",
              "10      DCADABEEABDAEDABADCABEACABDAEBECBBBDCCCDBCBCD   \n",
              "...                                               ...   \n",
              "266185                                            NaN   \n",
              "266189                                            NaN   \n",
              "266190                                            NaN   \n",
              "266191                                            NaN   \n",
              "266192                                            NaN   \n",
              "\n",
              "                                      TX_RESPOSTAS_CH  \\\n",
              "4       CCBAADECCBACBECCBEADAEBEACBEBBEADEBBABDACDEBC   \n",
              "5       BACDABADEBACEDCACDADBCBDBDBECADBEDAEBDCAEBDCA   \n",
              "7       EBBBEADACABBBADEECBAAEDDBBADCDADBCADDEBBCCEAB   \n",
              "9                                                 NaN   \n",
              "10      BEECCABABABBEAEACBADCAEBEDAABAEAEADCCCAAEEBAA   \n",
              "...                                               ...   \n",
              "266185                                            NaN   \n",
              "266189                                            NaN   \n",
              "266190                                            NaN   \n",
              "266191                                            NaN   \n",
              "266192                                            NaN   \n",
              "\n",
              "                                          TX_RESPOSTAS_LC  \\\n",
              "4       BADCE99999DABAABBABBBCEDBDCDABEABCBBDCACBABAAA...   \n",
              "5       BAEAB99999CACBABEBADECADCEDCBCADABDEDBDCABCACB...   \n",
              "7       ACBAB99999DCEADCADACBDEAEDDABDADCBBBDABCDDDECB...   \n",
              "9                                                     NaN   \n",
              "10      ABBAB99999ADDBAABABCBBBACADAEDBBCCEEEBEAACCDBE...   \n",
              "...                                                   ...   \n",
              "266185                                                NaN   \n",
              "266189                                                NaN   \n",
              "266190                                                NaN   \n",
              "266191                                                NaN   \n",
              "266192                                                NaN   \n",
              "\n",
              "                                      TX_RESPOSTAS_MT  TP_LINGUA  \\\n",
              "4       CCBACBBCCCCEDDDDCBCCDCACCCBBBDDDBCBADDBCABACA          0   \n",
              "5       EACDCADDDCDBADABACEDEDCECBDCCBEAACEADEAECCCEC          0   \n",
              "7       DDEBEEEDDDCAEEBACBEAADDDCCEDEEBABEECEBEEBCAAC          0   \n",
              "9                                                 NaN          0   \n",
              "10      DABEACCEACAACBBABBBACCAACBBAAECBBCBEBCCCBABBD          0   \n",
              "...                                               ...        ...   \n",
              "266185                                            NaN          1   \n",
              "266189                                            NaN          1   \n",
              "266190                                            NaN          1   \n",
              "266191                                            NaN          1   \n",
              "266192                                            NaN          1   \n",
              "\n",
              "                                       TX_GABARITO_CN  \\\n",
              "4       CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB   \n",
              "5       ADCDCDBBBECDCCDCBCBDABCAADCBEBABEEBBBCABEDEDE   \n",
              "7       DABCEDEBEEBBCABEDDCBCBECDADCDAACBDCCCDBBBEBAB   \n",
              "9                                                 NaN   \n",
              "10      EDECABEDABCBEBACCDCBBEEBBCBDAAECDCBDCDBBBADCD   \n",
              "...                                               ...   \n",
              "266185                                            NaN   \n",
              "266189                                            NaN   \n",
              "266190                                            NaN   \n",
              "266191                                            NaN   \n",
              "266192                                            NaN   \n",
              "\n",
              "                                       TX_GABARITO_CH  \\\n",
              "4       BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC   \n",
              "5       BADCBADBCEDDEBBADBCABEECCAEABEBAAECBBABAAEEBB   \n",
              "7       EBAAEADBCACBBABEECBAAEEBBBADCBADBCEDDEBBCAEAB   \n",
              "9                                                 NaN   \n",
              "10      BEECCAEABADBCAEBAAEEDDEBBBADBCBAAEEBBBADCCBBA   \n",
              "...                                               ...   \n",
              "266185                                            NaN   \n",
              "266189                                            NaN   \n",
              "266190                                            NaN   \n",
              "266191                                            NaN   \n",
              "266192                                            NaN   \n",
              "\n",
              "                                           TX_GABARITO_LC  \\\n",
              "4       ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...   \n",
              "5       CAABBCAEAABDCDEADCEDBEDDDABBBBDEBCEADABDBACACD...   \n",
              "7       ACABBACAEADCEADABDACDCEABDDADBEDDDEBBACCDDDCCE...   \n",
              "9                                                     NaN   \n",
              "10      ABBACAAECACDBDDADEBDDCBDCEDBEDDBBBBDCEEAADABAC...   \n",
              "...                                                   ...   \n",
              "266185                                                NaN   \n",
              "266189                                                NaN   \n",
              "266190                                                NaN   \n",
              "266191                                                NaN   \n",
              "266192                                                NaN   \n",
              "\n",
              "                                       TX_GABARITO_MT  TP_STATUS_REDACAO  \\\n",
              "4       ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA                1.0   \n",
              "5       DDCABDCCAEDCEBBDBDAEEBADCAECDBCCCCDDCEEBABXEE                1.0   \n",
              "7       DCCAEBABDDCABEECCBCCEXADDCEECDEBADCABBDBDEDCE                1.0   \n",
              "9                                                 NaN                NaN   \n",
              "10      EEXEBABDDCECCBCCECDCAEBADEABBDBDEDCEDCCADDCAB                1.0   \n",
              "...                                               ...                ...   \n",
              "266185                                            NaN                NaN   \n",
              "266189                                            NaN                NaN   \n",
              "266190                                            NaN                NaN   \n",
              "266191                                            NaN                NaN   \n",
              "266192                                            NaN                NaN   \n",
              "\n",
              "        NU_NOTA_COMP1  NU_NOTA_COMP2  NU_NOTA_COMP3  NU_NOTA_COMP4  \\\n",
              "4               100.0          120.0          100.0          120.0   \n",
              "5               120.0          180.0          140.0          160.0   \n",
              "7               160.0          180.0          160.0          200.0   \n",
              "9                 NaN            NaN            NaN            NaN   \n",
              "10              100.0          100.0           80.0           80.0   \n",
              "...               ...            ...            ...            ...   \n",
              "266185            NaN            NaN            NaN            NaN   \n",
              "266189            NaN            NaN            NaN            NaN   \n",
              "266190            NaN            NaN            NaN            NaN   \n",
              "266191            NaN            NaN            NaN            NaN   \n",
              "266192            NaN            NaN            NaN            NaN   \n",
              "\n",
              "        NU_NOTA_COMP5  NU_NOTA_REDACAO  \n",
              "4               100.0            540.0  \n",
              "5               100.0            700.0  \n",
              "7               200.0            900.0  \n",
              "9                 NaN              NaN  \n",
              "10               80.0            440.0  \n",
              "...               ...              ...  \n",
              "266185            NaN              NaN  \n",
              "266189            NaN              NaN  \n",
              "266190            NaN              NaN  \n",
              "266191            NaN              NaN  \n",
              "266192            NaN              NaN  \n",
              "\n",
              "[116198 rows x 51 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b091bfea-b0f2-40ca-a75d-7dc04c46d0c3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>NU_INSCRICAO</th>\n",
              "      <th>NU_ANO</th>\n",
              "      <th>TP_FAIXA_ETARIA</th>\n",
              "      <th>TP_SEXO</th>\n",
              "      <th>TP_ESTADO_CIVIL</th>\n",
              "      <th>TP_COR_RACA</th>\n",
              "      <th>TP_NACIONALIDADE</th>\n",
              "      <th>TP_ST_CONCLUSAO</th>\n",
              "      <th>TP_ANO_CONCLUIU</th>\n",
              "      <th>TP_ESCOLA</th>\n",
              "      <th>TP_ENSINO</th>\n",
              "      <th>IN_TREINEIRO</th>\n",
              "      <th>CO_MUNICIPIO_ESC</th>\n",
              "      <th>NO_MUNICIPIO_ESC</th>\n",
              "      <th>CO_UF_ESC</th>\n",
              "      <th>SG_UF_ESC</th>\n",
              "      <th>TP_DEPENDENCIA_ADM_ESC</th>\n",
              "      <th>TP_LOCALIZACAO_ESC</th>\n",
              "      <th>TP_SIT_FUNC_ESC</th>\n",
              "      <th>CO_MUNICIPIO_PROVA</th>\n",
              "      <th>NO_MUNICIPIO_PROVA</th>\n",
              "      <th>CO_UF_PROVA</th>\n",
              "      <th>SG_UF_PROVA</th>\n",
              "      <th>TP_PRESENCA_CN</th>\n",
              "      <th>TP_PRESENCA_CH</th>\n",
              "      <th>TP_PRESENCA_LC</th>\n",
              "      <th>TP_PRESENCA_MT</th>\n",
              "      <th>CO_PROVA_CN</th>\n",
              "      <th>CO_PROVA_CH</th>\n",
              "      <th>CO_PROVA_LC</th>\n",
              "      <th>CO_PROVA_MT</th>\n",
              "      <th>NU_NOTA_CN</th>\n",
              "      <th>NU_NOTA_CH</th>\n",
              "      <th>NU_NOTA_LC</th>\n",
              "      <th>NU_NOTA_MT</th>\n",
              "      <th>TX_RESPOSTAS_CN</th>\n",
              "      <th>TX_RESPOSTAS_CH</th>\n",
              "      <th>TX_RESPOSTAS_LC</th>\n",
              "      <th>TX_RESPOSTAS_MT</th>\n",
              "      <th>TP_LINGUA</th>\n",
              "      <th>TX_GABARITO_CN</th>\n",
              "      <th>TX_GABARITO_CH</th>\n",
              "      <th>TX_GABARITO_LC</th>\n",
              "      <th>TX_GABARITO_MT</th>\n",
              "      <th>TP_STATUS_REDACAO</th>\n",
              "      <th>NU_NOTA_COMP1</th>\n",
              "      <th>NU_NOTA_COMP2</th>\n",
              "      <th>NU_NOTA_COMP3</th>\n",
              "      <th>NU_NOTA_COMP4</th>\n",
              "      <th>NU_NOTA_COMP5</th>\n",
              "      <th>NU_NOTA_REDACAO</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>210053156861</td>\n",
              "      <td>2021</td>\n",
              "      <td>9</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2910800</td>\n",
              "      <td>Feira de Santana</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1014.0</td>\n",
              "      <td>1000.0</td>\n",
              "      <td>1004.0</td>\n",
              "      <td>1010.0</td>\n",
              "      <td>465.2</td>\n",
              "      <td>613.1</td>\n",
              "      <td>522.1</td>\n",
              "      <td>579.6</td>\n",
              "      <td>CDCCBDBBDCBACEBDACBCACADBCBECCEBCDDEBDACEECCD</td>\n",
              "      <td>CCBAADECCBACBECCBEADAEBEACBEBBEADEBBABDACDEBC</td>\n",
              "      <td>BADCE99999DABAABBABBBCEDBDCDABEABCBBDCACBABAAA...</td>\n",
              "      <td>CCBACBBCCCCEDDDDCBCCDCACCCBBBDDDBCBADDBCABACA</td>\n",
              "      <td>0</td>\n",
              "      <td>CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB</td>\n",
              "      <td>BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC</td>\n",
              "      <td>ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...</td>\n",
              "      <td>ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA</td>\n",
              "      <td>1.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>540.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>210053085526</td>\n",
              "      <td>2021</td>\n",
              "      <td>3</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2932606.0</td>\n",
              "      <td>Urandi</td>\n",
              "      <td>29.0</td>\n",
              "      <td>BA</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2932606</td>\n",
              "      <td>Urandi</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>910.0</td>\n",
              "      <td>879.0</td>\n",
              "      <td>889.0</td>\n",
              "      <td>900.0</td>\n",
              "      <td>414.6</td>\n",
              "      <td>410.1</td>\n",
              "      <td>386.7</td>\n",
              "      <td>423.0</td>\n",
              "      <td>CBCAEDDBBCBABADAABECACCEBDEABCCAECEECCDBCBDCB</td>\n",
              "      <td>BACDABADEBACEDCACDADBCBDBDBECADBEDAEBDCAEBDCA</td>\n",
              "      <td>BAEAB99999CACBABEBADECADCEDCBCADABDEDBDCABCACB...</td>\n",
              "      <td>EACDCADDDCDBADABACEDEDCECBDCCBEAACEADEAECCCEC</td>\n",
              "      <td>0</td>\n",
              "      <td>ADCDCDBBBECDCCDCBCBDABCAADCBEBABEEBBBCABEDEDE</td>\n",
              "      <td>BADCBADBCEDDEBBADBCABEECCAEABEBAAECBBABAAEEBB</td>\n",
              "      <td>CAABBCAEAABDCDEADCEDBEDDDABBBBDEBCEADABDBACACD...</td>\n",
              "      <td>DDCABDCCAEDCEBBDBDAEEBADCAECDBCCCCDDCEEBABXEE</td>\n",
              "      <td>1.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>180.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>700.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>210053790986</td>\n",
              "      <td>2021</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2907202</td>\n",
              "      <td>Casa Nova</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>912.0</td>\n",
              "      <td>882.0</td>\n",
              "      <td>891.0</td>\n",
              "      <td>901.0</td>\n",
              "      <td>590.9</td>\n",
              "      <td>659.7</td>\n",
              "      <td>593.6</td>\n",
              "      <td>586.8</td>\n",
              "      <td>BADCBEEBECDDEABAEDEBCDCCDABBBEBBDDACCCADBEACE</td>\n",
              "      <td>EBBBEADACABBBADEECBAAEDDBBADCDADBCADDEBBCCEAB</td>\n",
              "      <td>ACBAB99999DCEADCADACBDEAEDDABDADCBBBDABCDDDECB...</td>\n",
              "      <td>DDEBEEEDDDCAEEBACBEAADDDCCEDEEBABEECEBEEBCAAC</td>\n",
              "      <td>0</td>\n",
              "      <td>DABCEDEBEEBBCABEDDCBCBECDADCDAACBDCCCDBBBEBAB</td>\n",
              "      <td>EBAAEADBCACBBABEECBAAEEBBBADCBADBCEDDEBBCAEAB</td>\n",
              "      <td>ACABBACAEADCEADABDACDCEABDDADBEDDDEBBACCDDDCCE...</td>\n",
              "      <td>DCCAEBABDDCABEECCBCCEXADDCEECDEBADCABBDBDEDCE</td>\n",
              "      <td>1.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>180.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>200.0</td>\n",
              "      <td>200.0</td>\n",
              "      <td>900.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>210054171092</td>\n",
              "      <td>2021</td>\n",
              "      <td>4</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927408</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>210052237624</td>\n",
              "      <td>2021</td>\n",
              "      <td>5</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2910503.0</td>\n",
              "      <td>Entre Rios</td>\n",
              "      <td>29.0</td>\n",
              "      <td>BA</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2910503</td>\n",
              "      <td>Entre Rios</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>909.0</td>\n",
              "      <td>881.0</td>\n",
              "      <td>892.0</td>\n",
              "      <td>899.0</td>\n",
              "      <td>594.4</td>\n",
              "      <td>572.8</td>\n",
              "      <td>536.6</td>\n",
              "      <td>469.6</td>\n",
              "      <td>DCADABEEABDAEDABADCABEACABDAEBECBBBDCCCDBCBCD</td>\n",
              "      <td>BEECCABABABBEAEACBADCAEBEDAABAEAEADCCCAAEEBAA</td>\n",
              "      <td>ABBAB99999ADDBAABABCBBBACADAEDBBCCEEEBEAACCDBE...</td>\n",
              "      <td>DABEACCEACAACBBABBBACCAACBBAAECBBCBEBCCCBABBD</td>\n",
              "      <td>0</td>\n",
              "      <td>EDECABEDABCBEBACCDCBBEEBBCBDAAECDCBDCDBBBADCD</td>\n",
              "      <td>BEECCAEABADBCAEBAAEEDDEBBBADBCBAAEEBBBADCCBBA</td>\n",
              "      <td>ABBACAAECACDBDDADEBDDCBDCEDBEDDBBBBDCEEAADABAC...</td>\n",
              "      <td>EEXEBABDDCECCBCCECDCAEBADEABBDBDEDCEDCCADDCAB</td>\n",
              "      <td>1.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>440.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266185</th>\n",
              "      <td>210052439300</td>\n",
              "      <td>2021</td>\n",
              "      <td>8</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2900702</td>\n",
              "      <td>Alagoinhas</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266189</th>\n",
              "      <td>210051432069</td>\n",
              "      <td>2021</td>\n",
              "      <td>12</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2900702</td>\n",
              "      <td>Alagoinhas</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266190</th>\n",
              "      <td>210051106175</td>\n",
              "      <td>2021</td>\n",
              "      <td>14</td>\n",
              "      <td>M</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2918407</td>\n",
              "      <td>Juazeiro</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266191</th>\n",
              "      <td>210051995005</td>\n",
              "      <td>2021</td>\n",
              "      <td>11</td>\n",
              "      <td>M</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927408</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266192</th>\n",
              "      <td>210053234415</td>\n",
              "      <td>2021</td>\n",
              "      <td>12</td>\n",
              "      <td>M</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927408</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>116198 rows × 51 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b091bfea-b0f2-40ca-a75d-7dc04c46d0c3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b091bfea-b0f2-40ca-a75d-7dc04c46d0c3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b091bfea-b0f2-40ca-a75d-7dc04c46d0c3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-d41701bc-8872-4488-8c1f-8c1731068792\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d41701bc-8872-4488-8c1f-8c1731068792')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-d41701bc-8872-4488-8c1f-8c1731068792 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Criando uma máscara booleana\n",
        "mask = df.TP_SEXO == 'M'\n",
        "df[mask]"
      ],
      "metadata": {
        "id": "KTQW1ITJLViV",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 444
        },
        "outputId": "f425a2cb-bcc9-4cd3-f0d7-80359a72ac02"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        NU_INSCRICAO  NU_ANO  TP_FAIXA_ETARIA TP_SEXO  TP_ESTADO_CIVIL  \\\n",
              "4       210053156861    2021                9       M                1   \n",
              "5       210053085526    2021                3       M                1   \n",
              "7       210053790986    2021                1       M                1   \n",
              "9       210054171092    2021                4       M                1   \n",
              "10      210052237624    2021                5       M                1   \n",
              "...              ...     ...              ...     ...              ...   \n",
              "266185  210052439300    2021                8       M                1   \n",
              "266189  210051432069    2021               12       M                1   \n",
              "266190  210051106175    2021               14       M                2   \n",
              "266191  210051995005    2021               11       M                0   \n",
              "266192  210053234415    2021               12       M                2   \n",
              "\n",
              "        TP_COR_RACA  TP_NACIONALIDADE  TP_ST_CONCLUSAO  TP_ANO_CONCLUIU  \\\n",
              "4                 2                 1                1                5   \n",
              "5                 1                 1                2                0   \n",
              "7                 1                 1                2                0   \n",
              "9                 2                 1                1                1   \n",
              "10                2                 1                2                0   \n",
              "...             ...               ...              ...              ...   \n",
              "266185            2                 1                2                0   \n",
              "266189            3                 1                1                0   \n",
              "266190            2                 1                1                0   \n",
              "266191            2                 1                1               12   \n",
              "266192            2                 1                1               15   \n",
              "\n",
              "        TP_ESCOLA  TP_ENSINO  IN_TREINEIRO  CO_MUNICIPIO_ESC NO_MUNICIPIO_ESC  \\\n",
              "4               1        NaN             0               NaN              NaN   \n",
              "5               2        1.0             0         2932606.0           Urandi   \n",
              "7               2        1.0             0               NaN              NaN   \n",
              "9               1        NaN             0               NaN              NaN   \n",
              "10              2        1.0             0         2910503.0       Entre Rios   \n",
              "...           ...        ...           ...               ...              ...   \n",
              "266185          2        1.0             0               NaN              NaN   \n",
              "266189          1        NaN             0               NaN              NaN   \n",
              "266190          1        NaN             0               NaN              NaN   \n",
              "266191          1        NaN             0               NaN              NaN   \n",
              "266192          1        NaN             0               NaN              NaN   \n",
              "\n",
              "        CO_UF_ESC SG_UF_ESC  TP_DEPENDENCIA_ADM_ESC  TP_LOCALIZACAO_ESC  \\\n",
              "4             NaN       NaN                     NaN                 NaN   \n",
              "5            29.0        BA                     2.0                 1.0   \n",
              "7             NaN       NaN                     NaN                 NaN   \n",
              "9             NaN       NaN                     NaN                 NaN   \n",
              "10           29.0        BA                     2.0                 1.0   \n",
              "...           ...       ...                     ...                 ...   \n",
              "266185        NaN       NaN                     NaN                 NaN   \n",
              "266189        NaN       NaN                     NaN                 NaN   \n",
              "266190        NaN       NaN                     NaN                 NaN   \n",
              "266191        NaN       NaN                     NaN                 NaN   \n",
              "266192        NaN       NaN                     NaN                 NaN   \n",
              "\n",
              "        TP_SIT_FUNC_ESC  CO_MUNICIPIO_PROVA NO_MUNICIPIO_PROVA  CO_UF_PROVA  \\\n",
              "4                   NaN             2910800   Feira de Santana           29   \n",
              "5                   1.0             2932606             Urandi           29   \n",
              "7                   NaN             2907202          Casa Nova           29   \n",
              "9                   NaN             2927408           Salvador           29   \n",
              "10                  1.0             2910503         Entre Rios           29   \n",
              "...                 ...                 ...                ...          ...   \n",
              "266185              NaN             2900702         Alagoinhas           29   \n",
              "266189              NaN             2900702         Alagoinhas           29   \n",
              "266190              NaN             2918407           Juazeiro           29   \n",
              "266191              NaN             2927408           Salvador           29   \n",
              "266192              NaN             2927408           Salvador           29   \n",
              "\n",
              "       SG_UF_PROVA  TP_PRESENCA_CN  TP_PRESENCA_CH  TP_PRESENCA_LC  \\\n",
              "4               BA               1               1               1   \n",
              "5               BA               1               1               1   \n",
              "7               BA               1               1               1   \n",
              "9               BA               0               0               0   \n",
              "10              BA               1               1               1   \n",
              "...            ...             ...             ...             ...   \n",
              "266185          BA               0               0               0   \n",
              "266189          BA               0               0               0   \n",
              "266190          BA               0               0               0   \n",
              "266191          BA               0               0               0   \n",
              "266192          BA               0               0               0   \n",
              "\n",
              "        TP_PRESENCA_MT  CO_PROVA_CN  CO_PROVA_CH  CO_PROVA_LC  CO_PROVA_MT  \\\n",
              "4                    1       1014.0       1000.0       1004.0       1010.0   \n",
              "5                    1        910.0        879.0        889.0        900.0   \n",
              "7                    1        912.0        882.0        891.0        901.0   \n",
              "9                    0          NaN          NaN          NaN          NaN   \n",
              "10                   1        909.0        881.0        892.0        899.0   \n",
              "...                ...          ...          ...          ...          ...   \n",
              "266185               0          NaN          NaN          NaN          NaN   \n",
              "266189               0          NaN          NaN          NaN          NaN   \n",
              "266190               0          NaN          NaN          NaN          NaN   \n",
              "266191               0          NaN          NaN          NaN          NaN   \n",
              "266192               0          NaN          NaN          NaN          NaN   \n",
              "\n",
              "        NU_NOTA_CN  NU_NOTA_CH  NU_NOTA_LC  NU_NOTA_MT  \\\n",
              "4            465.2       613.1       522.1       579.6   \n",
              "5            414.6       410.1       386.7       423.0   \n",
              "7            590.9       659.7       593.6       586.8   \n",
              "9              NaN         NaN         NaN         NaN   \n",
              "10           594.4       572.8       536.6       469.6   \n",
              "...            ...         ...         ...         ...   \n",
              "266185         NaN         NaN         NaN         NaN   \n",
              "266189         NaN         NaN         NaN         NaN   \n",
              "266190         NaN         NaN         NaN         NaN   \n",
              "266191         NaN         NaN         NaN         NaN   \n",
              "266192         NaN         NaN         NaN         NaN   \n",
              "\n",
              "                                      TX_RESPOSTAS_CN  \\\n",
              "4       CDCCBDBBDCBACEBDACBCACADBCBECCEBCDDEBDACEECCD   \n",
              "5       CBCAEDDBBCBABADAABECACCEBDEABCCAECEECCDBCBDCB   \n",
              "7       BADCBEEBECDDEABAEDEBCDCCDABBBEBBDDACCCADBEACE   \n",
              "9                                                 NaN   \n",
              "10      DCADABEEABDAEDABADCABEACABDAEBECBBBDCCCDBCBCD   \n",
              "...                                               ...   \n",
              "266185                                            NaN   \n",
              "266189                                            NaN   \n",
              "266190                                            NaN   \n",
              "266191                                            NaN   \n",
              "266192                                            NaN   \n",
              "\n",
              "                                      TX_RESPOSTAS_CH  \\\n",
              "4       CCBAADECCBACBECCBEADAEBEACBEBBEADEBBABDACDEBC   \n",
              "5       BACDABADEBACEDCACDADBCBDBDBECADBEDAEBDCAEBDCA   \n",
              "7       EBBBEADACABBBADEECBAAEDDBBADCDADBCADDEBBCCEAB   \n",
              "9                                                 NaN   \n",
              "10      BEECCABABABBEAEACBADCAEBEDAABAEAEADCCCAAEEBAA   \n",
              "...                                               ...   \n",
              "266185                                            NaN   \n",
              "266189                                            NaN   \n",
              "266190                                            NaN   \n",
              "266191                                            NaN   \n",
              "266192                                            NaN   \n",
              "\n",
              "                                          TX_RESPOSTAS_LC  \\\n",
              "4       BADCE99999DABAABBABBBCEDBDCDABEABCBBDCACBABAAA...   \n",
              "5       BAEAB99999CACBABEBADECADCEDCBCADABDEDBDCABCACB...   \n",
              "7       ACBAB99999DCEADCADACBDEAEDDABDADCBBBDABCDDDECB...   \n",
              "9                                                     NaN   \n",
              "10      ABBAB99999ADDBAABABCBBBACADAEDBBCCEEEBEAACCDBE...   \n",
              "...                                                   ...   \n",
              "266185                                                NaN   \n",
              "266189                                                NaN   \n",
              "266190                                                NaN   \n",
              "266191                                                NaN   \n",
              "266192                                                NaN   \n",
              "\n",
              "                                      TX_RESPOSTAS_MT  TP_LINGUA  \\\n",
              "4       CCBACBBCCCCEDDDDCBCCDCACCCBBBDDDBCBADDBCABACA          0   \n",
              "5       EACDCADDDCDBADABACEDEDCECBDCCBEAACEADEAECCCEC          0   \n",
              "7       DDEBEEEDDDCAEEBACBEAADDDCCEDEEBABEECEBEEBCAAC          0   \n",
              "9                                                 NaN          0   \n",
              "10      DABEACCEACAACBBABBBACCAACBBAAECBBCBEBCCCBABBD          0   \n",
              "...                                               ...        ...   \n",
              "266185                                            NaN          1   \n",
              "266189                                            NaN          1   \n",
              "266190                                            NaN          1   \n",
              "266191                                            NaN          1   \n",
              "266192                                            NaN          1   \n",
              "\n",
              "                                       TX_GABARITO_CN  \\\n",
              "4       CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB   \n",
              "5       ADCDCDBBBECDCCDCBCBDABCAADCBEBABEEBBBCABEDEDE   \n",
              "7       DABCEDEBEEBBCABEDDCBCBECDADCDAACBDCCCDBBBEBAB   \n",
              "9                                                 NaN   \n",
              "10      EDECABEDABCBEBACCDCBBEEBBCBDAAECDCBDCDBBBADCD   \n",
              "...                                               ...   \n",
              "266185                                            NaN   \n",
              "266189                                            NaN   \n",
              "266190                                            NaN   \n",
              "266191                                            NaN   \n",
              "266192                                            NaN   \n",
              "\n",
              "                                       TX_GABARITO_CH  \\\n",
              "4       BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC   \n",
              "5       BADCBADBCEDDEBBADBCABEECCAEABEBAAECBBABAAEEBB   \n",
              "7       EBAAEADBCACBBABEECBAAEEBBBADCBADBCEDDEBBCAEAB   \n",
              "9                                                 NaN   \n",
              "10      BEECCAEABADBCAEBAAEEDDEBBBADBCBAAEEBBBADCCBBA   \n",
              "...                                               ...   \n",
              "266185                                            NaN   \n",
              "266189                                            NaN   \n",
              "266190                                            NaN   \n",
              "266191                                            NaN   \n",
              "266192                                            NaN   \n",
              "\n",
              "                                           TX_GABARITO_LC  \\\n",
              "4       ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...   \n",
              "5       CAABBCAEAABDCDEADCEDBEDDDABBBBDEBCEADABDBACACD...   \n",
              "7       ACABBACAEADCEADABDACDCEABDDADBEDDDEBBACCDDDCCE...   \n",
              "9                                                     NaN   \n",
              "10      ABBACAAECACDBDDADEBDDCBDCEDBEDDBBBBDCEEAADABAC...   \n",
              "...                                                   ...   \n",
              "266185                                                NaN   \n",
              "266189                                                NaN   \n",
              "266190                                                NaN   \n",
              "266191                                                NaN   \n",
              "266192                                                NaN   \n",
              "\n",
              "                                       TX_GABARITO_MT  TP_STATUS_REDACAO  \\\n",
              "4       ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA                1.0   \n",
              "5       DDCABDCCAEDCEBBDBDAEEBADCAECDBCCCCDDCEEBABXEE                1.0   \n",
              "7       DCCAEBABDDCABEECCBCCEXADDCEECDEBADCABBDBDEDCE                1.0   \n",
              "9                                                 NaN                NaN   \n",
              "10      EEXEBABDDCECCBCCECDCAEBADEABBDBDEDCEDCCADDCAB                1.0   \n",
              "...                                               ...                ...   \n",
              "266185                                            NaN                NaN   \n",
              "266189                                            NaN                NaN   \n",
              "266190                                            NaN                NaN   \n",
              "266191                                            NaN                NaN   \n",
              "266192                                            NaN                NaN   \n",
              "\n",
              "        NU_NOTA_COMP1  NU_NOTA_COMP2  NU_NOTA_COMP3  NU_NOTA_COMP4  \\\n",
              "4               100.0          120.0          100.0          120.0   \n",
              "5               120.0          180.0          140.0          160.0   \n",
              "7               160.0          180.0          160.0          200.0   \n",
              "9                 NaN            NaN            NaN            NaN   \n",
              "10              100.0          100.0           80.0           80.0   \n",
              "...               ...            ...            ...            ...   \n",
              "266185            NaN            NaN            NaN            NaN   \n",
              "266189            NaN            NaN            NaN            NaN   \n",
              "266190            NaN            NaN            NaN            NaN   \n",
              "266191            NaN            NaN            NaN            NaN   \n",
              "266192            NaN            NaN            NaN            NaN   \n",
              "\n",
              "        NU_NOTA_COMP5  NU_NOTA_REDACAO  \n",
              "4               100.0            540.0  \n",
              "5               100.0            700.0  \n",
              "7               200.0            900.0  \n",
              "9                 NaN              NaN  \n",
              "10               80.0            440.0  \n",
              "...               ...              ...  \n",
              "266185            NaN              NaN  \n",
              "266189            NaN              NaN  \n",
              "266190            NaN              NaN  \n",
              "266191            NaN              NaN  \n",
              "266192            NaN              NaN  \n",
              "\n",
              "[94197 rows x 51 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e8c99630-0c7d-497a-9caa-c48031384f1c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>NU_INSCRICAO</th>\n",
              "      <th>NU_ANO</th>\n",
              "      <th>TP_FAIXA_ETARIA</th>\n",
              "      <th>TP_SEXO</th>\n",
              "      <th>TP_ESTADO_CIVIL</th>\n",
              "      <th>TP_COR_RACA</th>\n",
              "      <th>TP_NACIONALIDADE</th>\n",
              "      <th>TP_ST_CONCLUSAO</th>\n",
              "      <th>TP_ANO_CONCLUIU</th>\n",
              "      <th>TP_ESCOLA</th>\n",
              "      <th>TP_ENSINO</th>\n",
              "      <th>IN_TREINEIRO</th>\n",
              "      <th>CO_MUNICIPIO_ESC</th>\n",
              "      <th>NO_MUNICIPIO_ESC</th>\n",
              "      <th>CO_UF_ESC</th>\n",
              "      <th>SG_UF_ESC</th>\n",
              "      <th>TP_DEPENDENCIA_ADM_ESC</th>\n",
              "      <th>TP_LOCALIZACAO_ESC</th>\n",
              "      <th>TP_SIT_FUNC_ESC</th>\n",
              "      <th>CO_MUNICIPIO_PROVA</th>\n",
              "      <th>NO_MUNICIPIO_PROVA</th>\n",
              "      <th>CO_UF_PROVA</th>\n",
              "      <th>SG_UF_PROVA</th>\n",
              "      <th>TP_PRESENCA_CN</th>\n",
              "      <th>TP_PRESENCA_CH</th>\n",
              "      <th>TP_PRESENCA_LC</th>\n",
              "      <th>TP_PRESENCA_MT</th>\n",
              "      <th>CO_PROVA_CN</th>\n",
              "      <th>CO_PROVA_CH</th>\n",
              "      <th>CO_PROVA_LC</th>\n",
              "      <th>CO_PROVA_MT</th>\n",
              "      <th>NU_NOTA_CN</th>\n",
              "      <th>NU_NOTA_CH</th>\n",
              "      <th>NU_NOTA_LC</th>\n",
              "      <th>NU_NOTA_MT</th>\n",
              "      <th>TX_RESPOSTAS_CN</th>\n",
              "      <th>TX_RESPOSTAS_CH</th>\n",
              "      <th>TX_RESPOSTAS_LC</th>\n",
              "      <th>TX_RESPOSTAS_MT</th>\n",
              "      <th>TP_LINGUA</th>\n",
              "      <th>TX_GABARITO_CN</th>\n",
              "      <th>TX_GABARITO_CH</th>\n",
              "      <th>TX_GABARITO_LC</th>\n",
              "      <th>TX_GABARITO_MT</th>\n",
              "      <th>TP_STATUS_REDACAO</th>\n",
              "      <th>NU_NOTA_COMP1</th>\n",
              "      <th>NU_NOTA_COMP2</th>\n",
              "      <th>NU_NOTA_COMP3</th>\n",
              "      <th>NU_NOTA_COMP4</th>\n",
              "      <th>NU_NOTA_COMP5</th>\n",
              "      <th>NU_NOTA_REDACAO</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>210053156861</td>\n",
              "      <td>2021</td>\n",
              "      <td>9</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2910800</td>\n",
              "      <td>Feira de Santana</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1014.0</td>\n",
              "      <td>1000.0</td>\n",
              "      <td>1004.0</td>\n",
              "      <td>1010.0</td>\n",
              "      <td>465.2</td>\n",
              "      <td>613.1</td>\n",
              "      <td>522.1</td>\n",
              "      <td>579.6</td>\n",
              "      <td>CDCCBDBBDCBACEBDACBCACADBCBECCEBCDDEBDACEECCD</td>\n",
              "      <td>CCBAADECCBACBECCBEADAEBEACBEBBEADEBBABDACDEBC</td>\n",
              "      <td>BADCE99999DABAABBABBBCEDBDCDABEABCBBDCACBABAAA...</td>\n",
              "      <td>CCBACBBCCCCEDDDDCBCCDCACCCBBBDDDBCBADDBCABACA</td>\n",
              "      <td>0</td>\n",
              "      <td>CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB</td>\n",
              "      <td>BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC</td>\n",
              "      <td>ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...</td>\n",
              "      <td>ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA</td>\n",
              "      <td>1.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>540.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>210053085526</td>\n",
              "      <td>2021</td>\n",
              "      <td>3</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2932606.0</td>\n",
              "      <td>Urandi</td>\n",
              "      <td>29.0</td>\n",
              "      <td>BA</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2932606</td>\n",
              "      <td>Urandi</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>910.0</td>\n",
              "      <td>879.0</td>\n",
              "      <td>889.0</td>\n",
              "      <td>900.0</td>\n",
              "      <td>414.6</td>\n",
              "      <td>410.1</td>\n",
              "      <td>386.7</td>\n",
              "      <td>423.0</td>\n",
              "      <td>CBCAEDDBBCBABADAABECACCEBDEABCCAECEECCDBCBDCB</td>\n",
              "      <td>BACDABADEBACEDCACDADBCBDBDBECADBEDAEBDCAEBDCA</td>\n",
              "      <td>BAEAB99999CACBABEBADECADCEDCBCADABDEDBDCABCACB...</td>\n",
              "      <td>EACDCADDDCDBADABACEDEDCECBDCCBEAACEADEAECCCEC</td>\n",
              "      <td>0</td>\n",
              "      <td>ADCDCDBBBECDCCDCBCBDABCAADCBEBABEEBBBCABEDEDE</td>\n",
              "      <td>BADCBADBCEDDEBBADBCABEECCAEABEBAAECBBABAAEEBB</td>\n",
              "      <td>CAABBCAEAABDCDEADCEDBEDDDABBBBDEBCEADABDBACACD...</td>\n",
              "      <td>DDCABDCCAEDCEBBDBDAEEBADCAECDBCCCCDDCEEBABXEE</td>\n",
              "      <td>1.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>180.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>700.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>210053790986</td>\n",
              "      <td>2021</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2907202</td>\n",
              "      <td>Casa Nova</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>912.0</td>\n",
              "      <td>882.0</td>\n",
              "      <td>891.0</td>\n",
              "      <td>901.0</td>\n",
              "      <td>590.9</td>\n",
              "      <td>659.7</td>\n",
              "      <td>593.6</td>\n",
              "      <td>586.8</td>\n",
              "      <td>BADCBEEBECDDEABAEDEBCDCCDABBBEBBDDACCCADBEACE</td>\n",
              "      <td>EBBBEADACABBBADEECBAAEDDBBADCDADBCADDEBBCCEAB</td>\n",
              "      <td>ACBAB99999DCEADCADACBDEAEDDABDADCBBBDABCDDDECB...</td>\n",
              "      <td>DDEBEEEDDDCAEEBACBEAADDDCCEDEEBABEECEBEEBCAAC</td>\n",
              "      <td>0</td>\n",
              "      <td>DABCEDEBEEBBCABEDDCBCBECDADCDAACBDCCCDBBBEBAB</td>\n",
              "      <td>EBAAEADBCACBBABEECBAAEEBBBADCBADBCEDDEBBCAEAB</td>\n",
              "      <td>ACABBACAEADCEADABDACDCEABDDADBEDDDEBBACCDDDCCE...</td>\n",
              "      <td>DCCAEBABDDCABEECCBCCEXADDCEECDEBADCABBDBDEDCE</td>\n",
              "      <td>1.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>180.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>200.0</td>\n",
              "      <td>200.0</td>\n",
              "      <td>900.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>210054171092</td>\n",
              "      <td>2021</td>\n",
              "      <td>4</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927408</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>210052237624</td>\n",
              "      <td>2021</td>\n",
              "      <td>5</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2910503.0</td>\n",
              "      <td>Entre Rios</td>\n",
              "      <td>29.0</td>\n",
              "      <td>BA</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2910503</td>\n",
              "      <td>Entre Rios</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>909.0</td>\n",
              "      <td>881.0</td>\n",
              "      <td>892.0</td>\n",
              "      <td>899.0</td>\n",
              "      <td>594.4</td>\n",
              "      <td>572.8</td>\n",
              "      <td>536.6</td>\n",
              "      <td>469.6</td>\n",
              "      <td>DCADABEEABDAEDABADCABEACABDAEBECBBBDCCCDBCBCD</td>\n",
              "      <td>BEECCABABABBEAEACBADCAEBEDAABAEAEADCCCAAEEBAA</td>\n",
              "      <td>ABBAB99999ADDBAABABCBBBACADAEDBBCCEEEBEAACCDBE...</td>\n",
              "      <td>DABEACCEACAACBBABBBACCAACBBAAECBBCBEBCCCBABBD</td>\n",
              "      <td>0</td>\n",
              "      <td>EDECABEDABCBEBACCDCBBEEBBCBDAAECDCBDCDBBBADCD</td>\n",
              "      <td>BEECCAEABADBCAEBAAEEDDEBBBADBCBAAEEBBBADCCBBA</td>\n",
              "      <td>ABBACAAECACDBDDADEBDDCBDCEDBEDDBBBBDCEEAADABAC...</td>\n",
              "      <td>EEXEBABDDCECCBCCECDCAEBADEABBDBDEDCEDCCADDCAB</td>\n",
              "      <td>1.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>440.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266185</th>\n",
              "      <td>210052439300</td>\n",
              "      <td>2021</td>\n",
              "      <td>8</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2900702</td>\n",
              "      <td>Alagoinhas</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266189</th>\n",
              "      <td>210051432069</td>\n",
              "      <td>2021</td>\n",
              "      <td>12</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2900702</td>\n",
              "      <td>Alagoinhas</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266190</th>\n",
              "      <td>210051106175</td>\n",
              "      <td>2021</td>\n",
              "      <td>14</td>\n",
              "      <td>M</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2918407</td>\n",
              "      <td>Juazeiro</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266191</th>\n",
              "      <td>210051995005</td>\n",
              "      <td>2021</td>\n",
              "      <td>11</td>\n",
              "      <td>M</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927408</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266192</th>\n",
              "      <td>210053234415</td>\n",
              "      <td>2021</td>\n",
              "      <td>12</td>\n",
              "      <td>M</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927408</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>94197 rows × 51 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e8c99630-0c7d-497a-9caa-c48031384f1c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e8c99630-0c7d-497a-9caa-c48031384f1c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e8c99630-0c7d-497a-9caa-c48031384f1c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-4d889e1d-a169-4665-bd55-54a99ccf5910\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4d889e1d-a169-4665-bd55-54a99ccf5910')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-4d889e1d-a169-4665-bd55-54a99ccf5910 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.loc[df.TP_SEXO == 'M'].sample(5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "id": "xPi6DkoO78bk",
        "outputId": "61f445d3-ebfa-4e3a-b4f8-6cb7ec906edf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        NU_INSCRICAO  NU_ANO  TP_FAIXA_ETARIA TP_SEXO  TP_ESTADO_CIVIL  \\\n",
              "229215  210054456691    2021                3       M                0   \n",
              "104558  210054156569    2021                8       M                1   \n",
              "159256  210054058014    2021               10       M                1   \n",
              "235539  210053042815    2021                6       M                1   \n",
              "204863  210051042110    2021                2       M                1   \n",
              "\n",
              "        TP_COR_RACA  TP_NACIONALIDADE  TP_ST_CONCLUSAO  TP_ANO_CONCLUIU  \\\n",
              "229215            3                 1                2                0   \n",
              "104558            2                 1                1                3   \n",
              "159256            1                 1                1                8   \n",
              "235539            3                 1                2                0   \n",
              "204863            3                 1                2                0   \n",
              "\n",
              "        TP_ESCOLA  TP_ENSINO  IN_TREINEIRO  CO_MUNICIPIO_ESC  \\\n",
              "229215          2        1.0             0         2930105.0   \n",
              "104558          1        NaN             0               NaN   \n",
              "159256          1        NaN             0               NaN   \n",
              "235539          2        1.0             0         2900306.0   \n",
              "204863          2        1.0             0               NaN   \n",
              "\n",
              "        NO_MUNICIPIO_ESC  CO_UF_ESC SG_UF_ESC  TP_DEPENDENCIA_ADM_ESC  \\\n",
              "229215  Senhor do Bonfim       29.0        BA                     2.0   \n",
              "104558               NaN        NaN       NaN                     NaN   \n",
              "159256               NaN        NaN       NaN                     NaN   \n",
              "235539         Acajutiba       29.0        BA                     2.0   \n",
              "204863               NaN        NaN       NaN                     NaN   \n",
              "\n",
              "        TP_LOCALIZACAO_ESC  TP_SIT_FUNC_ESC  CO_MUNICIPIO_PROVA  \\\n",
              "229215                 1.0              1.0             2930105   \n",
              "104558                 NaN              NaN             2928000   \n",
              "159256                 NaN              NaN             2903904   \n",
              "235539                 1.0              1.0             2910602   \n",
              "204863                 NaN              NaN             2905701   \n",
              "\n",
              "       NO_MUNICIPIO_PROVA  CO_UF_PROVA SG_UF_PROVA  TP_PRESENCA_CN  \\\n",
              "229215   Senhor do Bonfim           29          BA               1   \n",
              "104558           Santaluz           29          BA               0   \n",
              "159256  Bom Jesus da Lapa           29          BA               0   \n",
              "235539          Esplanada           29          BA               1   \n",
              "204863           Camaçari           29          BA               1   \n",
              "\n",
              "        TP_PRESENCA_CH  TP_PRESENCA_LC  TP_PRESENCA_MT  CO_PROVA_CN  \\\n",
              "229215               1               1               1        910.0   \n",
              "104558               0               0               0          NaN   \n",
              "159256               0               0               0          NaN   \n",
              "235539               1               1               1        911.0   \n",
              "204863               1               1               1        911.0   \n",
              "\n",
              "        CO_PROVA_CH  CO_PROVA_LC  CO_PROVA_MT  NU_NOTA_CN  NU_NOTA_CH  \\\n",
              "229215        879.0        889.0        900.0       459.1       504.6   \n",
              "104558          NaN          NaN          NaN         NaN         NaN   \n",
              "159256          NaN          NaN          NaN         NaN         NaN   \n",
              "235539        880.0        890.0        902.0       438.3       386.1   \n",
              "204863        880.0        890.0        902.0       382.9       435.2   \n",
              "\n",
              "        NU_NOTA_LC  NU_NOTA_MT                                TX_RESPOSTAS_CN  \\\n",
              "229215       475.3       506.6  DBEEADCBBADDCEDCBCEDADCEEAEABDCEACBADBBBEDBAE   \n",
              "104558         NaN         NaN                                            NaN   \n",
              "159256         NaN         NaN                                            NaN   \n",
              "235539       389.9       403.4  CEADBCDEDDAEABABACACEDACDAACBEDECDBBDBABAECBE   \n",
              "204863       480.0       613.9  ABADDCECDBAEDEDDAEABCDCABEDACDBDCCABDACEADEBE   \n",
              "\n",
              "                                      TX_RESPOSTAS_CH  \\\n",
              "229215  BABDACEBCEADEDACCBEAACEBEAECDABDCABEAEADCEEDB   \n",
              "104558                                            NaN   \n",
              "159256                                            NaN   \n",
              "235539  CEABEDACEBDCDCADCADACBBEEDEEBADADEACDEBDCCABE   \n",
              "204863  EBBDABECDACABACCAEEDCBCEADBADCBDACBADECEBDDAC   \n",
              "\n",
              "                                          TX_RESPOSTAS_LC  \\\n",
              "229215  BADAC99999BAECCADCDEEEABAABDCEDBCBCABCBEDCAABD...   \n",
              "104558                                                NaN   \n",
              "159256                                                NaN   \n",
              "235539  DAABA99999BDCDAEABDBCAEAEDCDACBADACBECEABCEEDC...   \n",
              "204863  D.C..99999BADACBDBDCBCEAADCBECEADADACDAAEDCADA...   \n",
              "\n",
              "                                      TX_RESPOSTAS_MT  TP_LINGUA  \\\n",
              "229215  DDEADCCCDCADDBDBACBDAACDBCADEEBAACECBAEBDDACA          0   \n",
              "104558                                            NaN          1   \n",
              "159256                                            NaN          0   \n",
              "235539  BDABCAEDAABECADAEEACABBDEADAABEAABCABBBCCADAB          0   \n",
              "204863  EACEBCEDACDEABDDADCAEBEBBEBACDDCCACABBEBCBCAD          0   \n",
              "\n",
              "                                       TX_GABARITO_CN  \\\n",
              "229215  ADCDCDBBBECDCCDCBCBDABCAADCBEBABEEBBBCABEDEDE   \n",
              "104558                                            NaN   \n",
              "159256                                            NaN   \n",
              "235539  CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB   \n",
              "204863  CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB   \n",
              "\n",
              "                                       TX_GABARITO_CH  \\\n",
              "229215  BADCBADBCEDDEBBADBCABEECCAEABEBAAECBBABAAEEBB   \n",
              "104558                                            NaN   \n",
              "159256                                            NaN   \n",
              "235539  BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC   \n",
              "204863  BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC   \n",
              "\n",
              "                                           TX_GABARITO_LC  \\\n",
              "229215  CAABBCAEAABDCDEADCEDBEDDDABBBBDEBCEADABDBACACD...   \n",
              "104558                                                NaN   \n",
              "159256                                                NaN   \n",
              "235539  ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...   \n",
              "204863  ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...   \n",
              "\n",
              "                                       TX_GABARITO_MT  TP_STATUS_REDACAO  \\\n",
              "229215  DDCABDCCAEDCEBBDBDAEEBADCAECDBCCCCDDCEEBABXEE                1.0   \n",
              "104558                                            NaN                NaN   \n",
              "159256                                            NaN                NaN   \n",
              "235539  ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA                1.0   \n",
              "204863  ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA                1.0   \n",
              "\n",
              "        NU_NOTA_COMP1  NU_NOTA_COMP2  NU_NOTA_COMP3  NU_NOTA_COMP4  \\\n",
              "229215          120.0          120.0          140.0          100.0   \n",
              "104558            NaN            NaN            NaN            NaN   \n",
              "159256            NaN            NaN            NaN            NaN   \n",
              "235539          100.0          120.0           80.0           80.0   \n",
              "204863          140.0          140.0          120.0          140.0   \n",
              "\n",
              "        NU_NOTA_COMP5  NU_NOTA_REDACAO  \n",
              "229215           80.0            560.0  \n",
              "104558            NaN              NaN  \n",
              "159256            NaN              NaN  \n",
              "235539           80.0            460.0  \n",
              "204863          140.0            680.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1597dc83-0e1f-433c-94da-54b0399a9c9f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>NU_INSCRICAO</th>\n",
              "      <th>NU_ANO</th>\n",
              "      <th>TP_FAIXA_ETARIA</th>\n",
              "      <th>TP_SEXO</th>\n",
              "      <th>TP_ESTADO_CIVIL</th>\n",
              "      <th>TP_COR_RACA</th>\n",
              "      <th>TP_NACIONALIDADE</th>\n",
              "      <th>TP_ST_CONCLUSAO</th>\n",
              "      <th>TP_ANO_CONCLUIU</th>\n",
              "      <th>TP_ESCOLA</th>\n",
              "      <th>TP_ENSINO</th>\n",
              "      <th>IN_TREINEIRO</th>\n",
              "      <th>CO_MUNICIPIO_ESC</th>\n",
              "      <th>NO_MUNICIPIO_ESC</th>\n",
              "      <th>CO_UF_ESC</th>\n",
              "      <th>SG_UF_ESC</th>\n",
              "      <th>TP_DEPENDENCIA_ADM_ESC</th>\n",
              "      <th>TP_LOCALIZACAO_ESC</th>\n",
              "      <th>TP_SIT_FUNC_ESC</th>\n",
              "      <th>CO_MUNICIPIO_PROVA</th>\n",
              "      <th>NO_MUNICIPIO_PROVA</th>\n",
              "      <th>CO_UF_PROVA</th>\n",
              "      <th>SG_UF_PROVA</th>\n",
              "      <th>TP_PRESENCA_CN</th>\n",
              "      <th>TP_PRESENCA_CH</th>\n",
              "      <th>TP_PRESENCA_LC</th>\n",
              "      <th>TP_PRESENCA_MT</th>\n",
              "      <th>CO_PROVA_CN</th>\n",
              "      <th>CO_PROVA_CH</th>\n",
              "      <th>CO_PROVA_LC</th>\n",
              "      <th>CO_PROVA_MT</th>\n",
              "      <th>NU_NOTA_CN</th>\n",
              "      <th>NU_NOTA_CH</th>\n",
              "      <th>NU_NOTA_LC</th>\n",
              "      <th>NU_NOTA_MT</th>\n",
              "      <th>TX_RESPOSTAS_CN</th>\n",
              "      <th>TX_RESPOSTAS_CH</th>\n",
              "      <th>TX_RESPOSTAS_LC</th>\n",
              "      <th>TX_RESPOSTAS_MT</th>\n",
              "      <th>TP_LINGUA</th>\n",
              "      <th>TX_GABARITO_CN</th>\n",
              "      <th>TX_GABARITO_CH</th>\n",
              "      <th>TX_GABARITO_LC</th>\n",
              "      <th>TX_GABARITO_MT</th>\n",
              "      <th>TP_STATUS_REDACAO</th>\n",
              "      <th>NU_NOTA_COMP1</th>\n",
              "      <th>NU_NOTA_COMP2</th>\n",
              "      <th>NU_NOTA_COMP3</th>\n",
              "      <th>NU_NOTA_COMP4</th>\n",
              "      <th>NU_NOTA_COMP5</th>\n",
              "      <th>NU_NOTA_REDACAO</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>229215</th>\n",
              "      <td>210054456691</td>\n",
              "      <td>2021</td>\n",
              "      <td>3</td>\n",
              "      <td>M</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2930105.0</td>\n",
              "      <td>Senhor do Bonfim</td>\n",
              "      <td>29.0</td>\n",
              "      <td>BA</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2930105</td>\n",
              "      <td>Senhor do Bonfim</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>910.0</td>\n",
              "      <td>879.0</td>\n",
              "      <td>889.0</td>\n",
              "      <td>900.0</td>\n",
              "      <td>459.1</td>\n",
              "      <td>504.6</td>\n",
              "      <td>475.3</td>\n",
              "      <td>506.6</td>\n",
              "      <td>DBEEADCBBADDCEDCBCEDADCEEAEABDCEACBADBBBEDBAE</td>\n",
              "      <td>BABDACEBCEADEDACCBEAACEBEAECDABDCABEAEADCEEDB</td>\n",
              "      <td>BADAC99999BAECCADCDEEEABAABDCEDBCBCABCBEDCAABD...</td>\n",
              "      <td>DDEADCCCDCADDBDBACBDAACDBCADEEBAACECBAEBDDACA</td>\n",
              "      <td>0</td>\n",
              "      <td>ADCDCDBBBECDCCDCBCBDABCAADCBEBABEEBBBCABEDEDE</td>\n",
              "      <td>BADCBADBCEDDEBBADBCABEECCAEABEBAAECBBABAAEEBB</td>\n",
              "      <td>CAABBCAEAABDCDEADCEDBEDDDABBBBDEBCEADABDBACACD...</td>\n",
              "      <td>DDCABDCCAEDCEBBDBDAEEBADCAECDBCCCCDDCEEBABXEE</td>\n",
              "      <td>1.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>560.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104558</th>\n",
              "      <td>210054156569</td>\n",
              "      <td>2021</td>\n",
              "      <td>8</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2928000</td>\n",
              "      <td>Santaluz</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>159256</th>\n",
              "      <td>210054058014</td>\n",
              "      <td>2021</td>\n",
              "      <td>10</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2903904</td>\n",
              "      <td>Bom Jesus da Lapa</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>235539</th>\n",
              "      <td>210053042815</td>\n",
              "      <td>2021</td>\n",
              "      <td>6</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2900306.0</td>\n",
              "      <td>Acajutiba</td>\n",
              "      <td>29.0</td>\n",
              "      <td>BA</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2910602</td>\n",
              "      <td>Esplanada</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>911.0</td>\n",
              "      <td>880.0</td>\n",
              "      <td>890.0</td>\n",
              "      <td>902.0</td>\n",
              "      <td>438.3</td>\n",
              "      <td>386.1</td>\n",
              "      <td>389.9</td>\n",
              "      <td>403.4</td>\n",
              "      <td>CEADBCDEDDAEABABACACEDACDAACBEDECDBBDBABAECBE</td>\n",
              "      <td>CEABEDACEBDCDCADCADACBBEEDEEBADADEACDEBDCCABE</td>\n",
              "      <td>DAABA99999BDCDAEABDBCAEAEDCDACBADACBECEABCEEDC...</td>\n",
              "      <td>BDABCAEDAABECADAEEACABBDEADAABEAABCABBBCCADAB</td>\n",
              "      <td>0</td>\n",
              "      <td>CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB</td>\n",
              "      <td>BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC</td>\n",
              "      <td>ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...</td>\n",
              "      <td>ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA</td>\n",
              "      <td>1.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>460.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>204863</th>\n",
              "      <td>210051042110</td>\n",
              "      <td>2021</td>\n",
              "      <td>2</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2905701</td>\n",
              "      <td>Camaçari</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>911.0</td>\n",
              "      <td>880.0</td>\n",
              "      <td>890.0</td>\n",
              "      <td>902.0</td>\n",
              "      <td>382.9</td>\n",
              "      <td>435.2</td>\n",
              "      <td>480.0</td>\n",
              "      <td>613.9</td>\n",
              "      <td>ABADDCECDBAEDEDDAEABCDCABEDACDBDCCABDACEADEBE</td>\n",
              "      <td>EBBDABECDACABACCAEEDCBCEADBADCBDACBADECEBDDAC</td>\n",
              "      <td>D.C..99999BADACBDBDCBCEAADCBECEADADACDAAEDCADA...</td>\n",
              "      <td>EACEBCEDACDEABDDADCAEBEBBEBACDDCCACABBEBCBCAD</td>\n",
              "      <td>0</td>\n",
              "      <td>CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB</td>\n",
              "      <td>BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC</td>\n",
              "      <td>ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...</td>\n",
              "      <td>ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>680.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1597dc83-0e1f-433c-94da-54b0399a9c9f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1597dc83-0e1f-433c-94da-54b0399a9c9f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1597dc83-0e1f-433c-94da-54b0399a9c9f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-39817723-5e21-4e00-aa1f-ce792f3737fb\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-39817723-5e21-4e00-aa1f-ce792f3737fb')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-39817723-5e21-4e00-aa1f-ce792f3737fb button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Forma de filtrar\n",
        "condition01 = df.TP_SEXO == 'M'\n",
        "condition02 = df.IN_TREINEIRO == 1\n",
        "df.loc[(condition01) & (condition02)].sample(8)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 320
        },
        "id": "trzUEJJk8oBr",
        "outputId": "7a352e41-5e7b-4207-da69-88899ca147fc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        NU_INSCRICAO  NU_ANO  TP_FAIXA_ETARIA TP_SEXO  TP_ESTADO_CIVIL  \\\n",
              "96126   210051527273    2021                2       M                1   \n",
              "110727  210052330337    2021                1       M                1   \n",
              "151607  210051536618    2021                4       M                1   \n",
              "111460  210052775636    2021                1       M                1   \n",
              "118885  210053370590    2021                1       M                1   \n",
              "49358   210052474862    2021                2       M                1   \n",
              "168675  210053487881    2021                3       M                1   \n",
              "187845  210054154798    2021                1       M                1   \n",
              "\n",
              "        TP_COR_RACA  TP_NACIONALIDADE  TP_ST_CONCLUSAO  TP_ANO_CONCLUIU  \\\n",
              "96126             1                 1                3                0   \n",
              "110727            3                 3                3                0   \n",
              "151607            3                 1                3                0   \n",
              "111460            1                 1                3                0   \n",
              "118885            1                 1                3                0   \n",
              "49358             3                 1                3                0   \n",
              "168675            3                 1                3                0   \n",
              "187845            2                 1                3                0   \n",
              "\n",
              "        TP_ESCOLA  TP_ENSINO  IN_TREINEIRO  CO_MUNICIPIO_ESC NO_MUNICIPIO_ESC  \\\n",
              "96126           1        NaN             1               NaN              NaN   \n",
              "110727          1        NaN             1               NaN              NaN   \n",
              "151607          1        NaN             1               NaN              NaN   \n",
              "111460          1        NaN             1               NaN              NaN   \n",
              "118885          1        NaN             1               NaN              NaN   \n",
              "49358           1        NaN             1               NaN              NaN   \n",
              "168675          1        NaN             1               NaN              NaN   \n",
              "187845          1        NaN             1               NaN              NaN   \n",
              "\n",
              "        CO_UF_ESC SG_UF_ESC  TP_DEPENDENCIA_ADM_ESC  TP_LOCALIZACAO_ESC  \\\n",
              "96126         NaN       NaN                     NaN                 NaN   \n",
              "110727        NaN       NaN                     NaN                 NaN   \n",
              "151607        NaN       NaN                     NaN                 NaN   \n",
              "111460        NaN       NaN                     NaN                 NaN   \n",
              "118885        NaN       NaN                     NaN                 NaN   \n",
              "49358         NaN       NaN                     NaN                 NaN   \n",
              "168675        NaN       NaN                     NaN                 NaN   \n",
              "187845        NaN       NaN                     NaN                 NaN   \n",
              "\n",
              "        TP_SIT_FUNC_ESC  CO_MUNICIPIO_PROVA      NO_MUNICIPIO_PROVA  \\\n",
              "96126               NaN             2913903                   Ipiaú   \n",
              "110727              NaN             2923605               Paramirim   \n",
              "151607              NaN             2914703               Itaberaba   \n",
              "111460              NaN             2930501                Serrinha   \n",
              "118885              NaN             2927408                Salvador   \n",
              "49358               NaN             2910800        Feira de Santana   \n",
              "168675              NaN             2918357            João Dourado   \n",
              "187845              NaN             2928703  Santo Antônio de Jesus   \n",
              "\n",
              "        CO_UF_PROVA SG_UF_PROVA  TP_PRESENCA_CN  TP_PRESENCA_CH  \\\n",
              "96126            29          BA               1               1   \n",
              "110727           29          BA               1               1   \n",
              "151607           29          BA               1               1   \n",
              "111460           29          BA               1               1   \n",
              "118885           29          BA               1               1   \n",
              "49358            29          BA               1               1   \n",
              "168675           29          BA               1               1   \n",
              "187845           29          BA               0               1   \n",
              "\n",
              "        TP_PRESENCA_LC  TP_PRESENCA_MT  CO_PROVA_CN  CO_PROVA_CH  CO_PROVA_LC  \\\n",
              "96126                1               1        910.0        879.0        889.0   \n",
              "110727               1               1        911.0        880.0        890.0   \n",
              "151607               1               1        912.0        882.0        891.0   \n",
              "111460               1               1        909.0        881.0        892.0   \n",
              "118885               1               1        912.0        882.0        891.0   \n",
              "49358                1               1        909.0        881.0        892.0   \n",
              "168675               1               1        912.0        882.0        891.0   \n",
              "187845               1               0          NaN        879.0        889.0   \n",
              "\n",
              "        CO_PROVA_MT  NU_NOTA_CN  NU_NOTA_CH  NU_NOTA_LC  NU_NOTA_MT  \\\n",
              "96126         900.0       484.4       555.4       480.9       464.0   \n",
              "110727        902.0       459.5       373.5       353.8       440.9   \n",
              "151607        901.0       577.4       527.8       534.5       521.2   \n",
              "111460        899.0       547.4       572.5       459.4       613.6   \n",
              "118885        901.0       480.5       380.9       416.9       455.8   \n",
              "49358         899.0       366.4       387.6       469.4       488.5   \n",
              "168675        901.0       536.4       435.1       494.2       527.7   \n",
              "187845          NaN         NaN       527.2       541.8         NaN   \n",
              "\n",
              "                                      TX_RESPOSTAS_CN  \\\n",
              "96126   DABECEBDBCEBAEDCDBCAAEDACACCCCEBEAEBDBCBBDABD   \n",
              "110727  DCBCDDDDEBBBBBCCCCBECEBCBBDABBDDCCEDDBADBEDEB   \n",
              "151607  CABAEEEBEBBEBACEEADACAACDCADBDDCBAACCBADAEDED   \n",
              "111460  CEDEADBDCBDBBCCEADCBBECCACCDEAACAAEDEABCBABDE   \n",
              "118885  DCDAADDBEBCBDEBDABDDBBECEBCCEADBADAECCCDBCDDD   \n",
              "49358   ACDBDEDDEADCBDACBBDEECBEACEDEACDABEDABBCDDACE   \n",
              "168675  DABAEECAECDEAADADACACAECBACEAEEDCABCBCCBBCDCD   \n",
              "187845                                            NaN   \n",
              "\n",
              "                                      TX_RESPOSTAS_CH  \\\n",
              "96126   BCECDCDDCDEAEBCCEABABBABCAEBDAAAAEEBBDACBCEDA   \n",
              "110727  DCCABADBDBDECABDEABEBCDACEABEABCBDDADCDBDDDBB   \n",
              "151607  EABAACBBEABCDDBCCBBCDCBABBAECDABDADCAEBECCBCE   \n",
              "111460  DBEBCAECDADDEAECEDBDEDEBECAEBCBCADADBBADCECCD   \n",
              "118885  CAADACEABDADBBCCCBDBACDDDCCBDBDDBEDCACDBAECCD   \n",
              "49358   ECDECADBABDDCEAACDBADCBECAABCACDBECABCBEDCABD   \n",
              "168675  CCADCDDBECAABBBCDBAAAEBCBBDAAEDCCBAAADDAEBEAA   \n",
              "187845  BACEDADBBDEBACBBBCEAEBABCAEBDEBCAADCBEACAEEAB   \n",
              "\n",
              "                                          TX_RESPOSTAS_LC  \\\n",
              "96126   DABEB99999CBEDDADEBCDAABCCBCBADBCCDABEDCDAAAAE...   \n",
              "110727  99999BDC*EBAEEBBDBAEBCECDCABEADAEBEECBDACBDCBB...   \n",
              "151607  99999EDAAEDEEAEDBDAECDEABEEBEDEBAEAADABCDCDECC...   \n",
              "111460  DACDB99999DDBEBAEECDEDBCACDDABDBCEBDE*ECECCBEA...   \n",
              "118885  BABDC99999DBBCCDBCAECDDAADCEEBEBCCACABDBDDEDAB...   \n",
              "49358   EABBC99999CDBBCCDBBCDACCDCBBBCEABDBDAEDCDECBCD...   \n",
              "168675  99999CBACAACE*ECDDACEBEDBACBCDBBDEDABCCCACDDDA...   \n",
              "187845  99999CADEABDCDEADEBCDBBBAEBBEEDECABACBABEABACD...   \n",
              "\n",
              "                                      TX_RESPOSTAS_MT  TP_LINGUA  \\\n",
              "96126   BDCCDAAEBACCECBAACAAAABCCACBBEEEAAEAECEECDBDA          0   \n",
              "110727  EACDCBBAABADCBABBBADDAADACBBCCBCDDBCBECBBDDBE          1   \n",
              "151607  BCCBECDBDCADBACBDCDDBBDDCDBEBACCBAABDBAECDBAC          1   \n",
              "111460  DEAEABADDEAACEBCCCAAEBEABDBABCDBEACADDCADDDBA          0   \n",
              "118885  ACACDBECBBCBDDACDAECADBECAEDBCBAEBADBBCDCBBCA          0   \n",
              "49358   CADEBDABCECDABDEBCADEACBDBAEDDBADCEBADCCEABDC          0   \n",
              "168675  BCAAEDAAEDBDADABBDDBACEECADECDDACECABBDCABDBC          1   \n",
              "187845                                            NaN          1   \n",
              "\n",
              "                                       TX_GABARITO_CN  \\\n",
              "96126   ADCDCDBBBECDCCDCBCBDABCAADCBEBABEEBBBCABEDEDE   \n",
              "110727  CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB   \n",
              "151607  DABCEDEBEEBBCABEDDCBCBECDADCDAACBDCCCDBBBEBAB   \n",
              "111460  EDECABEDABCBEBACCDCBBEEBBCBDAAECDCBDCDBBBADCD   \n",
              "118885  DABCEDEBEEBBCABEDDCBCBECDADCDAACBDCCCDBBBEBAB   \n",
              "49358   EDECABEDABCBEBACCDCBBEEBBCBDAAECDCBDCDBBBADCD   \n",
              "168675  DABCEDEBEEBBCABEDDCBCBECDADCDAACBDCCCDBBBEBAB   \n",
              "187845                                            NaN   \n",
              "\n",
              "                                       TX_GABARITO_CH  \\\n",
              "96126   BADCBADBCEDDEBBADBCABEECCAEABEBAAECBBABAAEEBB   \n",
              "110727  BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC   \n",
              "151607  EBAAEADBCACBBABEECBAAEEBBBADCBADBCEDDEBBCAEAB   \n",
              "111460  BEECCAEABADBCAEBAAEEDDEBBBADBCBAAEEBBBADCCBBA   \n",
              "118885  EBAAEADBCACBBABEECBAAEEBBBADCBADBCEDDEBBCAEAB   \n",
              "49358   BEECCAEABADBCAEBAAEEDDEBBBADBCBAAEEBBBADCCBBA   \n",
              "168675  EBAAEADBCACBBABEECBAAEEBBBADCBADBCEDDEBBCAEAB   \n",
              "187845  BADCBADBCEDDEBBADBCABEECCAEABEBAAECBBABAAEEBB   \n",
              "\n",
              "                                           TX_GABARITO_LC  \\\n",
              "96126   CAABBCAEAABDCDEADCEDBEDDDABBBBDEBCEADABDBACACD...   \n",
              "110727  ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...   \n",
              "151607  ACABBACAEADCEADABDACDCEABDDADBEDDDEBBACCDDDCCE...   \n",
              "111460  ABBACAAECACDBDDADEBDDCBDCEDBEDDBBBBDCEEAADABAC...   \n",
              "118885  ACABBACAEADCEADABDACDCEABDDADBEDDDEBBACCDDDCCE...   \n",
              "49358   ABBACAAECACDBDDADEBDDCBDCEDBEDDBBBBDCEEAADABAC...   \n",
              "168675  ACABBACAEADCEADABDACDCEABDDADBEDDDEBBACCDDDCCE...   \n",
              "187845  CAABBCAEAABDCDEADCEDBEDDDABBBBDEBCEADABDBACACD...   \n",
              "\n",
              "                                       TX_GABARITO_MT  TP_STATUS_REDACAO  \\\n",
              "96126   DDCABDCCAEDCEBBDBDAEEBADCAECDBCCCCDDCEEBABXEE                1.0   \n",
              "110727  ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA                1.0   \n",
              "151607  DCCAEBABDDCABEECCBCCEXADDCEECDEBADCABBDBDEDCE                1.0   \n",
              "111460  EEXEBABDDCECCBCCECDCAEBADEABBDBDEDCEDCCADDCAB                1.0   \n",
              "118885  DCCAEBABDDCABEECCBCCEXADDCEECDEBADCABBDBDEDCE                1.0   \n",
              "49358   EEXEBABDDCECCBCCECDCAEBADEABBDBDEDCEDCCADDCAB                1.0   \n",
              "168675  DCCAEBABDDCABEECCBCCEXADDCEECDEBADCABBDBDEDCE                1.0   \n",
              "187845                                            NaN                1.0   \n",
              "\n",
              "        NU_NOTA_COMP1  NU_NOTA_COMP2  NU_NOTA_COMP3  NU_NOTA_COMP4  \\\n",
              "96126            80.0          120.0          120.0          120.0   \n",
              "110727          100.0          120.0          100.0          100.0   \n",
              "151607          140.0          120.0          120.0          120.0   \n",
              "111460          120.0          180.0          120.0          140.0   \n",
              "118885           80.0          120.0           80.0          120.0   \n",
              "49358           140.0          120.0          120.0          160.0   \n",
              "168675          140.0          160.0          120.0          120.0   \n",
              "187845          100.0          120.0          120.0          120.0   \n",
              "\n",
              "        NU_NOTA_COMP5  NU_NOTA_REDACAO  \n",
              "96126           140.0            580.0  \n",
              "110727           60.0            480.0  \n",
              "151607          140.0            640.0  \n",
              "111460          100.0            660.0  \n",
              "118885            0.0            400.0  \n",
              "49358            40.0            580.0  \n",
              "168675          100.0            640.0  \n",
              "187845          140.0            600.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b8a1e9c6-a310-488f-9508-57a3e8acd608\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>NU_INSCRICAO</th>\n",
              "      <th>NU_ANO</th>\n",
              "      <th>TP_FAIXA_ETARIA</th>\n",
              "      <th>TP_SEXO</th>\n",
              "      <th>TP_ESTADO_CIVIL</th>\n",
              "      <th>TP_COR_RACA</th>\n",
              "      <th>TP_NACIONALIDADE</th>\n",
              "      <th>TP_ST_CONCLUSAO</th>\n",
              "      <th>TP_ANO_CONCLUIU</th>\n",
              "      <th>TP_ESCOLA</th>\n",
              "      <th>TP_ENSINO</th>\n",
              "      <th>IN_TREINEIRO</th>\n",
              "      <th>CO_MUNICIPIO_ESC</th>\n",
              "      <th>NO_MUNICIPIO_ESC</th>\n",
              "      <th>CO_UF_ESC</th>\n",
              "      <th>SG_UF_ESC</th>\n",
              "      <th>TP_DEPENDENCIA_ADM_ESC</th>\n",
              "      <th>TP_LOCALIZACAO_ESC</th>\n",
              "      <th>TP_SIT_FUNC_ESC</th>\n",
              "      <th>CO_MUNICIPIO_PROVA</th>\n",
              "      <th>NO_MUNICIPIO_PROVA</th>\n",
              "      <th>CO_UF_PROVA</th>\n",
              "      <th>SG_UF_PROVA</th>\n",
              "      <th>TP_PRESENCA_CN</th>\n",
              "      <th>TP_PRESENCA_CH</th>\n",
              "      <th>TP_PRESENCA_LC</th>\n",
              "      <th>TP_PRESENCA_MT</th>\n",
              "      <th>CO_PROVA_CN</th>\n",
              "      <th>CO_PROVA_CH</th>\n",
              "      <th>CO_PROVA_LC</th>\n",
              "      <th>CO_PROVA_MT</th>\n",
              "      <th>NU_NOTA_CN</th>\n",
              "      <th>NU_NOTA_CH</th>\n",
              "      <th>NU_NOTA_LC</th>\n",
              "      <th>NU_NOTA_MT</th>\n",
              "      <th>TX_RESPOSTAS_CN</th>\n",
              "      <th>TX_RESPOSTAS_CH</th>\n",
              "      <th>TX_RESPOSTAS_LC</th>\n",
              "      <th>TX_RESPOSTAS_MT</th>\n",
              "      <th>TP_LINGUA</th>\n",
              "      <th>TX_GABARITO_CN</th>\n",
              "      <th>TX_GABARITO_CH</th>\n",
              "      <th>TX_GABARITO_LC</th>\n",
              "      <th>TX_GABARITO_MT</th>\n",
              "      <th>TP_STATUS_REDACAO</th>\n",
              "      <th>NU_NOTA_COMP1</th>\n",
              "      <th>NU_NOTA_COMP2</th>\n",
              "      <th>NU_NOTA_COMP3</th>\n",
              "      <th>NU_NOTA_COMP4</th>\n",
              "      <th>NU_NOTA_COMP5</th>\n",
              "      <th>NU_NOTA_REDACAO</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>96126</th>\n",
              "      <td>210051527273</td>\n",
              "      <td>2021</td>\n",
              "      <td>2</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2913903</td>\n",
              "      <td>Ipiaú</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>910.0</td>\n",
              "      <td>879.0</td>\n",
              "      <td>889.0</td>\n",
              "      <td>900.0</td>\n",
              "      <td>484.4</td>\n",
              "      <td>555.4</td>\n",
              "      <td>480.9</td>\n",
              "      <td>464.0</td>\n",
              "      <td>DABECEBDBCEBAEDCDBCAAEDACACCCCEBEAEBDBCBBDABD</td>\n",
              "      <td>BCECDCDDCDEAEBCCEABABBABCAEBDAAAAEEBBDACBCEDA</td>\n",
              "      <td>DABEB99999CBEDDADEBCDAABCCBCBADBCCDABEDCDAAAAE...</td>\n",
              "      <td>BDCCDAAEBACCECBAACAAAABCCACBBEEEAAEAECEECDBDA</td>\n",
              "      <td>0</td>\n",
              "      <td>ADCDCDBBBECDCCDCBCBDABCAADCBEBABEEBBBCABEDEDE</td>\n",
              "      <td>BADCBADBCEDDEBBADBCABEECCAEABEBAAECBBABAAEEBB</td>\n",
              "      <td>CAABBCAEAABDCDEADCEDBEDDDABBBBDEBCEADABDBACACD...</td>\n",
              "      <td>DDCABDCCAEDCEBBDBDAEEBADCAECDBCCCCDDCEEBABXEE</td>\n",
              "      <td>1.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>580.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>110727</th>\n",
              "      <td>210052330337</td>\n",
              "      <td>2021</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2923605</td>\n",
              "      <td>Paramirim</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>911.0</td>\n",
              "      <td>880.0</td>\n",
              "      <td>890.0</td>\n",
              "      <td>902.0</td>\n",
              "      <td>459.5</td>\n",
              "      <td>373.5</td>\n",
              "      <td>353.8</td>\n",
              "      <td>440.9</td>\n",
              "      <td>DCBCDDDDEBBBBBCCCCBECEBCBBDABBDDCCEDDBADBEDEB</td>\n",
              "      <td>DCCABADBDBDECABDEABEBCDACEABEABCBDDADCDBDDDBB</td>\n",
              "      <td>99999BDC*EBAEEBBDBAEBCECDCABEADAEBEECBDACBDCBB...</td>\n",
              "      <td>EACDCBBAABADCBABBBADDAADACBBCCBCDDBCBECBBDDBE</td>\n",
              "      <td>1</td>\n",
              "      <td>CDBBBCABEDEDEAAEBACCCBDABCDCBCBDECDADCDBBEEBB</td>\n",
              "      <td>BBBAAEECBBABEECEBAAEADBCACAEABEDDEBBBADBCBADC</td>\n",
              "      <td>ABBCAEAACADDCACDCADABBBBDEBBACEADCEBDDACEEDDDB...</td>\n",
              "      <td>ECCCABBDBDDDCEDDCABXEEEBABEDCEDCCAEBADBCCECDA</td>\n",
              "      <td>1.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>60.0</td>\n",
              "      <td>480.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>151607</th>\n",
              "      <td>210051536618</td>\n",
              "      <td>2021</td>\n",
              "      <td>4</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2914703</td>\n",
              "      <td>Itaberaba</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>912.0</td>\n",
              "      <td>882.0</td>\n",
              "      <td>891.0</td>\n",
              "      <td>901.0</td>\n",
              "      <td>577.4</td>\n",
              "      <td>527.8</td>\n",
              "      <td>534.5</td>\n",
              "      <td>521.2</td>\n",
              "      <td>CABAEEEBEBBEBACEEADACAACDCADBDDCBAACCBADAEDED</td>\n",
              "      <td>EABAACBBEABCDDBCCBBCDCBABBAECDABDADCAEBECCBCE</td>\n",
              "      <td>99999EDAAEDEEAEDBDAECDEABEEBEDEBAEAADABCDCDECC...</td>\n",
              "      <td>BCCBECDBDCADBACBDCDDBBDDCDBEBACCBAABDBAECDBAC</td>\n",
              "      <td>1</td>\n",
              "      <td>DABCEDEBEEBBCABEDDCBCBECDADCDAACBDCCCDBBBEBAB</td>\n",
              "      <td>EBAAEADBCACBBABEECBAAEEBBBADCBADBCEDDEBBCAEAB</td>\n",
              "      <td>ACABBACAEADCEADABDACDCEABDDADBEDDDEBBACCDDDCCE...</td>\n",
              "      <td>DCCAEBABDDCABEECCBCCEXADDCEECDEBADCABBDBDEDCE</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>640.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>111460</th>\n",
              "      <td>210052775636</td>\n",
              "      <td>2021</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2930501</td>\n",
              "      <td>Serrinha</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>909.0</td>\n",
              "      <td>881.0</td>\n",
              "      <td>892.0</td>\n",
              "      <td>899.0</td>\n",
              "      <td>547.4</td>\n",
              "      <td>572.5</td>\n",
              "      <td>459.4</td>\n",
              "      <td>613.6</td>\n",
              "      <td>CEDEADBDCBDBBCCEADCBBECCACCDEAACAAEDEABCBABDE</td>\n",
              "      <td>DBEBCAECDADDEAECEDBDEDEBECAEBCBCADADBBADCECCD</td>\n",
              "      <td>DACDB99999DDBEBAEECDEDBCACDDABDBCEBDE*ECECCBEA...</td>\n",
              "      <td>DEAEABADDEAACEBCCCAAEBEABDBABCDBEACADDCADDDBA</td>\n",
              "      <td>0</td>\n",
              "      <td>EDECABEDABCBEBACCDCBBEEBBCBDAAECDCBDCDBBBADCD</td>\n",
              "      <td>BEECCAEABADBCAEBAAEEDDEBBBADBCBAAEEBBBADCCBBA</td>\n",
              "      <td>ABBACAAECACDBDDADEBDDCBDCEDBEDDBBBBDCEEAADABAC...</td>\n",
              "      <td>EEXEBABDDCECCBCCECDCAEBADEABBDBDEDCEDCCADDCAB</td>\n",
              "      <td>1.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>180.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>660.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118885</th>\n",
              "      <td>210053370590</td>\n",
              "      <td>2021</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2927408</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>912.0</td>\n",
              "      <td>882.0</td>\n",
              "      <td>891.0</td>\n",
              "      <td>901.0</td>\n",
              "      <td>480.5</td>\n",
              "      <td>380.9</td>\n",
              "      <td>416.9</td>\n",
              "      <td>455.8</td>\n",
              "      <td>DCDAADDBEBCBDEBDABDDBBECEBCCEADBADAECCCDBCDDD</td>\n",
              "      <td>CAADACEABDADBBCCCBDBACDDDCCBDBDDBEDCACDBAECCD</td>\n",
              "      <td>BABDC99999DBBCCDBCAECDDAADCEEBEBCCACABDBDDEDAB...</td>\n",
              "      <td>ACACDBECBBCBDDACDAECADBECAEDBCBAEBADBBCDCBBCA</td>\n",
              "      <td>0</td>\n",
              "      <td>DABCEDEBEEBBCABEDDCBCBECDADCDAACBDCCCDBBBEBAB</td>\n",
              "      <td>EBAAEADBCACBBABEECBAAEEBBBADCBADBCEDDEBBCAEAB</td>\n",
              "      <td>ACABBACAEADCEADABDACDCEABDDADBEDDDEBBACCDDDCCE...</td>\n",
              "      <td>DCCAEBABDDCABEECCBCCEXADDCEECDEBADCABBDBDEDCE</td>\n",
              "      <td>1.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>400.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49358</th>\n",
              "      <td>210052474862</td>\n",
              "      <td>2021</td>\n",
              "      <td>2</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2910800</td>\n",
              "      <td>Feira de Santana</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>909.0</td>\n",
              "      <td>881.0</td>\n",
              "      <td>892.0</td>\n",
              "      <td>899.0</td>\n",
              "      <td>366.4</td>\n",
              "      <td>387.6</td>\n",
              "      <td>469.4</td>\n",
              "      <td>488.5</td>\n",
              "      <td>ACDBDEDDEADCBDACBBDEECBEACEDEACDABEDABBCDDACE</td>\n",
              "      <td>ECDECADBABDDCEAACDBADCBECAABCACDBECABCBEDCABD</td>\n",
              "      <td>EABBC99999CDBBCCDBBCDACCDCBBBCEABDBDAEDCDECBCD...</td>\n",
              "      <td>CADEBDABCECDABDEBCADEACBDBAEDDBADCEBADCCEABDC</td>\n",
              "      <td>0</td>\n",
              "      <td>EDECABEDABCBEBACCDCBBEEBBCBDAAECDCBDCDBBBADCD</td>\n",
              "      <td>BEECCAEABADBCAEBAAEEDDEBBBADBCBAAEEBBBADCCBBA</td>\n",
              "      <td>ABBACAAECACDBDDADEBDDCBDCEDBEDDBBBBDCEEAADABAC...</td>\n",
              "      <td>EEXEBABDDCECCBCCECDCAEBADEABBDBDEDCEDCCADDCAB</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>40.0</td>\n",
              "      <td>580.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>168675</th>\n",
              "      <td>210053487881</td>\n",
              "      <td>2021</td>\n",
              "      <td>3</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2918357</td>\n",
              "      <td>João Dourado</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>912.0</td>\n",
              "      <td>882.0</td>\n",
              "      <td>891.0</td>\n",
              "      <td>901.0</td>\n",
              "      <td>536.4</td>\n",
              "      <td>435.1</td>\n",
              "      <td>494.2</td>\n",
              "      <td>527.7</td>\n",
              "      <td>DABAEECAECDEAADADACACAECBACEAEEDCABCBCCBBCDCD</td>\n",
              "      <td>CCADCDDBECAABBBCDBAAAEBCBBDAAEDCCBAAADDAEBEAA</td>\n",
              "      <td>99999CBACAACE*ECDDACEBEDBACBCDBBDEDABCCCACDDDA...</td>\n",
              "      <td>BCAAEDAAEDBDADABBDDBACEECADECDDACECABBDCABDBC</td>\n",
              "      <td>1</td>\n",
              "      <td>DABCEDEBEEBBCABEDDCBCBECDADCDAACBDCCCDBBBEBAB</td>\n",
              "      <td>EBAAEADBCACBBABEECBAAEEBBBADCBADBCEDDEBBCAEAB</td>\n",
              "      <td>ACABBACAEADCEADABDACDCEABDDADBEDDDEBBACCDDDCCE...</td>\n",
              "      <td>DCCAEBABDDCABEECCBCCEXADDCEECDEBADCABBDBDEDCE</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>640.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>187845</th>\n",
              "      <td>210054154798</td>\n",
              "      <td>2021</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2928703</td>\n",
              "      <td>Santo Antônio de Jesus</td>\n",
              "      <td>29</td>\n",
              "      <td>BA</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>879.0</td>\n",
              "      <td>889.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>527.2</td>\n",
              "      <td>541.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>BACEDADBBDEBACBBBCEAEBABCAEBDEBCAADCBEACAEEAB</td>\n",
              "      <td>99999CADEABDCDEADEBCDBBBAEBBEEDECABACBABEABACD...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>BADCBADBCEDDEBBADBCABEECCAEABEBAAECBBABAAEEBB</td>\n",
              "      <td>CAABBCAEAABDCDEADCEDBEDDDABBBBDEBCEADABDBACACD...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>600.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b8a1e9c6-a310-488f-9508-57a3e8acd608')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b8a1e9c6-a310-488f-9508-57a3e8acd608 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b8a1e9c6-a310-488f-9508-57a3e8acd608');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-010db738-14ea-42be-a3af-71e6cda8d6e0\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-010db738-14ea-42be-a3af-71e6cda8d6e0')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-010db738-14ea-42be-a3af-71e6cda8d6e0 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#O operador '~' é um operador de negação\n",
        "#Filtra todas as cidades que não sejam Itabuna e Salvador\n",
        "df[~df.NO_MUNICIPIO_PROVA.isin(['Itabuna', 'Salvador'])].NO_MUNICIPIO_PROVA.unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "otejTjen9jk_",
        "outputId": "f49d2f64-d063-46a2-f15e-1b336510e132"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Ruy Barbosa', 'Barreiras', 'Santo Estêvão', 'Feira de Santana',\n",
              "       'Urandi', 'Casa Nova', 'Serrinha', 'Entre Rios', 'Camaçari',\n",
              "       'Vera Cruz', 'Teixeira de Freitas', 'Vitória da Conquista',\n",
              "       'Seabra', 'Eunápolis', 'Pojuca', 'Senhor do Bonfim', 'Caculé',\n",
              "       'Juazeiro', 'Paramirim', 'Itapetinga', 'Ubaitaba', 'Simões Filho',\n",
              "       'Poções', 'Ipirá', 'Brumado', 'Maracás', 'Candeias',\n",
              "       'Coração de Maria', 'Santo Amaro', 'Tucano', 'Amélia Rodrigues',\n",
              "       'Ilhéus', 'Santo Antônio de Jesus', 'Jeremoabo', 'Ipiaú',\n",
              "       'Santana', 'Araci', 'Morro do Chapéu', 'Guanambi',\n",
              "       'Santa Rita de Cássia', 'Cruz das Almas', 'Conceição do Coité',\n",
              "       'Lauro de Freitas', 'Macaúbas', 'Bom Jesus da Lapa', 'Paratinga',\n",
              "       'Baixa Grande', 'Rio Real', 'Nova Viçosa', 'Ribeira do Pombal',\n",
              "       'Correntina', 'Valença', 'Cícero Dantas', 'Santa Maria da Vitória',\n",
              "       'Ibotirama', 'Itaberaba', 'Formosa do Rio Preto', 'Anagé',\n",
              "       'Xique-Xique', 'Alagoinhas', 'Amargosa', 'Paripiranga',\n",
              "       'Paulo Afonso', 'Gandu', 'Valente', 'Riacho de Santana', 'Irará',\n",
              "       'Caetité', 'Jaguaquara', 'Ibicaraí', 'Jaguarari',\n",
              "       'Brotas de Macaúbas', 'Porto Seguro', 'Cachoeira', 'Boquira',\n",
              "       'Ibititá', 'Jacobina', 'Castro Alves', 'Carinhanha', 'Itamaraju',\n",
              "       'Cândido Sales', 'Sapeaçu', 'Luís Eduardo Magalhães', 'Inhambupe',\n",
              "       'Catu', 'Euclides da Cunha', 'São Gonçalo dos Campos',\n",
              "       'Palmas de Monte Alto', 'São Sebastião do Passé',\n",
              "       'Livramento de Nossa Senhora', 'Jiquiriçá', 'Nazaré', 'Cordeiros',\n",
              "       'Presidente Tancredo Neves', 'Itambé', 'João Dourado', 'Uibaí',\n",
              "       'Esplanada', 'Barra', 'Jequié', 'Iraquara', 'Ituberá',\n",
              "       'Oliveira dos Brejinhos', 'Rio de Contas', 'Presidente Dutra',\n",
              "       'Mutuípe', 'Cocos', 'Pilão Arcado', 'Caravelas', 'Milagres',\n",
              "       'Campo Formoso', 'Riachão do Jacuípe', 'Irecê', 'Canavieiras',\n",
              "       \"Dias d'Ávila\", 'Coaraci', 'Jussara', 'Canarana', 'Una', 'Ubaíra',\n",
              "       'Barra do Choça', 'São Gabriel', 'Camacan', 'Barra da Estiva',\n",
              "       'Governador Mangabeira', 'Mucuri', 'Sobradinho', 'Prado', 'Curaçá',\n",
              "       'Conceição do Jacuípe', 'Itajuípe', 'Conceição da Feira',\n",
              "       'São Félix', 'Itabela', 'Mata de São João', 'São Felipe',\n",
              "       'Remanso', 'Cansanção', 'Miguel Calmon', 'Serra do Ramalho',\n",
              "       'Maragogipe', 'Capim Grosso', 'Sento Sé', 'Buerarema',\n",
              "       'Medeiros Neto', 'Camamu', 'Muritiba', 'Brejões',\n",
              "       'Riachão das Neves', 'Santaluz', 'Monte Santo', 'Itanhém',\n",
              "       'São Francisco do Conde', 'Campo Alegre de Lourdes',\n",
              "       'Serra Dourada', 'Lapão', 'Itaparica', 'Uauá', 'Pindobaçu',\n",
              "       'Umburanas'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Pegar o nome das colunas que possuem nota no nome\n",
        "df.columns[(df.columns.str.contains('NOTA')) & (~df.columns.str.contains('COMP'))].tolist()\n",
        "idCandidato = ['NU_INSCRICAO']"
      ],
      "metadata": {
        "id": "NvWaHmDg-N-g"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Gráficos no pandas\n",
        "df.TP_ESCOLA.value_counts().plot(kind = 'bar')\n",
        "plt.title('Tipo escola dos participantes no ENEM 2021')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 485
        },
        "id": "L8Fras_g_5yQ",
        "outputId": "1d32ebe4-ca17-4299-c586-b2112fff831d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Tipo escola dos participantes no ENEM 2021')"
            ]
          },
          "metadata": {},
          "execution_count": 28
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.TP_SEXO.value_counts().plot(kind = 'bar', color = 'purple')\n",
        "plt.title('Genero dos participantes de ENEM')\n",
        "plt.xlabel('Sexo')\n",
        "plt.ylabel('Quantidade')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 470
        },
        "id": "x8hG-e6tBwwk",
        "outputId": "5c8812d6-858e-407d-ff2a-4f7f19858ce4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "(df.NO_MUNICIPIO_PROVA\n",
        " .value_counts()\n",
        " .reset_index()\n",
        " .rename(columns = {'NO_MUNICIPIO_PROVA' : 'Município', 'count' : 'Quantidade'})\n",
        " .nlargest(n = 15, columns = 'Quantidade')\n",
        " .set_index('Município')\n",
        " .plot(\n",
        "     kind = 'barh',\n",
        "     color = 'orange',\n",
        "     xlabel = 'Quantidade',\n",
        "     title = 'Municípios baianos com a maior quantidade de inscritos no ENEM 2021'\n",
        " )\n",
        " )"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 490
        },
        "id": "9OWd4bDkDluq",
        "outputId": "654ac4dd-9bbe-46b0-e1e5-6c7fb6cd466a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: title={'center': 'Municípios baianos com a maior quantidade de inscritos no ENEM 2021'}, xlabel='Quantidade', ylabel='Município'>"
            ]
          },
          "metadata": {},
          "execution_count": 20
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gráfico de pizza\n",
        "df.TP_SEXO.value_counts().plot(\n",
        "    kind = 'pie',\n",
        "    legend = False,\n",
        "    autopct = '%.2f'\n",
        ")"
      ],
      "metadata": {
        "id": "rzYiTVFpEhx0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "76159f6b-e03a-40e0-c1d3-5a165b8b7018"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: ylabel='count'>"
            ]
          },
          "metadata": {},
          "execution_count": 28
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "b80MsE-bd7y5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Mapeando valores\n",
        "(df.TP_ESCOLA.map({1: 'Não Respondeu', 2: 'Pública', 3: 'Privada'})\n",
        "  .value_counts()\n",
        "  .plot(kind = 'pie'))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "LmmfuxxHcud1",
        "outputId": "aaebe03a-bf83-4827-e41f-d66a85505deb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: ylabel='count'>"
            ]
          },
          "metadata": {},
          "execution_count": 30
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.plot(kind = 'scatter', x = 'NU_NOTA_MT', y = 'NU_NOTA_CN')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "D8_ooNmIel3e",
        "outputId": "255cd711-fa39-4421-8898-7c2beffa1496"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='NU_NOTA_MT', ylabel='NU_NOTA_CN'>"
            ]
          },
          "metadata": {},
          "execution_count": 34
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#histograma\n",
        "df.NU_NOTA_MT.plot(kind = 'hist')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        },
        "id": "ZHPerJnWfKUD",
        "outputId": "a9e60b44-448b-4b6c-fc87-2d6c419ccbf3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: ylabel='Frequency'>"
            ]
          },
          "metadata": {},
          "execution_count": 37
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "Ki34hl0bfyfl"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}